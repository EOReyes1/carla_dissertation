I0902 18:35:04.219619 140310245873472 __init__.py:409] $HOME=/home/erdos
I0902 18:35:04.220006 140310245873472 __init__.py:409] matplotlib data path /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data
I0902 18:35:04.223077 140310245873472 __init__.py:1156] loaded rc file /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
I0902 18:35:04.224442 140310245873472 __init__.py:1879] matplotlib version 2.2.4
I0902 18:35:04.224497 140310245873472 __init__.py:1880] interactive is False
I0902 18:35:04.225354 140310245873472 __init__.py:1881] platform is linux
I0902 18:35:04.225488 140310245873472 __init__.py:1882] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'sitecustomize', 'encodings.cp437', 'signal', 'enum', 'absl', 'absl.app', '__future__', 'pdb', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'cmd', 'string', '_string', 'bdb', 'fnmatch', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'linecache', 'tokenize', 'token', 'code', 'traceback', 'argparse', 'copy', 'textwrap', 'gettext', 'locale', 'struct', '_struct', 'codeop', 'glob', 'pprint', 'absl.command_name', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'csv', '_csv', 'absl.flags._helpers', 'fcntl', 'termios', 'six', 'six.moves', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'logging', 'time', 'threading', 'atexit', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'typing', 'typing.io', 'typing.re', 'absl.flags._validators', 'absl.logging', 'getpass', 'socket', '_socket', 'selectors', 'math', 'select', 'timeit', 'gc', 'absl.logging.converter', 'faulthandler', 'erdos', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'pickle', '_compat_pickle', '_pickle', 'array', '__mp_main__', 'erdos.internal', 'erdos.streams', 'erdos.message', 'erdos.timestamp', 'erdos.operator', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'ntpath', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', '_ctypes', 'ctypes', 'ctypes._endian', 'numpy.core._internal', 'platform', 'subprocess', '_posixsubprocess', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random._bit_generator', '_cython_0_29_19', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', 'hashlib', '_hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'tempfile', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'erdos.profile', 'erdos.utils', 'pylot', 'pylot.flags', 'pylot.control', 'pylot.control.flags', 'pylot.debug', 'pylot.debug.flags', 'pylot.perception', 'pylot.perception.flags', 'pylot.planning', 'pylot.planning.flags', 'pylot.planning.frenet_optimal_trajectory', 'pylot.planning.frenet_optimal_trajectory.flags', 'pylot.planning.hybrid_astar', 'pylot.planning.hybrid_astar.flags', 'pylot.planning.rrt_star', 'pylot.planning.rrt_star.flags', 'pylot.prediction', 'pylot.prediction.flags', 'pylot.simulation', 'pylot.simulation.flags', 'pylot.component_creator', 'pylot.operator_creator', 'pylot.utils', 'tensorflow', 'tensorflow._api', 'tensorflow.python', 'tensorflow.tools', 'tensorflow.core', 'tensorflow.compiler', 'tensorflow.lite', 'tensorflow.keras', 'tensorflow.contrib', 'tensorflow.compat', 'tensorflow.summary', 'tensorflow.examples', 'tensorflow.estimator', 'tensorflow_core', 'distutils', 'tensorflow_core.python', 'tensorflow_core.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow.python.pywrap_tensorflow_internal', 'imp', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.python.util', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow_core.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.util.tf_contextlib', 'tensorflow_core.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'calendar', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow_core.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.framework.ops', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python.util.nest', 'tensorflow.python.framework.dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.fast_tensor_util', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow_core.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.framework.constant_op', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'uuid', 'ctypes.util', 'tensorflow.python.framework.config', 'tensorflow.python.client', 'tensorflow.python.client.client_lib', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.standard_ops', 'tensorflow_core.python.autograph', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'queue', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python.platform.gfile', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'distutils.version', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.sparse', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.func_graph', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.compiler', 'astor', 'astor.code_gen', 'astor.op_util', 'astor.node_util', 'astor.string_repr', 'astor.source_repr', 'astor.file_util', 'astor.tree_walk', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'tensorflow_core.compiler', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', 'ipaddress', '_ssl', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.python.tpu', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.ops.initializers_ns', 'tensorflow_core.python.keras', 'tensorflow.python.keras', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.pool', 'multiprocessing.util', 'tarfile', 'zipfile', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', '_cython_0_29_21', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'multiprocessing.connection', '_multiprocessing', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.sslproto', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.saving.model_config', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.saved_model.builder', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'six.moves.http_client', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.util.selectors', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3.util.url', 'six.moves.urllib.parse', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.response', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'urllib3.contrib', 'requests.__version__', 'requests.utils', 'cgi', 'html', 'html.entities', 'requests.certs', 'certifi', 'certifi.core', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.selectors', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.response', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3.contrib', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'unicodedata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'urllib3.contrib.socks', 'socks', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.training_arrays', 'scipy', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', '_cython_0_29', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._reordering', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.engine.training_v2', 'tensorflow.python.keras.engine.training_v2_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'pydot', 'dot_parser', 'pyparsing', 'tensorflow.python.keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.models', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'PIL', 'PIL._version', 'PIL.ImageEnhance', 'PIL.Image', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'PIL.ImageFilter', 'PIL.ImageStat', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'numpy.dual', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special.basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.misc.pilutil', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.io', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.ops', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'fractions', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.moving_averages', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'absl.testing._parameterized_async', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow_core._api', 'tensorflow._api.v1', 'tensorflow._api.v1.app', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow._api.v1.audio', 'tensorflow._api.v1.autograph', 'tensorflow._api.v1.autograph.experimental', 'tensorflow._api.v1.bitwise', 'tensorflow._api.v1.compat', 'tensorflow._api.v1.compat.v1', 'tensorflow._api.v1.compat.v1.app', 'tensorflow._api.v1.compat.v1.audio', 'tensorflow._api.v1.compat.v1.autograph', 'tensorflow._api.v1.compat.v1.autograph.experimental', 'tensorflow._api.v1.compat.v1.bitwise', 'tensorflow._api.v1.compat.v1.compat', 'tensorflow._api.v1.compat.v1.config', 'tensorflow._api.v1.compat.v1.config.experimental', 'tensorflow._api.v1.compat.v1.config.optimizer', 'tensorflow._api.v1.compat.v1.config.threading', 'tensorflow._api.v1.compat.v1.data', 'tensorflow._api.v1.compat.v1.data.experimental', 'tensorflow._api.v1.compat.v1.debugging', 'tensorflow._api.v1.compat.v1.distribute', 'tensorflow._api.v1.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v1.compat.v1.distribute.experimental', 'tensorflow._api.v1.compat.v1.distributions', 'tensorflow._api.v1.compat.v1.dtypes', 'tensorflow._api.v1.compat.v1.errors', 'tensorflow._api.v1.compat.v1.experimental', 'tensorflow._api.v1.compat.v1.feature_column', 'tensorflow._api.v1.compat.v1.gfile', 'tensorflow._api.v1.compat.v1.graph_util', 'tensorflow._api.v1.compat.v1.image', 'tensorflow._api.v1.compat.v1.initializers', 'tensorflow._api.v1.compat.v1.io', 'tensorflow._api.v1.compat.v1.io.gfile', 'tensorflow._api.v1.compat.v1.layers', 'tensorflow._api.v1.compat.v1.layers.experimental', 'tensorflow._api.v1.compat.v1.linalg', 'tensorflow._api.v1.compat.v1.lite', 'tensorflow._api.v1.compat.v1.lite.constants', 'tensorflow_core.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v1.compat.v1.lite.experimental', 'tensorflow._api.v1.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '4259f303abd9c6563476d3977e38810b', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.lite.python.convert', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v1.compat.v1.logging', 'tensorflow._api.v1.compat.v1.lookup', 'tensorflow._api.v1.compat.v1.lookup.experimental', 'tensorflow._api.v1.compat.v1.losses', 'tensorflow._api.v1.compat.v1.manip', 'tensorflow._api.v1.compat.v1.math', 'tensorflow._api.v1.compat.v1.metrics', 'tensorflow._api.v1.compat.v1.nest', 'tensorflow._api.v1.compat.v1.nn', 'tensorflow._api.v1.compat.v1.nn.rnn_cell', 'tensorflow._api.v1.compat.v1.profiler', 'tensorflow._api.v1.compat.v1.python_io', 'tensorflow._api.v1.compat.v1.quantization', 'tensorflow._api.v1.compat.v1.queue', 'tensorflow._api.v1.compat.v1.ragged', 'tensorflow._api.v1.compat.v1.random', 'tensorflow._api.v1.compat.v1.random.experimental', 'tensorflow._api.v1.compat.v1.raw_ops', 'tensorflow._api.v1.compat.v1.resource_loader', 'tensorflow._api.v1.compat.v1.saved_model', 'tensorflow._api.v1.compat.v1.saved_model.builder', 'tensorflow._api.v1.compat.v1.saved_model.constants', 'tensorflow._api.v1.compat.v1.saved_model.experimental', 'tensorflow._api.v1.compat.v1.saved_model.loader', 'tensorflow._api.v1.compat.v1.saved_model.main_op', 'tensorflow._api.v1.compat.v1.saved_model.signature_constants', 'tensorflow._api.v1.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v1.compat.v1.saved_model.tag_constants', 'tensorflow._api.v1.compat.v1.saved_model.utils', 'tensorflow._api.v1.compat.v1.sets', 'tensorflow._api.v1.compat.v1.signal', 'tensorflow._api.v1.compat.v1.sparse', 'tensorflow._api.v1.compat.v1.spectral', 'tensorflow._api.v1.compat.v1.strings', 'tensorflow._api.v1.compat.v1.summary', 'tensorflow._api.v1.compat.v1.sysconfig', 'tensorflow._api.v1.compat.v1.test', 'tensorflow._api.v1.compat.v1.tpu', 'tensorflow._api.v1.compat.v1.tpu.experimental', 'tensorflow._api.v1.compat.v1.train', 'tensorflow._api.v1.compat.v1.train.experimental', 'tensorflow._api.v1.compat.v1.train.queue_runner', 'tensorflow._api.v1.compat.v1.user_ops', 'tensorflow._api.v1.compat.v1.version', 'tensorflow._api.v1.compat.v1.xla', 'tensorflow._api.v1.compat.v1.xla.experimental', 'tensorflow_estimator', 'tensorflow_estimator._api', 'tensorflow_estimator._api.v1', 'tensorflow_estimator._api.v1.estimator', 'tensorflow_estimator._api.v1.estimator.experimental', 'tensorflow_estimator.python', 'tensorflow_estimator.python.estimator', 'tensorflow_estimator.python.estimator.canned', 'tensorflow_estimator.python.estimator.canned.dnn', 'tensorflow_estimator.python.estimator.estimator', 'tensorflow.python.distribute.estimator_training', 'tensorflow.python.training.evaluation', 'tensorflow.python.util.compat_internal', 'tensorflow_estimator.python.estimator.model_fn', 'tensorflow_estimator.python.estimator.mode_keys', 'tensorflow_estimator.python.estimator.run_config', 'tensorflow_estimator.python.estimator.util', 'tensorflow_estimator.python.estimator.export', 'tensorflow_estimator.python.estimator.export.export_lib', 'tensorflow_estimator.python.estimator.export.export', 'tensorflow_estimator.python.estimator.canned.head', 'tensorflow_estimator.python.estimator.canned.metric_keys', 'tensorflow_estimator.python.estimator.canned.prediction_keys', 'tensorflow_estimator.python.estimator.export.export_output', 'tensorflow_estimator.python.estimator.canned.optimizers', 'tensorflow_estimator.python.estimator.head', 'tensorflow_estimator.python.estimator.head.head_utils', 'tensorflow_estimator.python.estimator.head.binary_class_head', 'tensorflow_estimator.python.estimator.head.base_head', 'tensorflow_estimator.python.estimator.head.multi_class_head', 'tensorflow_estimator.python.estimator.head.regression_head', 'tensorflow_estimator.python.estimator.canned.kmeans', 'tensorflow.python.ops.clustering_ops', 'tensorflow.python.ops.gen_clustering_ops', 'tensorflow_estimator.python.estimator.canned.linear', 'tensorflow_estimator.python.estimator.canned.linear_optimizer', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils.sdca_ops', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils.sharded_mutable_dense_hashtable', 'tensorflow_estimator.python.estimator.early_stopping', 'tensorflow_estimator.python.estimator.hooks', 'tensorflow_estimator.python.estimator.hooks.hooks', 'tensorflow_estimator._api.v1.estimator.export', 'tensorflow_estimator._api.v1.estimator.inputs', 'tensorflow_estimator.python.estimator.inputs', 'tensorflow_estimator.python.estimator.inputs.numpy_io', 'tensorflow_estimator.python.estimator.inputs.queues', 'tensorflow_estimator.python.estimator.inputs.queues.feeding_functions', 'tensorflow_estimator.python.estimator.inputs.queues.feeding_queue_runner', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas._typing', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.interval', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.tslibs', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.easter', 'dateutil.relativedelta', 'dateutil._common', 'pandas._libs.properties', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.ops_dispatch', 'pandas._libs.algos', 'pandas._libs.lib', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.construction', 'pandas.core.common', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.arrays.masked', 'pandas.core.nanops', 'pandas.core.array_algos', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.tseries.offsets', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.aggregation', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.times', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.generic', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.concat', 'pandas.core.internals.managers', 'pandas.core.internals.ops', 'pandas.core.shared_docs', 'pandas.io.formats.format', 'pandas.io.common', 'mmap', 'pandas.core.indexes.accessors', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.util.numba_', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.frame', 'pandas.core.internals.construction', 'pandas.core.reshape', 'pandas.core.reshape.melt', 'pandas.core.reshape.concat', 'pandas.core.reshape.util', 'pandas.io.formats.info', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._odswriter', 'pandas._libs.json', 'pandas.io.formats.excel', 'pandas.io.formats.css', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tensorflow_estimator.python.estimator.inputs.pandas_io', 'tensorflow_estimator._api.v1.estimator.tpu', 'tensorflow_estimator._api.v1.estimator.tpu.experimental', 'tensorflow_estimator.python.estimator.tpu', 'tensorflow_estimator.python.estimator.tpu._tpu_estimator_embedding', 'tensorflow_estimator.python.estimator.tpu.tpu_config', 'tensorflow_estimator.python.estimator.tpu.util', 'tensorflow_estimator.python.estimator.tpu.tpu_estimator', 'tensorflow.core.protobuf.tpu.compilation_result_pb2', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.service', 'tensorflow.compiler.xla.service.hlo_pb2', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.functional', 'tensorflow.python.tpu.preempted_hook', 'tensorflow.python.tpu.session_support', 'tensorflow.python.tpu.tpu_embedding_gradient', 'tensorflow.python.tpu.tpu_feed', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.python.tpu.tpu_sharding', 'tensorflow_estimator.python.estimator.tpu.error_handling', 'tensorflow_estimator.python.estimator.tpu.iteration_count_estimator', 'tensorflow_estimator.python.estimator.tpu.tpu_context', 'tensorflow_estimator.python.estimator.canned.baseline', 'tensorflow_estimator.python.estimator.canned.boosted_trees', 'tensorflow.core.kernels', 'tensorflow.core.kernels.boosted_trees', 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2', 'tensorflow.python.ops.boosted_trees_ops', 'tensorflow_estimator.python.estimator.canned.boosted_trees_utils', 'tensorflow.python.ops.cond_v2', 'tensorflow_estimator.python.estimator.canned.dnn_linear_combined', 'tensorflow_estimator.python.estimator.canned.parsing_utils', 'tensorflow_estimator.python.estimator.exporter', 'tensorflow_estimator.python.estimator.gc', 'tensorflow_estimator.python.estimator.extenders', 'tensorflow_estimator.python.estimator.head.multi_head', 'tensorflow_estimator.python.estimator.head.multi_label_head', 'tensorflow_estimator.python.estimator.hooks.basic_session_run_hooks', 'tensorflow_estimator.python.estimator.hooks.session_run_hook', 'tensorflow_estimator.python.estimator.training', 'tensorflow_estimator.python.estimator.api', 'tensorflow_estimator.python.estimator.api._v1', 'tensorflow_estimator.python.estimator.api._v1.estimator', 'tensorflow_estimator.python.estimator.api._v1.estimator.experimental', 'tensorflow_estimator.python.estimator.api._v1.estimator.export', 'tensorflow_estimator.python.estimator.api._v1.estimator.inputs', 'tensorflow_estimator.python.estimator.api._v1.estimator.tpu', 'tensorflow_estimator.python.estimator.api._v1.estimator.tpu.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v1.compat.v2', 'tensorflow._api.v1.compat.v2.audio', 'tensorflow._api.v1.compat.v2.autograph', 'tensorflow._api.v1.compat.v2.autograph.experimental', 'tensorflow._api.v1.compat.v2.bitwise', 'tensorflow._api.v1.compat.v2.compat', 'tensorflow._api.v1.compat.v2.config', 'tensorflow._api.v1.compat.v2.config.experimental', 'tensorflow._api.v1.compat.v2.config.optimizer', 'tensorflow._api.v1.compat.v2.config.threading', 'tensorflow._api.v1.compat.v2.data', 'tensorflow._api.v1.compat.v2.data.experimental', 'tensorflow._api.v1.compat.v2.debugging', 'tensorflow._api.v1.compat.v2.distribute', 'tensorflow._api.v1.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v1.compat.v2.distribute.experimental', 'tensorflow._api.v1.compat.v2.dtypes', 'tensorflow._api.v1.compat.v2.errors', 'tensorflow._api.v1.compat.v2.experimental', 'tensorflow._api.v1.compat.v2.feature_column', 'tensorflow._api.v1.compat.v2.graph_util', 'tensorflow._api.v1.compat.v2.image', 'tensorflow._api.v1.compat.v2.io', 'tensorflow._api.v1.compat.v2.io.gfile', 'tensorflow._api.v1.compat.v2.linalg', 'tensorflow._api.v1.compat.v2.lite', 'tensorflow._api.v1.compat.v2.lite.experimental', 'tensorflow._api.v1.compat.v2.lookup', 'tensorflow._api.v1.compat.v2.lookup.experimental', 'tensorflow._api.v1.compat.v2.math', 'tensorflow._api.v1.compat.v2.nest', 'tensorflow._api.v1.compat.v2.nn', 'tensorflow._api.v1.compat.v2.quantization', 'tensorflow._api.v1.compat.v2.queue', 'tensorflow._api.v1.compat.v2.ragged', 'tensorflow._api.v1.compat.v2.random', 'tensorflow._api.v1.compat.v2.random.experimental', 'tensorflow._api.v1.compat.v2.raw_ops', 'tensorflow._api.v1.compat.v2.saved_model', 'tensorflow._api.v1.compat.v2.sets', 'tensorflow._api.v1.compat.v2.signal', 'tensorflow._api.v1.compat.v2.sparse', 'tensorflow._api.v1.compat.v2.strings', 'tensorflow._api.v1.compat.v2.summary', 'tensorflow._api.v1.compat.v2.summary.experimental', 'tensorflow._api.v1.compat.v2.sysconfig', 'tensorflow._api.v1.compat.v2.test', 'tensorflow._api.v1.compat.v2.tpu', 'tensorflow._api.v1.compat.v2.tpu.experimental', 'tensorflow._api.v1.compat.v2.train', 'tensorflow._api.v1.compat.v2.train.experimental', 'tensorflow._api.v1.compat.v2.version', 'tensorflow._api.v1.compat.v2.xla', 'tensorflow._api.v1.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow_estimator.python.estimator.api._v2', 'tensorflow_estimator.python.estimator.api._v2.estimator', 'tensorflow_estimator.python.estimator.api._v2.estimator.experimental', 'tensorflow_estimator.python.estimator.canned.rnn', 'tensorflow_estimator.python.estimator.head.sequential_head', 'tensorflow_estimator.python.estimator.api._v2.estimator.export', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v1.config', 'tensorflow._api.v1.config.experimental', 'tensorflow._api.v1.config.optimizer', 'tensorflow._api.v1.config.threading', 'tensorflow._api.v1.data', 'tensorflow._api.v1.data.experimental', 'tensorflow._api.v1.debugging', 'tensorflow._api.v1.distribute', 'tensorflow._api.v1.distribute.cluster_resolver', 'tensorflow._api.v1.distribute.experimental', 'tensorflow._api.v1.distributions', 'tensorflow._api.v1.dtypes', 'tensorflow._api.v1.errors', 'tensorflow._api.v1.experimental', 'tensorflow._api.v1.feature_column', 'tensorflow._api.v1.gfile', 'tensorflow._api.v1.graph_util', 'tensorflow._api.v1.image', 'tensorflow._api.v1.initializers', 'tensorflow._api.v1.io', 'tensorflow._api.v1.io.gfile', 'tensorflow._api.v1.layers', 'tensorflow._api.v1.layers.experimental', 'tensorflow._api.v1.linalg', 'tensorflow._api.v1.lite', 'tensorflow._api.v1.lite.constants', 'tensorflow._api.v1.lite.experimental', 'tensorflow._api.v1.lite.experimental.nn', 'tensorflow._api.v1.logging', 'tensorflow._api.v1.lookup', 'tensorflow._api.v1.lookup.experimental', 'tensorflow._api.v1.losses', 'tensorflow._api.v1.manip', 'tensorflow._api.v1.math', 'tensorflow._api.v1.metrics', 'tensorflow._api.v1.nest', 'tensorflow._api.v1.nn', 'tensorflow._api.v1.nn.rnn_cell', 'tensorflow._api.v1.profiler', 'tensorflow._api.v1.python_io', 'tensorflow._api.v1.quantization', 'tensorflow._api.v1.queue', 'tensorflow._api.v1.ragged', 'tensorflow._api.v1.random', 'tensorflow._api.v1.random.experimental', 'tensorflow._api.v1.raw_ops', 'tensorflow._api.v1.resource_loader', 'tensorflow._api.v1.saved_model', 'tensorflow._api.v1.saved_model.builder', 'tensorflow._api.v1.saved_model.constants', 'tensorflow._api.v1.saved_model.experimental', 'tensorflow._api.v1.saved_model.loader', 'tensorflow._api.v1.saved_model.main_op', 'tensorflow._api.v1.saved_model.signature_constants', 'tensorflow._api.v1.saved_model.signature_def_utils', 'tensorflow._api.v1.saved_model.tag_constants', 'tensorflow._api.v1.saved_model.utils', 'tensorflow._api.v1.sets', 'tensorflow._api.v1.signal', 'tensorflow._api.v1.sparse', 'tensorflow._api.v1.spectral', 'tensorflow._api.v1.strings', 'tensorflow._api.v1.summary', 'tensorflow._api.v1.sysconfig', 'tensorflow._api.v1.test', 'tensorflow._api.v1.tpu', 'tensorflow._api.v1.tpu.experimental', 'tensorflow._api.v1.train', 'tensorflow._api.v1.train.experimental', 'tensorflow._api.v1.train.queue_runner', 'tensorflow._api.v1.user_ops', 'tensorflow._api.v1.version', 'tensorflow._api.v1.xla', 'tensorflow._api.v1.xla.experimental', 'tensorflow.python.util.deprecation_wrapper', 'pylot.drivers', 'pylot.drivers.sensor_setup', 'pylot.simulation.utils', 'pylot.perception.depth_frame', 'numpy.matlib', 'pylot.perception.detection', 'pylot.perception.detection.obstacle', 'pylot.perception.detection.utils', 'pylot.perception.detection.speed_limit_sign', 'pylot.perception.detection.stop_sign', 'pylot.perception.detection.traffic_light', 'pylot.simulation.carla_handler', 'carla', 'carla.libcarla', 'pkg_resources', 'pkgutil', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'libcarla.command', 'pylot.simulation.carla_operator', 'pylot.simulation.fitness_value_extractor', 'pylot.control.messages', 'pylot.perception.messages', 'pylot.perception.camera_frame', 'cv2', 'cv2.Error', 'cv2.aruco', 'cv2.bgsegm', 'cv2.bioinspired', 'cv2.ccm', 'cv2.cuda', 'cv2.datasets', 'cv2.detail', 'cv2.dnn', 'cv2.dnn_superres', 'cv2.dynafu', 'cv2.face', 'cv2.fisheye', 'cv2.flann', 'cv2.ft', 'cv2.gapi', 'cv2.gapi.core', 'cv2.gapi.core.cpu', 'cv2.gapi.core.fluid', 'cv2.gapi.core.ocl', 'cv2.gapi.ie', 'cv2.gapi.ie.detail', 'cv2.gapi.onnx', 'cv2.gapi.own', 'cv2.gapi.own.detail', 'cv2.gapi.video', 'cv2.gapi.wip', 'cv2.hfs', 'cv2.img_hash', 'cv2.intensity_transform', 'cv2.ipp', 'cv2.kinfu', 'cv2.large_kinfu', 'cv2.legacy', 'cv2.line_descriptor', 'cv2.linemod', 'cv2.mcc', 'cv2.ml', 'cv2.motempl', 'cv2.multicalib', 'cv2.ocl', 'cv2.ogl', 'cv2.omnidir', 'cv2.optflow', 'cv2.phase_unwrapping', 'cv2.plot', 'cv2.ppf_match_3d', 'cv2.quality', 'cv2.rapid', 'cv2.reg', 'cv2.rgbd', 'cv2.saliency', 'cv2.samples', 'cv2.structured_light', 'cv2.text', 'cv2.utils', 'cv2.videoio_registry', 'cv2.videostab', 'cv2.xfeatures2d', 'cv2.ximgproc', 'cv2.ximgproc.segmentation', 'cv2.xphoto', 'cv2.cv2', 'cv2.data', 'cv2.version', 'pylot.perception.point_cloud', 'pylot.perception.segmentation', 'pylot.perception.segmentation.segmented_frame', 'skimage', 'skimage._shared', 'skimage._shared.geometry', 'skimage.util', 'skimage.util.dtype', 'skimage.util.shape', 'skimage.util.noise', 'skimage.util.apply_parallel', 'skimage.util.arraycrop', 'skimage.util._regular_grid', 'skimage.util.unique', 'skimage.util._invert', 'skimage.util._montage', 'skimage.exposure', 'skimage.exposure.exposure', 'skimage.color', 'skimage.color.colorconv', 'skimage.color.colorlabel', 'skimage._shared.utils', 'skimage._shared._warnings', 'skimage.color.rgb_colors', 'skimage.color.delta_e', 'skimage.exposure._adapthist', 'skimage.color.adapt_rgb', 'skimage.util.lookfor', 'skimage.data', 'skimage.io', 'skimage.io.manage_plugins', 'configparser', 'skimage.io.collection', 'skimage.external', 'skimage.external.tifffile', 'skimage.external.tifffile.tifffile', 'xml.etree.cElementTree', 'skimage.external.tifffile._tifffile', 'skimage.io.sift', 'skimage.io._io', 'skimage.io.util', 'skimage.io._image_stack', 'skimage.io._plugins', 'skimage.io._plugins.pil_plugin', 'skimage.io._plugins.matplotlib_plugin', 'mpl_toolkits.axes_grid1', 'mpl_toolkits.axes_grid1.axes_size', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.cbook._backports', 'matplotlib.compat', 'matplotlib.compat.subprocess', 'matplotlib.rcsetup', 'matplotlib.testing', 'matplotlib.fontconfig_pattern', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version']
I0902 18:35:04.245382 140310245873472 __init__.py:409] CACHEDIR=/home/erdos/.cache/matplotlib
I0902 18:35:04.245523 140310245873472 font_manager.py:1071] font search path ['/home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf', '/home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm', '/home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts']
I0902 18:35:04.345760 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf
I0902 18:35:04.345940 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf
I0902 18:35:04.345984 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf
I0902 18:35:04.346016 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf
I0902 18:35:04.346044 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf
I0902 18:35:04.346072 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf
I0902 18:35:04.346096 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf
I0902 18:35:04.346121 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf
I0902 18:35:04.346144 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf
I0902 18:35:04.346168 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf
I0902 18:35:04.346200 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf
I0902 18:35:04.346226 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf
I0902 18:35:04.346252 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf
I0902 18:35:04.346276 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf
I0902 18:35:04.346300 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf
I0902 18:35:04.346323 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf
I0902 18:35:04.346345 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf
I0902 18:35:04.346367 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf
I0902 18:35:04.346389 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf
I0902 18:35:04.346466 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf
I0902 18:35:04.346500 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf
I0902 18:35:04.346528 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf
I0902 18:35:04.346553 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf
I0902 18:35:04.346576 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf
I0902 18:35:04.346599 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf
I0902 18:35:04.346621 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf
I0902 18:35:04.346643 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf
I0902 18:35:04.346667 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf
I0902 18:35:04.346690 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf
I0902 18:35:04.346712 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf
I0902 18:35:04.346735 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf
I0902 18:35:04.346757 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf
I0902 18:35:04.346779 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf
I0902 18:35:04.346801 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf
I0902 18:35:04.346823 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf
I0902 18:35:04.346845 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf
I0902 18:35:04.346868 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf
I0902 18:35:04.346890 140310245873472 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf
I0902 18:35:04.346912 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf
I0902 18:35:04.346934 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf
I0902 18:35:04.346956 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf
I0902 18:35:04.346978 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf
I0902 18:35:04.347000 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf
I0902 18:35:04.347021 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf
I0902 18:35:04.347063 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf
I0902 18:35:04.347095 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf
I0902 18:35:04.347122 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf
I0902 18:35:04.347146 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf
I0902 18:35:04.347168 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf
I0902 18:35:04.347201 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf
I0902 18:35:04.347227 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf
I0902 18:35:04.347251 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf
I0902 18:35:04.347275 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf
I0902 18:35:04.347299 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf
I0902 18:35:04.347322 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf
I0902 18:35:04.347345 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf
I0902 18:35:04.347366 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf
I0902 18:35:04.347389 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf
I0902 18:35:04.347412 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf
I0902 18:35:04.347434 140310245873472 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
I0902 18:35:04.347462 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf
I0902 18:35:04.350628 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf
I0902 18:35:04.351851 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf
I0902 18:35:04.354179 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf
I0902 18:35:04.355246 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf
I0902 18:35:04.355516 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf
I0902 18:35:04.357430 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf
I0902 18:35:04.359035 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf
I0902 18:35:04.359572 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf
I0902 18:35:04.359839 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf
I0902 18:35:04.361294 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf
I0902 18:35:04.361613 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf
I0902 18:35:04.363553 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf
I0902 18:35:04.365379 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf
I0902 18:35:04.366133 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf
I0902 18:35:04.366899 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf
I0902 18:35:04.367294 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf
I0902 18:35:04.367566 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf
I0902 18:35:04.369302 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf
I0902 18:35:04.369584 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf
I0902 18:35:04.370835 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf
I0902 18:35:04.371704 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf
I0902 18:35:04.371983 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf
I0902 18:35:04.372270 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf
I0902 18:35:04.374302 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf
I0902 18:35:04.374585 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf
I0902 18:35:04.377655 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf
I0902 18:35:04.377945 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf
I0902 18:35:04.380435 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf
I0902 18:35:04.380757 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf
I0902 18:35:04.382822 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf
I0902 18:35:04.383098 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf
I0902 18:35:04.383420 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf
I0902 18:35:04.383690 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf
I0902 18:35:04.383995 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf
I0902 18:35:04.384317 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf
I0902 18:35:04.384590 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf
I0902 18:35:04.385991 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf
I0902 18:35:04.387805 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf
I0902 18:35:04.387859 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf
I0902 18:35:04.389418 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf
I0902 18:35:04.392282 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf
I0902 18:35:04.392333 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf
I0902 18:35:04.394270 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf
I0902 18:35:04.394323 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf
I0902 18:35:04.396243 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf
I0902 18:35:04.396297 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf
I0902 18:35:04.398226 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf
I0902 18:35:04.398278 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf
I0902 18:35:04.399941 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf
I0902 18:35:04.399994 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf
I0902 18:35:04.400032 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf
I0902 18:35:04.401870 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf
I0902 18:35:04.403486 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf
I0902 18:35:04.403539 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf
I0902 18:35:04.403578 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf
I0902 18:35:04.403610 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf
I0902 18:35:04.405632 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf
I0902 18:35:04.407521 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf
I0902 18:35:04.407575 140310245873472 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
I0902 18:35:04.417776 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pzdr.afm
I0902 18:35:04.419078 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pbkl8a.afm
I0902 18:35:04.420737 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pagko8a.afm
I0902 18:35:04.422507 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Helvetica-BoldOblique.afm
I0902 18:35:04.427314 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmsy10.afm
I0902 18:35:04.428174 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pbkli8a.afm
I0902 18:35:04.429655 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Helvetica-Oblique.afm
I0902 18:35:04.433878 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmmi10.afm
I0902 18:35:04.434862 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/ptmri8a.afm
I0902 18:35:04.436677 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Courier-BoldOblique.afm
I0902 18:35:04.438318 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/ptmr8a.afm
I0902 18:35:04.440116 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pplr8a.afm
I0902 18:35:04.441493 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Times-Italic.afm
I0902 18:35:04.445543 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Courier.afm
I0902 18:35:04.447102 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvro8an.afm
I0902 18:35:04.448864 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvl8a.afm
I0902 18:35:04.450487 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pplb8a.afm
I0902 18:35:04.451878 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Times-Roman.afm
I0902 18:35:04.455552 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pagd8a.afm
I0902 18:35:04.457318 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvb8an.afm
I0902 18:35:04.459005 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pbkd8a.afm
I0902 18:35:04.460337 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/ptmbi8a.afm
I0902 18:35:04.461834 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pncb8a.afm
I0902 18:35:04.463201 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvro8a.afm
I0902 18:35:04.464796 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvb8a.afm
I0902 18:35:04.466238 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/psyr.afm
I0902 18:35:04.467235 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pzcmi8a.afm
I0902 18:35:04.468592 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/putri8a.afm
I0902 18:35:04.470326 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pplri8a.afm
I0902 18:35:04.471721 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pagdo8a.afm
I0902 18:35:04.473430 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pcrb8a.afm
I0902 18:35:04.474813 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pncr8a.afm
I0902 18:35:04.476199 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvbo8an.afm
I0902 18:35:04.477889 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pncbi8a.afm
I0902 18:35:04.479352 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/putbi8a.afm
I0902 18:35:04.481106 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/putr8a.afm
I0902 18:35:04.482863 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pcrbo8a.afm
I0902 18:35:04.484247 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pplbi8a.afm
I0902 18:35:04.485595 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvr8a.afm
I0902 18:35:04.487057 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Helvetica-Bold.afm
I0902 18:35:04.491130 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Times-Bold.afm
I0902 18:35:04.495352 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvlo8a.afm
I0902 18:35:04.496769 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pcrro8a.afm
I0902 18:35:04.498157 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/ptmb8a.afm
I0902 18:35:04.499667 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvr8an.afm
I0902 18:35:04.501137 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmtt10.afm
I0902 18:35:04.502174 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmr10.afm
I0902 18:35:04.503083 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Symbol.afm
I0902 18:35:04.504283 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Times-BoldItalic.afm
I0902 18:35:04.507983 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pncri8a.afm
I0902 18:35:04.509453 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Helvetica.afm
I0902 18:35:04.513722 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/ZapfDingbats.afm
I0902 18:35:04.515256 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Courier-Bold.afm
I0902 18:35:04.516794 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pbkdi8a.afm
I0902 18:35:04.518126 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pcrr8a.afm
I0902 18:35:04.519498 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/putb8a.afm
I0902 18:35:04.521391 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvbo8a.afm
I0902 18:35:04.523135 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pagk8a.afm
I0902 18:35:04.524849 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmex10.afm
I0902 18:35:04.525625 140310245873472 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Courier-Oblique.afm
I0902 18:35:04.529605 140310245873472 font_manager.py:1458] generated new fontManager
I0902 18:35:04.987291 140310245873472 component_creator.py:99] Using perfect obstacle detector...
I0902 18:35:04.988599 140310245873472 component_creator.py:119] Using perfect obstacle detector...
I0902 18:35:04.988702 140310245873472 component_creator.py:215] Using ground traffic lights from the simulator...
I0902 18:35:04.988759 140310245873472 component_creator.py:369] Using perfect obstacle tracker...
I0902 18:35:04.991083 140310245873472 component_creator.py:428] Using perfect semantic segmentation...
I0902 18:35:04.991138 140310245873472 component_creator.py:254] Using perfect depth estimation...
I0902 18:35:04.991177 140310245873472 component_creator.py:499] Not using prediction...
I0902 18:35:04.991223 140310245873472 component_creator.py:529] Using behavior planning...
I0902 18:35:04.994762 140310245873472 component_creator.py:533] Using planning...
I0902 18:35:04.997637 140310245873472 component_creator.py:564] Using MPC controller...
I0902 18:35:05.217504 140310245873472 component_creator.py:595] Adding collision logging sensor...
I0902 18:35:05.218760 140310245873472 component_creator.py:599] Adding lane invasion sensor...
I0902 18:35:05.219622 140310245873472 component_creator.py:603] Adding traffic light invasion sensor...
I0902 18:35:05.242534 140310245873472 geos.py:67] Found GEOS DLL: <CDLL '/home/erdos/.local/lib/python3.6/site-packages/shapely/.libs/libgeos_c-bd8d3f16.so.1.10.2', handle 68f4bb0 at 0x7f9b1ca89f98>, using it.
I0902 18:35:05.255444 140310245873472 geos.py:32] Trying `CDLL(libc.so.6)`
I0902 18:35:05.255678 140310245873472 geos.py:49] Library path: 'libc.so.6'
I0902 18:35:05.255720 140310245873472 geos.py:50] DLL: <CDLL 'libc.so.6', handle 7f9c865f8080 at 0x7f9b1ca89fd0>
I0902 18:35:05.275003 140310245873472 component_creator.py:608] Adding overall evaluation operator...
I0902 18:35:26.007761 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.242859)>DfC:0.0000,DfV:8.90,DfP:10.41,DfM:19.76,DT:35.13
I0902 18:35:26.888352 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.177575)>DfC:0.0000,DfV:8.90,DfP:10.41,DfM:19.76,DT:35.13
I0902 18:35:27.877418 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.090848)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:28.471860 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.037684)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:29.085801 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.015698)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:29.804464 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.009232)>DfC:0.0000,DfV:8.90,DfP:10.43,DfM:19.76,DT:35.13
I0902 18:35:30.570837 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.009888)>DfC:0.0000,DfV:8.90,DfP:10.43,DfM:19.76,DT:35.13
I0902 18:35:31.315108 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.013325)>DfC:0.0000,DfV:8.90,DfP:10.43,DfM:19.76,DT:35.13
I0902 18:35:32.062383 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.017418)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:32.796359 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.021225)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:33.668411 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.024403)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:34.341940 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.026900)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:35.183023 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.028786)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:35.897495 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.030171)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:36.557580 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.031169)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:37.223122 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.031876)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:37.922543 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.032370)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:38.711013 140307958871808 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.032713)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:39.395940 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.032947)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:39.867883 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033107)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:40.595145 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033107)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:41.202441 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033223)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:41.780323 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033266)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:42.404216 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033306)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:42.980065 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033340)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:43.588326 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033365)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:44.347720 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033385)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:44.931316 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033399)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:45.401105 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033409)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:45.931278 140307967264512 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033412)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:46.438261 140307967264512 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033416)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:46.924481 140304125789952 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033420)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:47.416109 140304125789952 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033423)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:47.906905 140304125789952 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033426)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:48.417323 140304125789952 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033428)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:48.911593 140304125789952 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033429)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:49.530661 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033430)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:50.075212 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033430)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:50.630567 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033430)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:51.081473 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033431)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:51.543290 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033431)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:52.181754 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033431)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:52.755429 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033431)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:53.361172 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033431)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:53.747716 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033432)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:54.169292 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033432)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:54.687257 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033432)>DfC:0.0000,DfV:8.90,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:55.116844 140307984049920 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033432)>DfC:0.0000,DfV:8.92,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:55.500822 140307950479104 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483841, z=0.033432)>DfC:0.0000,DfV:8.97,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:55.928387 140307950479104 fitness_value_extractor.py:131] Location(x=30.869696, y=-128.483810, z=0.033436)>DfC:0.0000,DfV:9.05,DfP:10.42,DfM:19.76,DT:35.13
I0902 18:35:56.362699 140307950479104 fitness_value_extractor.py:131] Location(x=30.869125, y=-128.462463, z=0.033094)>DfC:0.0000,DfV:9.11,DfP:10.42,DfM:19.77,DT:35.11
I0902 18:35:56.805625 140307967264512 fitness_value_extractor.py:131] Location(x=30.867743, y=-128.410843, z=0.032612)>DfC:0.0000,DfV:9.14,DfP:10.40,DfM:19.81,DT:35.07
I0902 18:35:57.342456 140307984049920 fitness_value_extractor.py:131] Location(x=30.865604, y=-128.330978, z=0.032175)>DfC:0.0000,DfV:9.15,DfP:10.37,DfM:19.85,DT:35.00
I0902 18:35:57.760172 140307984049920 fitness_value_extractor.py:131] Location(x=30.862762, y=-128.224777, z=0.031842)>DfC:0.0000,DfV:9.13,DfP:10.34,DfM:19.92,DT:34.91
I0902 18:35:58.361855 140307984049920 fitness_value_extractor.py:131] Location(x=30.859270, y=-128.094147, z=0.031617)>DfC:0.0000,DfV:9.09,DfP:10.30,DfM:20.00,DT:34.79
I0902 18:35:59.013414 140307984049920 fitness_value_extractor.py:131] Location(x=30.855167, y=-127.940849, z=0.031486)>DfC:0.0000,DfV:9.02,DfP:10.25,DfM:20.09,DT:34.66
I0902 18:35:59.548805 140307984049920 fitness_value_extractor.py:131] Location(x=30.850502, y=-127.766541, z=0.031429)>DfC:0.0000,DfV:8.94,DfP:10.20,DfM:20.20,DT:34.51
I0902 18:35:59.968654 140307942086400 fitness_value_extractor.py:131] Location(x=30.845320, y=-127.572754, z=0.031427)>DfC:0.0000,DfV:8.84,DfP:10.14,DfM:20.32,DT:34.34
I0902 18:36:00.557823 140307942086400 fitness_value_extractor.py:131] Location(x=30.839651, y=-127.360855, z=0.031463)>DfC:0.0000,DfV:8.72,DfP:10.09,DfM:20.46,DT:34.15
I0902 18:36:01.363486 140307942086400 fitness_value_extractor.py:131] Location(x=30.833532, y=-127.132088, z=0.031525)>DfC:0.0000,DfV:8.59,DfP:10.03,DfM:20.60,DT:33.95
I0902 18:36:02.054767 140307942086400 fitness_value_extractor.py:131] Location(x=30.826988, y=-126.887520, z=0.031601)>DfC:0.0000,DfV:8.44,DfP:9.98,DfM:20.76,DT:33.74
I0902 18:36:02.701149 140307942086400 fitness_value_extractor.py:131] Location(x=30.820047, y=-126.627953, z=0.032305)>DfC:0.0000,DfV:8.28,DfP:9.85,DfM:20.93,DT:33.52
I0902 18:36:03.574856 140307942086400 fitness_value_extractor.py:131] Location(x=30.812729, y=-126.354248, z=0.032734)>DfC:0.0000,DfV:8.11,DfP:9.65,DfM:21.11,DT:33.28
I0902 18:36:04.009263 140307942086400 fitness_value_extractor.py:131] Location(x=30.805048, y=-126.067108, z=0.032855)>DfC:0.0000,DfV:7.92,DfP:9.44,DfM:21.30,DT:33.03
I0902 18:36:04.464209 140307942086400 fitness_value_extractor.py:131] Location(x=30.797028, y=-125.767197, z=0.032868)>DfC:0.0000,DfV:7.72,DfP:9.23,DfM:21.50,DT:32.78
I0902 18:36:04.900831 140307942086400 fitness_value_extractor.py:131] Location(x=30.788683, y=-125.455116, z=0.032854)>DfC:0.0000,DfV:7.52,DfP:9.01,DfM:21.71,DT:32.51
I0902 18:36:05.392304 140307942086400 fitness_value_extractor.py:131] Location(x=30.780024, y=-125.131363, z=0.032841)>DfC:0.0000,DfV:7.30,DfP:8.79,DfM:21.94,DT:32.23
I0902 18:36:05.835340 140307942086400 fitness_value_extractor.py:131] Location(x=30.771063, y=-124.796425, z=0.032837)>DfC:0.0000,DfV:7.07,DfP:8.57,DfM:22.17,DT:31.95
I0902 18:36:06.306457 140307942086400 fitness_value_extractor.py:131] Location(x=30.761816, y=-124.450630, z=0.032843)>DfC:0.0000,DfV:6.83,DfP:8.35,DfM:22.41,DT:31.65
I0902 18:36:06.808056 140307942086400 fitness_value_extractor.py:131] Location(x=30.752287, y=-124.094376, z=0.032856)>DfC:0.0000,DfV:6.59,DfP:8.14,DfM:22.67,DT:31.35
I0902 18:36:07.343820 140307942086400 fitness_value_extractor.py:131] Location(x=30.742487, y=-123.727936, z=0.032874)>DfC:0.0000,DfV:6.33,DfP:7.92,DfM:22.93,DT:31.04
I0902 18:36:07.789919 140307942086400 fitness_value_extractor.py:131] Location(x=30.732422, y=-123.351585, z=0.032895)>DfC:0.0000,DfV:6.07,DfP:7.71,DfM:23.21,DT:30.72
I0902 18:36:08.188851 140307942086400 fitness_value_extractor.py:131] Location(x=30.722099, y=-122.965576, z=0.032917)>DfC:0.0000,DfV:5.79,DfP:7.50,DfM:23.49,DT:30.40
I0902 18:36:08.702382 140307942086400 fitness_value_extractor.py:131] Location(x=30.711521, y=-122.570107, z=0.032939)>DfC:0.0000,DfV:5.51,DfP:7.31,DfM:23.78,DT:30.06
I0902 18:36:09.218265 140307958871808 fitness_value_extractor.py:131] Location(x=30.700697, y=-122.165359, z=0.032961)>DfC:0.0000,DfV:5.23,DfP:7.12,DfM:24.09,DT:29.73
I0902 18:36:09.638789 140307958871808 fitness_value_extractor.py:131] Location(x=30.689631, y=-121.751511, z=0.032981)>DfC:0.0000,DfV:4.93,DfP:6.95,DfM:24.22,DT:29.38
I0902 18:36:10.090559 140307958871808 fitness_value_extractor.py:131] Location(x=30.678322, y=-121.328720, z=0.033000)>DfC:0.0000,DfV:4.63,DfP:6.79,DfM:23.83,DT:29.03
I0902 18:36:10.621800 140307958871808 fitness_value_extractor.py:131] Location(x=30.666777, y=-120.897110, z=0.033018)>DfC:0.0000,DfV:4.31,DfP:6.64,DfM:23.44,DT:28.67
I0902 18:36:11.115336 140307958871808 fitness_value_extractor.py:131] Location(x=30.655003, y=-120.456825, z=0.033035)>DfC:0.0000,DfV:3.99,DfP:6.52,DfM:23.04,DT:28.31
I0902 18:36:11.638898 140307958871808 fitness_value_extractor.py:131] Location(x=30.643000, y=-120.007973, z=0.033050)>DfC:0.0000,DfV:3.66,DfP:6.42,DfM:22.64,DT:27.94
I0902 18:36:12.172971 140307958871808 fitness_value_extractor.py:131] Location(x=30.630859, y=-119.554199, z=0.033137)>DfC:0.0000,DfV:3.33,DfP:6.34,DfM:22.23,DT:27.57
I0902 18:36:12.663542 140307958871808 fitness_value_extractor.py:131] Location(x=30.618742, y=-119.101089, z=0.033303)>DfC:0.0000,DfV:2.99,DfP:6.29,DfM:21.82,DT:27.21
I0902 18:36:13.085906 140307958871808 fitness_value_extractor.py:131] Location(x=30.606630, y=-118.648178, z=0.033453)>DfC:0.0000,DfV:2.66,DfP:6.26,DfM:21.42,DT:26.84
I0902 18:36:13.551751 140307958871808 fitness_value_extractor.py:131] Location(x=30.594528, y=-118.195641, z=0.033577)>DfC:0.0000,DfV:2.32,DfP:6.27,DfM:21.02,DT:26.48
I0902 18:36:14.078073 140307958871808 fitness_value_extractor.py:131] Location(x=30.582432, y=-117.743378, z=0.033671)>DfC:0.0000,DfV:1.99,DfP:6.30,DfM:20.62,DT:26.12
I0902 18:36:14.617441 140307958871808 fitness_value_extractor.py:131] Location(x=30.570343, y=-117.291451, z=0.033742)>DfC:0.0000,DfV:1.65,DfP:6.36,DfM:20.22,DT:25.76
I0902 18:36:15.031409 140307958871808 fitness_value_extractor.py:131] Location(x=30.558264, y=-116.839844, z=0.033794)>DfC:0.0000,DfV:1.31,DfP:6.44,DfM:19.83,DT:25.40
I0902 18:36:15.439711 140307958871808 fitness_value_extractor.py:131] Location(x=30.546190, y=-116.388565, z=0.033834)>DfC:0.0000,DfV:0.98,DfP:6.55,DfM:19.44,DT:25.05
I0902 18:36:15.834219 140307958871808 fitness_value_extractor.py:131] Location(x=30.534163, y=-115.938728, z=0.033887)>DfC:0.0000,DfV:0.65,DfP:6.69,DfM:19.05,DT:24.70
I0902 18:36:16.288564 140307958871808 fitness_value_extractor.py:131] Location(x=30.522299, y=-115.495232, z=0.034016)>DfC:0.0000,DfV:0.33,DfP:6.84,DfM:18.67,DT:24.35
I0902 18:36:16.803186 140307958871808 fitness_value_extractor.py:131] Location(x=30.510519, y=-115.054840, z=0.034049)>DfC:0.0000,DfV:0.01,DfP:7.01,DfM:18.30,DT:24.01
I0902 18:36:17.235759 140307958871808 fitness_value_extractor.py:131] Location(x=30.498590, y=-114.608795, z=0.033958)>DfC:0.0000,DfV:-0.32,DfP:7.21,DfM:17.93,DT:23.67
I0902 18:36:17.694639 140307958871808 fitness_value_extractor.py:131] Location(x=30.477940, y=-114.577789, z=0.043280)>DfC:0.0198,DfV:-0.22,DfP:7.21,DfM:17.89,DT:23.66
I0902 18:36:18.207342 140307958871808 fitness_value_extractor.py:131] Location(x=30.473166, y=-114.531654, z=0.044557)>DfC:0.0234,DfV:-0.14,DfP:7.22,DfM:17.85,DT:23.63
I0902 18:36:18.586077 140307958871808 fitness_value_extractor.py:131] Location(x=30.472414, y=-114.501709, z=0.043775)>DfC:0.0233,DfV:-0.05,DfP:7.24,DfM:17.82,DT:23.60
I0902 18:36:19.068147 140307958871808 fitness_value_extractor.py:131] Location(x=30.472290, y=-114.494263, z=0.042332)>DfC:0.0232,DfV:0.08,DfP:7.24,DfM:17.82,DT:23.60
I0902 18:36:19.611659 140307958871808 fitness_value_extractor.py:131] Location(x=30.472282, y=-114.493843, z=0.040594)>DfC:0.0232,DfV:0.21,DfP:7.24,DfM:17.82,DT:23.60
I0902 18:36:20.112228 140307958871808 fitness_value_extractor.py:131] Location(x=30.472281, y=-114.493378, z=0.038930)>DfC:0.0232,DfV:0.34,DfP:7.24,DfM:17.82,DT:23.60
I0902 18:36:20.622486 140307958871808 fitness_value_extractor.py:131] Location(x=30.472281, y=-114.492973, z=0.037531)>DfC:0.0232,DfV:0.47,DfP:7.24,DfM:17.82,DT:23.60
I0902 18:36:21.102979 140307958871808 fitness_value_extractor.py:131] Location(x=30.472281, y=-114.492645, z=0.036427)>DfC:0.0232,DfV:0.61,DfP:7.24,DfM:17.82,DT:23.60
I0902 18:36:21.549382 140307958871808 fitness_value_extractor.py:131] Location(x=30.472263, y=-114.492401, z=0.035591)>DfC:0.0232,DfV:0.74,DfP:7.24,DfM:17.82,DT:23.60
I0902 18:36:22.041826 140307958871808 fitness_value_extractor.py:131] Location(x=30.472250, y=-114.492393, z=0.034979)>DfC:0.0232,DfV:0.88,DfP:7.24,DfM:17.82,DT:23.60
I0902 18:36:22.530765 140307958871808 fitness_value_extractor.py:131] Location(x=30.472214, y=-114.490250, z=0.034495)>DfC:0.0232,DfV:1.02,DfP:7.25,DfM:17.81,DT:23.60
I0902 18:36:22.978873 140307958871808 fitness_value_extractor.py:131] Location(x=30.472065, y=-114.486031, z=0.034129)>DfC:0.0232,DfV:1.15,DfP:7.25,DfM:17.81,DT:23.59
I0902 18:36:23.361325 140307958871808 fitness_value_extractor.py:131] Location(x=30.471806, y=-114.476250, z=0.033812)>DfC:0.0232,DfV:1.29,DfP:7.25,DfM:17.80,DT:23.59
I0902 18:36:23.839484 140307958871808 fitness_value_extractor.py:131] Location(x=30.471275, y=-114.461464, z=0.033579)>DfC:0.0234,DfV:1.41,DfP:7.26,DfM:17.79,DT:23.57
I0902 18:36:24.350539 140307958871808 fitness_value_extractor.py:131] Location(x=30.470612, y=-114.441704, z=0.033406)>DfC:0.0235,DfV:1.54,DfP:7.27,DfM:17.77,DT:23.56
I0902 18:36:24.887804 140307958871808 fitness_value_extractor.py:131] Location(x=30.469788, y=-114.415535, z=0.033256)>DfC:0.0236,DfV:1.66,DfP:7.28,DfM:17.75,DT:23.54
I0902 18:36:25.502373 140307958871808 fitness_value_extractor.py:131] Location(x=30.468811, y=-114.382111, z=0.033130)>DfC:0.0237,DfV:1.77,DfP:7.30,DfM:17.72,DT:23.51
I0902 18:36:26.154482 140307958871808 fitness_value_extractor.py:131] Location(x=30.467804, y=-114.339958, z=0.032997)>DfC:0.0236,DfV:1.88,DfP:7.32,DfM:17.69,DT:23.48
I0902 18:36:26.654895 140307958871808 fitness_value_extractor.py:131] Location(x=30.466801, y=-114.287094, z=0.032869)>DfC:0.0232,DfV:1.98,DfP:7.34,DfM:17.65,DT:23.44
I0902 18:36:27.042995 140307958871808 fitness_value_extractor.py:131] Location(x=30.465561, y=-114.223175, z=0.032753)>DfC:0.0227,DfV:2.07,DfP:7.38,DfM:17.59,DT:23.39
I0902 18:36:27.504297 140307958871808 fitness_value_extractor.py:131] Location(x=30.464182, y=-114.148911, z=0.032668)>DfC:0.0221,DfV:2.15,DfP:7.41,DfM:17.53,DT:23.34
I0902 18:36:27.996920 140307958871808 fitness_value_extractor.py:131] Location(x=30.462599, y=-114.064812, z=0.032614)>DfC:0.0214,DfV:2.22,DfP:7.46,DfM:17.46,DT:23.27
I0902 18:36:28.418711 140307958871808 fitness_value_extractor.py:131] Location(x=30.460920, y=-113.971069, z=0.032579)>DfC:0.0206,DfV:2.28,DfP:7.51,DfM:17.39,DT:23.20
I0902 18:36:28.898490 140307958871808 fitness_value_extractor.py:131] Location(x=30.458492, y=-113.867973, z=0.032562)>DfC:0.0203,DfV:2.33,DfP:7.56,DfM:17.30,DT:23.12
I0902 18:36:29.396712 140307958871808 fitness_value_extractor.py:131] Location(x=30.455708, y=-113.755890, z=0.032557)>DfC:0.0201,DfV:2.37,DfP:7.62,DfM:17.21,DT:23.04
I0902 18:36:29.844879 140307958871808 fitness_value_extractor.py:131] Location(x=30.452707, y=-113.635040, z=0.032561)>DfC:0.0198,DfV:2.41,DfP:7.69,DfM:17.11,DT:22.95
I0902 18:36:30.272035 140307958871808 fitness_value_extractor.py:131] Location(x=30.449547, y=-113.505577, z=0.032569)>DfC:0.0195,DfV:2.44,DfP:7.76,DfM:17.00,DT:22.85
I0902 18:36:30.745522 140307958871808 fitness_value_extractor.py:131] Location(x=30.446251, y=-113.367584, z=0.032579)>DfC:0.0191,DfV:2.46,DfP:7.70,DfM:16.89,DT:22.75
I0902 18:36:31.114797 140307958871808 fitness_value_extractor.py:131] Location(x=30.442833, y=-113.221130, z=0.032588)>DfC:0.0186,DfV:2.47,DfP:7.62,DfM:16.77,DT:22.64
I0902 18:36:31.523717 140307958871808 fitness_value_extractor.py:131] Location(x=30.439304, y=-113.066238, z=0.032596)>DfC:0.0180,DfV:2.47,DfP:7.54,DfM:16.65,DT:22.52
I0902 18:36:31.949442 140307958871808 fitness_value_extractor.py:131] Location(x=30.435659, y=-112.902908, z=0.032603)>DfC:0.0173,DfV:2.46,DfP:7.45,DfM:16.52,DT:22.40
I0902 18:36:32.438162 140307958871808 fitness_value_extractor.py:131] Location(x=30.431608, y=-112.731140, z=0.032608)>DfC:0.0168,DfV:2.44,DfP:7.37,DfM:16.38,DT:22.27
I0902 18:36:32.842321 140307958871808 fitness_value_extractor.py:131] Location(x=30.427286, y=-112.550934, z=0.032612)>DfC:0.0163,DfV:2.39,DfP:7.28,DfM:16.24,DT:22.14
I0902 18:36:33.325657 140307958871808 fitness_value_extractor.py:131] Location(x=30.422792, y=-112.362267, z=0.032614)>DfC:0.0157,DfV:2.26,DfP:7.19,DfM:16.09,DT:22.00
I0902 18:36:33.665827 140307958871808 fitness_value_extractor.py:131] Location(x=30.418169, y=-112.165115, z=0.032615)>DfC:0.0151,DfV:2.07,DfP:7.10,DfM:15.93,DT:21.86
I0902 18:36:34.050710 140307958871808 fitness_value_extractor.py:131] Location(x=30.413427, y=-111.959473, z=0.032615)>DfC:0.0143,DfV:1.86,DfP:7.02,DfM:15.77,DT:21.71
I0902 18:36:34.505872 140307958871808 fitness_value_extractor.py:131] Location(x=30.408613, y=-111.745308, z=0.032615)>DfC:0.0134,DfV:1.65,DfP:6.93,DfM:15.60,DT:21.55
I0902 18:36:34.992645 140307958871808 fitness_value_extractor.py:131] Location(x=30.403473, y=-111.522606, z=0.032613)>DfC:0.0126,DfV:1.42,DfP:6.84,DfM:15.43,DT:21.39
I0902 18:36:35.484250 140307958871808 fitness_value_extractor.py:131] Location(x=30.398050, y=-111.291313, z=0.032612)>DfC:0.0118,DfV:1.19,DfP:6.76,DfM:15.26,DT:21.23
I0902 18:36:35.967313 140307958871808 fitness_value_extractor.py:131] Location(x=30.392408, y=-111.051430, z=0.032610)>DfC:0.0110,DfV:0.95,DfP:6.68,DfM:15.07,DT:21.05
I0902 18:36:36.493238 140307958871808 fitness_value_extractor.py:131] Location(x=30.386580, y=-110.802925, z=0.032608)>DfC:0.0102,DfV:0.70,DfP:6.60,DfM:14.89,DT:20.88
I0902 18:36:36.922299 140307958871808 fitness_value_extractor.py:131] Location(x=30.380377, y=-110.545746, z=0.033382)>DfC:0.0095,DfV:0.44,DfP:6.53,DfM:14.70,DT:20.69
I0902 18:36:37.445461 140307958871808 fitness_value_extractor.py:131] Location(x=30.373888, y=-110.279907, z=0.033585)>DfC:0.0089,DfV:0.17,DfP:6.47,DfM:14.50,DT:20.51
I0902 18:36:37.908954 140307958871808 fitness_value_extractor.py:131] Location(x=30.367428, y=-110.005951, z=0.033585)>DfC:0.0081,DfV:-0.10,DfP:6.41,DfM:14.30,DT:20.31
I0902 18:36:38.361367 140307958871808 fitness_value_extractor.py:131] Location(x=30.360964, y=-109.727905, z=0.033591)>DfC:0.0071,DfV:-0.38,DfP:6.36,DfM:14.10,DT:20.12
I0902 18:36:38.790415 140307958871808 fitness_value_extractor.py:131] Location(x=30.353352, y=-109.700546, z=0.040028)>DfC:0.0140,DfV:-0.39,DfP:6.35,DfM:14.08,DT:20.11
I0902 18:36:39.215067 140307958871808 fitness_value_extractor.py:131] Location(x=30.351889, y=-109.723862, z=0.041926)>DfC:0.0160,DfV:-0.35,DfP:6.35,DfM:14.09,DT:20.12
I0902 18:36:39.661790 140307958871808 fitness_value_extractor.py:131] Location(x=30.351896, y=-109.726509, z=0.041293)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.13
I0902 18:36:40.098318 140307958871808 fitness_value_extractor.py:131] Location(x=30.351885, y=-109.726318, z=0.039975)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.13
I0902 18:36:40.559526 140307958871808 fitness_value_extractor.py:131] Location(x=30.351885, y=-109.726196, z=0.038571)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.13
I0902 18:36:40.990766 140307958871808 fitness_value_extractor.py:131] Location(x=30.351887, y=-109.726120, z=0.037319)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.13
I0902 18:36:41.391944 140307958871808 fitness_value_extractor.py:131] Location(x=30.351889, y=-109.726051, z=0.036295)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.13
I0902 18:36:41.830090 140307958871808 fitness_value_extractor.py:131] Location(x=30.351891, y=-109.726006, z=0.035499)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.13
I0902 18:36:42.295190 140307958871808 fitness_value_extractor.py:131] Location(x=30.351894, y=-109.725967, z=0.034902)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.13
I0902 18:36:42.740437 140307958871808 fitness_value_extractor.py:131] Location(x=30.351896, y=-109.725945, z=0.034464)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.13
I0902 18:36:43.270227 140307958871808 fitness_value_extractor.py:131] Location(x=30.351896, y=-109.725922, z=0.034150)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.13
I0902 18:36:43.724050 140307958871808 fitness_value_extractor.py:131] Location(x=30.351826, y=-109.722214, z=0.033867)>DfC:0.0161,DfV:-0.34,DfP:6.35,DfM:14.09,DT:20.12
I0902 18:36:44.193277 140307958871808 fitness_value_extractor.py:131] Location(x=30.351599, y=-109.710052, z=0.033590)>DfC:0.0160,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.11
I0902 18:36:44.625537 140307958871808 fitness_value_extractor.py:131] Location(x=30.351446, y=-109.707878, z=0.033691)>DfC:0.0161,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.11
I0902 18:36:45.068550 140307958871808 fitness_value_extractor.py:131] Location(x=30.351288, y=-109.708160, z=0.033669)>DfC:0.0162,DfV:-0.34,DfP:6.34,DfM:14.08,DT:20.11
I0902 18:36:45.467708 140307958871808 fitness_value_extractor.py:131] Location(x=30.351208, y=-109.708458, z=0.033519)>DfC:0.0163,DfV:-0.33,DfP:6.34,DfM:14.08,DT:20.11
I0902 18:36:45.956953 140307967264512 fitness_value_extractor.py:131] Location(x=30.351274, y=-109.712646, z=0.033384)>DfC:0.0164,DfV:-0.32,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:46.417059 140307967264512 fitness_value_extractor.py:131] Location(x=30.351248, y=-109.715019, z=0.033263)>DfC:0.0164,DfV:-0.32,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:46.856273 140307967264512 fitness_value_extractor.py:131] Location(x=30.351267, y=-109.715897, z=0.033203)>DfC:0.0165,DfV:-0.32,DfP:6.35,DfM:14.09,DT:20.12
I0902 18:36:47.318717 140307967264512 fitness_value_extractor.py:131] Location(x=30.351259, y=-109.715401, z=0.033201)>DfC:0.0164,DfV:-0.33,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:47.814538 140307967264512 fitness_value_extractor.py:131] Location(x=30.351231, y=-109.714355, z=0.033228)>DfC:0.0165,DfV:-0.33,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:48.287990 140307967264512 fitness_value_extractor.py:131] Location(x=30.351231, y=-109.714630, z=0.033278)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:48.718291 140307967264512 fitness_value_extractor.py:131] Location(x=30.351236, y=-109.715225, z=0.033320)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:49.351046 140307967264512 fitness_value_extractor.py:131] Location(x=30.351240, y=-109.715378, z=0.033350)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:49.818712 140307967264512 fitness_value_extractor.py:131] Location(x=30.351244, y=-109.715454, z=0.033380)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:50.287457 140307967264512 fitness_value_extractor.py:131] Location(x=30.351248, y=-109.715492, z=0.033403)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:50.739402 140307967264512 fitness_value_extractor.py:131] Location(x=30.351250, y=-109.715607, z=0.033424)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:51.134042 140307967264512 fitness_value_extractor.py:131] Location(x=30.351254, y=-109.715607, z=0.033437)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:51.654572 140307967264512 fitness_value_extractor.py:131] Location(x=30.351257, y=-109.715668, z=0.033449)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:52.133564 140307967264512 fitness_value_extractor.py:131] Location(x=30.351257, y=-109.715668, z=0.033455)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:52.654917 140307967264512 fitness_value_extractor.py:131] Location(x=30.351257, y=-109.715714, z=0.033461)>DfC:0.0165,DfV:-0.34,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:53.140298 140307967264512 fitness_value_extractor.py:131] Location(x=30.351254, y=-109.715691, z=0.033463)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:53.529647 140307967264512 fitness_value_extractor.py:131] Location(x=30.351254, y=-109.715736, z=0.033467)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:53.922180 140307967264512 fitness_value_extractor.py:131] Location(x=30.351254, y=-109.715698, z=0.033467)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:54.353917 140307967264512 fitness_value_extractor.py:131] Location(x=30.351257, y=-109.715752, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:54.768015 140307967264512 fitness_value_extractor.py:131] Location(x=30.351257, y=-109.715729, z=0.033469)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:55.192234 140307967264512 fitness_value_extractor.py:131] Location(x=30.351257, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:55.613014 140307967264512 fitness_value_extractor.py:131] Location(x=30.351252, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:56.091218 140307967264512 fitness_value_extractor.py:131] Location(x=30.351252, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:56.602391 140307967264512 fitness_value_extractor.py:131] Location(x=30.351248, y=-109.715721, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:57.036428 140307967264512 fitness_value_extractor.py:131] Location(x=30.351248, y=-109.715759, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:57.366473 140307967264512 fitness_value_extractor.py:131] Location(x=30.351244, y=-109.715721, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:57.758920 140307933693696 fitness_value_extractor.py:131] Location(x=30.351242, y=-109.715767, z=0.033472)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:58.228547 140307933693696 fitness_value_extractor.py:131] Location(x=30.351240, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:58.592503 140307933693696 fitness_value_extractor.py:131] Location(x=30.351240, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:59.031569 140307933693696 fitness_value_extractor.py:131] Location(x=30.351236, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:59.403935 140307933693696 fitness_value_extractor.py:131] Location(x=30.351236, y=-109.715759, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:36:59.792485 140307933693696 fitness_value_extractor.py:131] Location(x=30.351234, y=-109.715721, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:00.266861 140307933693696 fitness_value_extractor.py:131] Location(x=30.351234, y=-109.715767, z=0.033472)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:00.772966 140307933693696 fitness_value_extractor.py:131] Location(x=30.351231, y=-109.715721, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:01.182172 140307933693696 fitness_value_extractor.py:131] Location(x=30.351231, y=-109.715767, z=0.033472)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:01.627243 140307933693696 fitness_value_extractor.py:131] Location(x=30.351227, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:02.066093 140307942086400 fitness_value_extractor.py:131] Location(x=30.351225, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:02.489274 140307942086400 fitness_value_extractor.py:131] Location(x=30.351223, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:02.947082 140307942086400 fitness_value_extractor.py:131] Location(x=30.351223, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:03.458770 140307942086400 fitness_value_extractor.py:131] Location(x=30.351219, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:03.875694 140307942086400 fitness_value_extractor.py:131] Location(x=30.351219, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:04.458904 140307942086400 fitness_value_extractor.py:131] Location(x=30.351217, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:04.881287 140307942086400 fitness_value_extractor.py:131] Location(x=30.351217, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:05.295356 140307942086400 fitness_value_extractor.py:131] Location(x=30.351213, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:05.698145 140307942086400 fitness_value_extractor.py:131] Location(x=30.351213, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:06.122839 140307942086400 fitness_value_extractor.py:131] Location(x=30.351210, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:06.566868 140307942086400 fitness_value_extractor.py:131] Location(x=30.351210, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:07.053415 140307942086400 fitness_value_extractor.py:131] Location(x=30.351206, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:07.520545 140307942086400 fitness_value_extractor.py:131] Location(x=30.351206, y=-109.715759, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:07.946208 140307942086400 fitness_value_extractor.py:131] Location(x=30.351202, y=-109.715729, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:08.349678 140307942086400 fitness_value_extractor.py:131] Location(x=30.351202, y=-109.715767, z=0.033472)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:08.823996 140307942086400 fitness_value_extractor.py:131] Location(x=30.351198, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:09.273049 140307942086400 fitness_value_extractor.py:131] Location(x=30.351198, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:09.699388 140307942086400 fitness_value_extractor.py:131] Location(x=30.351196, y=-109.715721, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:10.240944 140307942086400 fitness_value_extractor.py:131] Location(x=30.351196, y=-109.715767, z=0.033472)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:10.756442 140307942086400 fitness_value_extractor.py:131] Location(x=30.351191, y=-109.715736, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:11.229380 140307942086400 fitness_value_extractor.py:131] Location(x=30.351191, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:11.688246 140307942086400 fitness_value_extractor.py:131] Location(x=30.351189, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:12.152538 140307942086400 fitness_value_extractor.py:131] Location(x=30.351189, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:12.708028 140307942086400 fitness_value_extractor.py:131] Location(x=30.351187, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:13.163574 140307942086400 fitness_value_extractor.py:131] Location(x=30.351183, y=-109.715767, z=0.033472)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:13.648389 140307942086400 fitness_value_extractor.py:131] Location(x=30.351181, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:14.123481 140307942086400 fitness_value_extractor.py:131] Location(x=30.351181, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:14.633505 140307942086400 fitness_value_extractor.py:131] Location(x=30.351179, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:15.139825 140307942086400 fitness_value_extractor.py:131] Location(x=30.351175, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:15.602191 140307942086400 fitness_value_extractor.py:131] Location(x=30.351173, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:16.031147 140307942086400 fitness_value_extractor.py:131] Location(x=30.351173, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:16.456975 140307942086400 fitness_value_extractor.py:131] Location(x=30.351171, y=-109.715729, z=0.033470)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:16.933337 140307942086400 fitness_value_extractor.py:131] Location(x=30.351171, y=-109.715767, z=0.033471)>DfC:0.0165,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:17.430849 140307942086400 fitness_value_extractor.py:131] Location(x=30.351164, y=-109.715729, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:17.942031 140307942086400 fitness_value_extractor.py:131] Location(x=30.351164, y=-109.715767, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:18.358399 140307942086400 fitness_value_extractor.py:131] Location(x=30.351162, y=-109.715729, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:18.841797 140307942086400 fitness_value_extractor.py:131] Location(x=30.351158, y=-109.715767, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:19.333370 140307942086400 fitness_value_extractor.py:131] Location(x=30.351156, y=-109.715729, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:19.751305 140307942086400 fitness_value_extractor.py:131] Location(x=30.351156, y=-109.715767, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:20.174167 140307942086400 fitness_value_extractor.py:131] Location(x=30.351154, y=-109.715729, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:20.557278 140307942086400 fitness_value_extractor.py:131] Location(x=30.351154, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:20.992943 140307942086400 fitness_value_extractor.py:131] Location(x=30.351152, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:21.460785 140307942086400 fitness_value_extractor.py:131] Location(x=30.351149, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:21.892863 140307942086400 fitness_value_extractor.py:131] Location(x=30.351147, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:22.301935 140307942086400 fitness_value_extractor.py:131] Location(x=30.351147, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:22.797267 140307942086400 fitness_value_extractor.py:131] Location(x=30.351145, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:23.364043 140307942086400 fitness_value_extractor.py:131] Location(x=30.351141, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:23.771357 140307942086400 fitness_value_extractor.py:131] Location(x=30.351139, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:24.264923 140307942086400 fitness_value_extractor.py:131] Location(x=30.351137, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:24.664677 140307942086400 fitness_value_extractor.py:131] Location(x=30.351135, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:25.054570 140307942086400 fitness_value_extractor.py:131] Location(x=30.351131, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:25.433493 140307942086400 fitness_value_extractor.py:131] Location(x=30.351130, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:25.817922 140307942086400 fitness_value_extractor.py:131] Location(x=30.351130, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:26.243541 140307942086400 fitness_value_extractor.py:131] Location(x=30.351122, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:26.757357 140307942086400 fitness_value_extractor.py:131] Location(x=30.351122, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:27.174305 140307942086400 fitness_value_extractor.py:131] Location(x=30.351120, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:27.595019 140307942086400 fitness_value_extractor.py:131] Location(x=30.351120, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:28.020738 140307942086400 fitness_value_extractor.py:131] Location(x=30.351118, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:28.436532 140307942086400 fitness_value_extractor.py:131] Location(x=30.351114, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:28.846643 140307942086400 fitness_value_extractor.py:131] Location(x=30.351112, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:29.322198 140307942086400 fitness_value_extractor.py:131] Location(x=30.351112, y=-109.715759, z=0.033472)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:29.795450 140307942086400 fitness_value_extractor.py:131] Location(x=30.351109, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:30.251763 140307942086400 fitness_value_extractor.py:131] Location(x=30.351109, y=-109.715759, z=0.033472)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:30.584021 140307942086400 fitness_value_extractor.py:131] Location(x=30.351105, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:30.951881 140307958871808 fitness_value_extractor.py:131] Location(x=30.351105, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:31.321424 140307958871808 fitness_value_extractor.py:131] Location(x=30.351103, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:31.725262 140307958871808 fitness_value_extractor.py:131] Location(x=30.351103, y=-109.715759, z=0.033472)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:32.262951 140307958871808 fitness_value_extractor.py:131] Location(x=30.351101, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:32.674312 140307958871808 fitness_value_extractor.py:131] Location(x=30.351101, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:33.159032 140307958871808 fitness_value_extractor.py:131] Location(x=30.351097, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:33.684620 140307958871808 fitness_value_extractor.py:131] Location(x=30.351097, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:34.164309 140307958871808 fitness_value_extractor.py:131] Location(x=30.351093, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:34.536004 140307958871808 fitness_value_extractor.py:131] Location(x=30.351093, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:34.928021 140307958871808 fitness_value_extractor.py:131] Location(x=30.351091, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:35.316051 140307958871808 fitness_value_extractor.py:131] Location(x=30.351088, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:35.768426 140307958871808 fitness_value_extractor.py:131] Location(x=30.351086, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:36.197288 140307958871808 fitness_value_extractor.py:131] Location(x=30.351086, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:36.612811 140307958871808 fitness_value_extractor.py:131] Location(x=30.351080, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:37.043745 140307958871808 fitness_value_extractor.py:131] Location(x=30.351080, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:37.569636 140307958871808 fitness_value_extractor.py:131] Location(x=30.351078, y=-109.715721, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:38.012047 140307958871808 fitness_value_extractor.py:131] Location(x=30.351076, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:38.476823 140307958871808 fitness_value_extractor.py:131] Location(x=30.351074, y=-109.715714, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:38.924660 140307958871808 fitness_value_extractor.py:131] Location(x=30.351074, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:39.458230 140307958871808 fitness_value_extractor.py:131] Location(x=30.351070, y=-109.715714, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:39.958442 140307958871808 fitness_value_extractor.py:131] Location(x=30.351070, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:40.411939 140307958871808 fitness_value_extractor.py:131] Location(x=30.351068, y=-109.715714, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:40.820643 140307958871808 fitness_value_extractor.py:131] Location(x=30.351068, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:41.280741 140307958871808 fitness_value_extractor.py:131] Location(x=30.351067, y=-109.715714, z=0.033470)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:41.705260 140307958871808 fitness_value_extractor.py:131] Location(x=30.351067, y=-109.715759, z=0.033471)>DfC:0.0166,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:42.221933 140307958871808 fitness_value_extractor.py:131] Location(x=30.351065, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:42.702633 140307958871808 fitness_value_extractor.py:131] Location(x=30.351065, y=-109.715759, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:43.108738 140307958871808 fitness_value_extractor.py:131] Location(x=30.351061, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:43.551687 140307958871808 fitness_value_extractor.py:131] Location(x=30.351061, y=-109.715759, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:43.955188 140307958871808 fitness_value_extractor.py:131] Location(x=30.351059, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:44.370039 140307958871808 fitness_value_extractor.py:131] Location(x=30.351059, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:44.796278 140307958871808 fitness_value_extractor.py:131] Location(x=30.351053, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:45.286636 140307958871808 fitness_value_extractor.py:131] Location(x=30.351057, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:45.658756 140307958871808 fitness_value_extractor.py:131] Location(x=30.351051, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:46.147348 140307984049920 fitness_value_extractor.py:131] Location(x=30.351051, y=-109.715759, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:46.590500 140307984049920 fitness_value_extractor.py:131] Location(x=30.351049, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:47.058540 140307984049920 fitness_value_extractor.py:131] Location(x=30.351049, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:47.530653 140307984049920 fitness_value_extractor.py:131] Location(x=30.351048, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:47.960997 140307984049920 fitness_value_extractor.py:131] Location(x=30.351048, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:48.400108 140307984049920 fitness_value_extractor.py:131] Location(x=30.351042, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:48.809561 140307984049920 fitness_value_extractor.py:131] Location(x=30.351042, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:49.226471 140307984049920 fitness_value_extractor.py:131] Location(x=30.351040, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:49.618162 140307984049920 fitness_value_extractor.py:131] Location(x=30.351040, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:50.094956 140307984049920 fitness_value_extractor.py:131] Location(x=30.351036, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:50.529040 140307984049920 fitness_value_extractor.py:131] Location(x=30.351036, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:51.007349 140307942086400 fitness_value_extractor.py:131] Location(x=30.351034, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:51.461432 140307942086400 fitness_value_extractor.py:131] Location(x=30.351034, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:51.887898 140307942086400 fitness_value_extractor.py:131] Location(x=30.351032, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:52.308391 140307942086400 fitness_value_extractor.py:131] Location(x=30.351032, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:52.814862 140307942086400 fitness_value_extractor.py:131] Location(x=30.351030, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:53.298130 140307942086400 fitness_value_extractor.py:131] Location(x=30.351030, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:53.649942 140307942086400 fitness_value_extractor.py:131] Location(x=30.351027, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:54.059330 140307958871808 fitness_value_extractor.py:131] Location(x=30.351027, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:54.428700 140307958871808 fitness_value_extractor.py:131] Location(x=30.351025, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:54.954130 140307958871808 fitness_value_extractor.py:131] Location(x=30.351025, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:55.444875 140307958871808 fitness_value_extractor.py:131] Location(x=30.351023, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:55.849816 140307958871808 fitness_value_extractor.py:131] Location(x=30.351023, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:56.193979 140307958871808 fitness_value_extractor.py:131] Location(x=30.351017, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:56.611929 140307984049920 fitness_value_extractor.py:131] Location(x=30.351017, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:57.057889 140307984049920 fitness_value_extractor.py:131] Location(x=30.351015, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:57.488883 140307984049920 fitness_value_extractor.py:131] Location(x=30.351013, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:57.953013 140307984049920 fitness_value_extractor.py:131] Location(x=30.351009, y=-109.715721, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:58.441479 140307984049920 fitness_value_extractor.py:131] Location(x=30.351009, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:58.951678 140307984049920 fitness_value_extractor.py:131] Location(x=30.351007, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:37:59.469898 140307984049920 fitness_value_extractor.py:131] Location(x=30.351007, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:00.026237 140307984049920 fitness_value_extractor.py:131] Location(x=30.351006, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:00.535135 140307984049920 fitness_value_extractor.py:131] Location(x=30.351006, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:00.997442 140307984049920 fitness_value_extractor.py:131] Location(x=30.351004, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:01.409821 140307984049920 fitness_value_extractor.py:131] Location(x=30.351000, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:01.946467 140307984049920 fitness_value_extractor.py:131] Location(x=30.350998, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:02.457268 140307984049920 fitness_value_extractor.py:131] Location(x=30.350998, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:02.978352 140307984049920 fitness_value_extractor.py:131] Location(x=30.350996, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:03.375112 140307984049920 fitness_value_extractor.py:131] Location(x=30.350996, y=-109.715752, z=0.033472)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:03.740551 140307984049920 fitness_value_extractor.py:131] Location(x=30.350992, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:04.210339 140307984049920 fitness_value_extractor.py:131] Location(x=30.350992, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:04.631712 140307984049920 fitness_value_extractor.py:131] Location(x=30.350990, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:05.057743 140307984049920 fitness_value_extractor.py:131] Location(x=30.350990, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:05.422375 140307984049920 fitness_value_extractor.py:131] Location(x=30.350988, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:05.944596 140307984049920 fitness_value_extractor.py:131] Location(x=30.350988, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:06.410656 140307984049920 fitness_value_extractor.py:131] Location(x=30.350986, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:06.853714 140307984049920 fitness_value_extractor.py:131] Location(x=30.350986, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:07.252676 140307984049920 fitness_value_extractor.py:131] Location(x=30.350983, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:07.758833 140307984049920 fitness_value_extractor.py:131] Location(x=30.350983, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:08.174040 140307984049920 fitness_value_extractor.py:131] Location(x=30.350981, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:08.636404 140307984049920 fitness_value_extractor.py:131] Location(x=30.350979, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:09.086062 140307984049920 fitness_value_extractor.py:131] Location(x=30.350975, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:09.588048 140307984049920 fitness_value_extractor.py:131] Location(x=30.350975, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:09.990728 140307984049920 fitness_value_extractor.py:131] Location(x=30.350973, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:10.397947 140307984049920 fitness_value_extractor.py:131] Location(x=30.350973, y=-109.715752, z=0.033472)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:10.836147 140307984049920 fitness_value_extractor.py:131] Location(x=30.350971, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:11.334110 140307984049920 fitness_value_extractor.py:131] Location(x=30.350971, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:11.782065 140307984049920 fitness_value_extractor.py:131] Location(x=30.350969, y=-109.715714, z=0.033470)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:12.253163 140307984049920 fitness_value_extractor.py:131] Location(x=30.350969, y=-109.715752, z=0.033471)>DfC:0.0167,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:12.664507 140307984049920 fitness_value_extractor.py:131] Location(x=30.350965, y=-109.715714, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:13.093143 140307984049920 fitness_value_extractor.py:131] Location(x=30.350965, y=-109.715752, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:13.545835 140307984049920 fitness_value_extractor.py:131] Location(x=30.350964, y=-109.715714, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:13.992794 140307984049920 fitness_value_extractor.py:131] Location(x=30.350962, y=-109.715736, z=0.033472)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:14.401350 140307984049920 fitness_value_extractor.py:131] Location(x=30.350958, y=-109.715729, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:14.871454 140307984049920 fitness_value_extractor.py:131] Location(x=30.350956, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:15.431027 140307984049920 fitness_value_extractor.py:131] Location(x=30.350954, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:15.939131 140307984049920 fitness_value_extractor.py:131] Location(x=30.350952, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:16.422816 140307984049920 fitness_value_extractor.py:131] Location(x=30.350948, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:16.879633 140307984049920 fitness_value_extractor.py:131] Location(x=30.350948, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:17.337763 140307984049920 fitness_value_extractor.py:131] Location(x=30.350946, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:17.787069 140307984049920 fitness_value_extractor.py:131] Location(x=30.350946, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:18.210243 140307984049920 fitness_value_extractor.py:131] Location(x=30.350945, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:18.704180 140307984049920 fitness_value_extractor.py:131] Location(x=30.350945, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:19.148949 140307984049920 fitness_value_extractor.py:131] Location(x=30.350943, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:19.596413 140307984049920 fitness_value_extractor.py:131] Location(x=30.350943, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:20.088618 140307984049920 fitness_value_extractor.py:131] Location(x=30.350939, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:20.548010 140307984049920 fitness_value_extractor.py:131] Location(x=30.350939, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:21.021750 140307984049920 fitness_value_extractor.py:131] Location(x=30.350937, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:21.415451 140304125789952 fitness_value_extractor.py:131] Location(x=30.350937, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:21.864839 140304125789952 fitness_value_extractor.py:131] Location(x=30.350935, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:22.274080 140307958871808 fitness_value_extractor.py:131] Location(x=30.350935, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:22.809923 140307958871808 fitness_value_extractor.py:131] Location(x=30.350931, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:23.282836 140307958871808 fitness_value_extractor.py:131] Location(x=30.350931, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:23.725017 140307958871808 fitness_value_extractor.py:131] Location(x=30.350929, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:24.163306 140307958871808 fitness_value_extractor.py:131] Location(x=30.350929, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:24.576351 140307958871808 fitness_value_extractor.py:131] Location(x=30.350927, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:25.055717 140307958871808 fitness_value_extractor.py:131] Location(x=30.350927, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:25.488303 140307958871808 fitness_value_extractor.py:131] Location(x=30.350925, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:25.926307 140307958871808 fitness_value_extractor.py:131] Location(x=30.350925, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:26.360262 140307958871808 fitness_value_extractor.py:131] Location(x=30.350922, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:26.761705 140307958871808 fitness_value_extractor.py:131] Location(x=30.350920, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:27.190491 140307958871808 fitness_value_extractor.py:131] Location(x=30.350918, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:27.590559 140307958871808 fitness_value_extractor.py:131] Location(x=30.350918, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:28.058388 140307958871808 fitness_value_extractor.py:131] Location(x=30.350914, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:28.500963 140307958871808 fitness_value_extractor.py:131] Location(x=30.350914, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:28.952457 140307958871808 fitness_value_extractor.py:131] Location(x=30.350912, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:29.418106 140307958871808 fitness_value_extractor.py:131] Location(x=30.350910, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:29.902078 140307958871808 fitness_value_extractor.py:131] Location(x=30.350908, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:30.355550 140307958871808 fitness_value_extractor.py:131] Location(x=30.350908, y=-109.715767, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:30.893325 140307958871808 fitness_value_extractor.py:131] Location(x=30.350903, y=-109.715729, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:31.346525 140307958871808 fitness_value_extractor.py:131] Location(x=30.350903, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:31.765104 140307958871808 fitness_value_extractor.py:131] Location(x=30.350901, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:32.234807 140307958871808 fitness_value_extractor.py:131] Location(x=30.350901, y=-109.715759, z=0.033472)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:32.670941 140307958871808 fitness_value_extractor.py:131] Location(x=30.350897, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:33.097317 140307958871808 fitness_value_extractor.py:131] Location(x=30.350897, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:33.556127 140307950479104 fitness_value_extractor.py:131] Location(x=30.350893, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:33.982692 140307950479104 fitness_value_extractor.py:131] Location(x=30.350893, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:34.457717 140307950479104 fitness_value_extractor.py:131] Location(x=30.350891, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:34.870594 140307950479104 fitness_value_extractor.py:131] Location(x=30.350891, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:35.321173 140307950479104 fitness_value_extractor.py:131] Location(x=30.350887, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:35.807130 140307950479104 fitness_value_extractor.py:131] Location(x=30.350885, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:36.224067 140307950479104 fitness_value_extractor.py:131] Location(x=30.350883, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:36.632514 140307950479104 fitness_value_extractor.py:131] Location(x=30.350883, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:37.095534 140307950479104 fitness_value_extractor.py:131] Location(x=30.350882, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:37.549609 140307950479104 fitness_value_extractor.py:131] Location(x=30.350882, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:37.933789 140307950479104 fitness_value_extractor.py:131] Location(x=30.350878, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:38.371162 140307950479104 fitness_value_extractor.py:131] Location(x=30.350878, y=-109.715759, z=0.033472)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:38.832682 140307950479104 fitness_value_extractor.py:131] Location(x=30.350874, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:39.348399 140307950479104 fitness_value_extractor.py:131] Location(x=30.350874, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:39.800993 140307950479104 fitness_value_extractor.py:131] Location(x=30.350868, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:40.189845 140307950479104 fitness_value_extractor.py:131] Location(x=30.350870, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:40.594732 140307950479104 fitness_value_extractor.py:131] Location(x=30.350866, y=-109.715721, z=0.033470)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:41.018733 140307950479104 fitness_value_extractor.py:131] Location(x=30.350866, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:41.444353 140307950479104 fitness_value_extractor.py:131] Location(x=30.350864, y=-109.715721, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:41.928436 140307950479104 fitness_value_extractor.py:131] Location(x=30.350866, y=-109.715759, z=0.033471)>DfC:0.0168,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:42.340479 140307950479104 fitness_value_extractor.py:131] Location(x=30.350861, y=-109.715721, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:42.831628 140307950479104 fitness_value_extractor.py:131] Location(x=30.350861, y=-109.715759, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:43.222101 140307950479104 fitness_value_extractor.py:131] Location(x=30.350859, y=-109.715721, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:43.626503 140307950479104 fitness_value_extractor.py:131] Location(x=30.350857, y=-109.715752, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:44.138980 140307950479104 fitness_value_extractor.py:131] Location(x=30.350853, y=-109.715729, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:44.580812 140307950479104 fitness_value_extractor.py:131] Location(x=30.350853, y=-109.715767, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:45.203386 140307950479104 fitness_value_extractor.py:131] Location(x=30.350849, y=-109.715721, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:45.628191 140307950479104 fitness_value_extractor.py:131] Location(x=30.350849, y=-109.715767, z=0.033472)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:46.113173 140307950479104 fitness_value_extractor.py:131] Location(x=30.350847, y=-109.715736, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:46.567422 140307950479104 fitness_value_extractor.py:131] Location(x=30.350843, y=-109.715767, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:47.027276 140307950479104 fitness_value_extractor.py:131] Location(x=30.350842, y=-109.715736, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:47.555284 140307950479104 fitness_value_extractor.py:131] Location(x=30.350842, y=-109.715790, z=0.033472)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:47.985764 140307950479104 fitness_value_extractor.py:131] Location(x=30.350840, y=-109.715736, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:48.392677 140307950479104 fitness_value_extractor.py:131] Location(x=30.350840, y=-109.715790, z=0.033472)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:48.770949 140307950479104 fitness_value_extractor.py:131] Location(x=30.350836, y=-109.715759, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:49.243298 140307950479104 fitness_value_extractor.py:131] Location(x=30.350834, y=-109.715790, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:49.672230 140307950479104 fitness_value_extractor.py:131] Location(x=30.350832, y=-109.715759, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:50.169029 140307950479104 fitness_value_extractor.py:131] Location(x=30.350832, y=-109.715805, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:50.579225 140307950479104 fitness_value_extractor.py:131] Location(x=30.350830, y=-109.715782, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:51.064983 140307950479104 fitness_value_extractor.py:131] Location(x=30.350830, y=-109.715820, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:51.547344 140307933693696 fitness_value_extractor.py:131] Location(x=30.350824, y=-109.715790, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:51.947556 140307933693696 fitness_value_extractor.py:131] Location(x=30.350824, y=-109.715828, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:52.323901 140307933693696 fitness_value_extractor.py:131] Location(x=30.350821, y=-109.715782, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:52.801133 140307933693696 fitness_value_extractor.py:131] Location(x=30.350821, y=-109.715828, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:53.229245 140307933693696 fitness_value_extractor.py:131] Location(x=30.350817, y=-109.715797, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:53.635087 140307933693696 fitness_value_extractor.py:131] Location(x=30.350815, y=-109.715828, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:54.008488 140307933693696 fitness_value_extractor.py:131] Location(x=30.350813, y=-109.715805, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:54.458826 140307933693696 fitness_value_extractor.py:131] Location(x=30.350813, y=-109.715836, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:54.887029 140307933693696 fitness_value_extractor.py:131] Location(x=30.350809, y=-109.715805, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:55.313082 140307933693696 fitness_value_extractor.py:131] Location(x=30.350809, y=-109.715858, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:55.772244 140307933693696 fitness_value_extractor.py:131] Location(x=30.350807, y=-109.715820, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:56.203736 140307933693696 fitness_value_extractor.py:131] Location(x=30.350805, y=-109.715858, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:56.652316 140307933693696 fitness_value_extractor.py:131] Location(x=30.350803, y=-109.715820, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:57.219660 140307933693696 fitness_value_extractor.py:131] Location(x=30.350800, y=-109.715858, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:57.691103 140307933693696 fitness_value_extractor.py:131] Location(x=30.350798, y=-109.715828, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:58.095279 140307933693696 fitness_value_extractor.py:131] Location(x=30.350798, y=-109.715866, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:58.603303 140307933693696 fitness_value_extractor.py:131] Location(x=30.350796, y=-109.715836, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:59.047813 140307933693696 fitness_value_extractor.py:131] Location(x=30.350792, y=-109.715874, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:59.583974 140307933693696 fitness_value_extractor.py:131] Location(x=30.350790, y=-109.715836, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:38:59.971547 140307933693696 fitness_value_extractor.py:131] Location(x=30.350790, y=-109.715874, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:00.359435 140307933693696 fitness_value_extractor.py:131] Location(x=30.350788, y=-109.715836, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:00.757340 140307933693696 fitness_value_extractor.py:131] Location(x=30.350788, y=-109.715874, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:01.163503 140304125789952 fitness_value_extractor.py:131] Location(x=30.350786, y=-109.715836, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:01.578648 140307933693696 fitness_value_extractor.py:131] Location(x=30.350786, y=-109.715874, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:01.986541 140307933693696 fitness_value_extractor.py:131] Location(x=30.350782, y=-109.715836, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:02.432214 140307933693696 fitness_value_extractor.py:131] Location(x=30.350782, y=-109.715874, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:02.844411 140307933693696 fitness_value_extractor.py:131] Location(x=30.350779, y=-109.715851, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:03.350426 140307933693696 fitness_value_extractor.py:131] Location(x=30.350775, y=-109.715889, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:03.780215 140307933693696 fitness_value_extractor.py:131] Location(x=30.350773, y=-109.715858, z=0.033470)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:04.250705 140307933693696 fitness_value_extractor.py:131] Location(x=30.350771, y=-109.715897, z=0.033471)>DfC:0.0169,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:04.641026 140307933693696 fitness_value_extractor.py:131] Location(x=30.350769, y=-109.715858, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:05.092462 140307933693696 fitness_value_extractor.py:131] Location(x=30.350769, y=-109.715904, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:05.583624 140307933693696 fitness_value_extractor.py:131] Location(x=30.350765, y=-109.715866, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:05.969818 140307933693696 fitness_value_extractor.py:131] Location(x=30.350763, y=-109.715904, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:06.329624 140307933693696 fitness_value_extractor.py:131] Location(x=30.350761, y=-109.715889, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:06.828156 140307933693696 fitness_value_extractor.py:131] Location(x=30.350760, y=-109.715912, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:07.191317 140307933693696 fitness_value_extractor.py:131] Location(x=30.350754, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:07.600732 140307933693696 fitness_value_extractor.py:131] Location(x=30.350754, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:08.010173 140307933693696 fitness_value_extractor.py:131] Location(x=30.350752, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:08.493719 140307933693696 fitness_value_extractor.py:131] Location(x=30.350752, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:08.955313 140307933693696 fitness_value_extractor.py:131] Location(x=30.350748, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:09.378703 140307933693696 fitness_value_extractor.py:131] Location(x=30.350748, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:09.878382 140307933693696 fitness_value_extractor.py:131] Location(x=30.350746, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:10.299996 140307933693696 fitness_value_extractor.py:131] Location(x=30.350744, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:10.718660 140304125789952 fitness_value_extractor.py:131] Location(x=30.350739, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:11.145449 140304125789952 fitness_value_extractor.py:131] Location(x=30.350739, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:11.577529 140304125789952 fitness_value_extractor.py:131] Location(x=30.350737, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:12.034524 140304125789952 fitness_value_extractor.py:131] Location(x=30.350737, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:12.516275 140304125789952 fitness_value_extractor.py:131] Location(x=30.350735, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:12.932338 140304125789952 fitness_value_extractor.py:131] Location(x=30.350731, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:13.405378 140304125789952 fitness_value_extractor.py:131] Location(x=30.350729, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:13.790564 140304125789952 fitness_value_extractor.py:131] Location(x=30.350729, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:14.280470 140304125789952 fitness_value_extractor.py:131] Location(x=30.350727, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:14.663990 140304125789952 fitness_value_extractor.py:131] Location(x=30.350727, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:15.187793 140307967264512 fitness_value_extractor.py:131] Location(x=30.350725, y=-109.715889, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:15.725679 140307967264512 fitness_value_extractor.py:131] Location(x=30.350725, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:16.194969 140307967264512 fitness_value_extractor.py:131] Location(x=30.350721, y=-109.715889, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:16.566792 140307967264512 fitness_value_extractor.py:131] Location(x=30.350725, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:17.055701 140307967264512 fitness_value_extractor.py:131] Location(x=30.350719, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:17.613457 140307967264512 fitness_value_extractor.py:131] Location(x=30.350721, y=-109.715942, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:18.054841 140307967264512 fitness_value_extractor.py:131] Location(x=30.350718, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:18.440732 140307967264512 fitness_value_extractor.py:131] Location(x=30.350718, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:18.882209 140307967264512 fitness_value_extractor.py:131] Location(x=30.350714, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:19.386175 140307967264512 fitness_value_extractor.py:131] Location(x=30.350714, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:19.877039 140307967264512 fitness_value_extractor.py:131] Location(x=30.350710, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:20.268751 140307967264512 fitness_value_extractor.py:131] Location(x=30.350712, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:20.705553 140307967264512 fitness_value_extractor.py:131] Location(x=30.350708, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:21.098317 140307967264512 fitness_value_extractor.py:131] Location(x=30.350710, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:21.582047 140307967264512 fitness_value_extractor.py:131] Location(x=30.350708, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:22.041398 140307967264512 fitness_value_extractor.py:131] Location(x=30.350704, y=-109.715927, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:22.553925 140307967264512 fitness_value_extractor.py:131] Location(x=30.350702, y=-109.715889, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:22.972383 140307967264512 fitness_value_extractor.py:131] Location(x=30.350702, y=-109.715942, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:23.465736 140307967264512 fitness_value_extractor.py:131] Location(x=30.350700, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:23.904156 140307967264512 fitness_value_extractor.py:131] Location(x=30.350700, y=-109.715927, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:24.394581 140307967264512 fitness_value_extractor.py:131] Location(x=30.350695, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:24.883586 140307967264512 fitness_value_extractor.py:131] Location(x=30.350695, y=-109.715935, z=0.033472)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:25.337140 140307967264512 fitness_value_extractor.py:131] Location(x=30.350691, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:25.736637 140307967264512 fitness_value_extractor.py:131] Location(x=30.350691, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:26.222103 140307967264512 fitness_value_extractor.py:131] Location(x=30.350687, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:26.622200 140307967264512 fitness_value_extractor.py:131] Location(x=30.350687, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:27.056661 140307967264512 fitness_value_extractor.py:131] Location(x=30.350685, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:27.506999 140307967264512 fitness_value_extractor.py:131] Location(x=30.350685, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:27.982904 140307967264512 fitness_value_extractor.py:131] Location(x=30.350683, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:28.319278 140307967264512 fitness_value_extractor.py:131] Location(x=30.350683, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:28.747006 140307967264512 fitness_value_extractor.py:131] Location(x=30.350681, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:29.167528 140307967264512 fitness_value_extractor.py:131] Location(x=30.350683, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:29.649466 140307967264512 fitness_value_extractor.py:131] Location(x=30.350681, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:30.146101 140307967264512 fitness_value_extractor.py:131] Location(x=30.350681, y=-109.715935, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:30.615914 140307967264512 fitness_value_extractor.py:131] Location(x=30.350676, y=-109.715897, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:31.052896 140307967264512 fitness_value_extractor.py:131] Location(x=30.350676, y=-109.715942, z=0.033471)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:31.439736 140307967264512 fitness_value_extractor.py:131] Location(x=30.350674, y=-109.715904, z=0.033470)>DfC:0.0170,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:31.833681 140307967264512 fitness_value_extractor.py:131] Location(x=30.350670, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:32.177695 140307967264512 fitness_value_extractor.py:131] Location(x=30.350668, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:32.630394 140307967264512 fitness_value_extractor.py:131] Location(x=30.350668, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:33.003900 140307967264512 fitness_value_extractor.py:131] Location(x=30.350666, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:33.474119 140307967264512 fitness_value_extractor.py:131] Location(x=30.350666, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:33.904453 140307967264512 fitness_value_extractor.py:131] Location(x=30.350664, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:34.416280 140307967264512 fitness_value_extractor.py:131] Location(x=30.350664, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:34.809338 140307967264512 fitness_value_extractor.py:131] Location(x=30.350660, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:35.392331 140307967264512 fitness_value_extractor.py:131] Location(x=30.350660, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:35.814234 140307967264512 fitness_value_extractor.py:131] Location(x=30.350658, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:36.243581 140307967264512 fitness_value_extractor.py:131] Location(x=30.350657, y=-109.715935, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:36.755836 140307967264512 fitness_value_extractor.py:131] Location(x=30.350653, y=-109.715897, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:37.155201 140307967264512 fitness_value_extractor.py:131] Location(x=30.350653, y=-109.715935, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:37.599884 140307967264512 fitness_value_extractor.py:131] Location(x=30.350651, y=-109.715897, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:38.049949 140307967264512 fitness_value_extractor.py:131] Location(x=30.350651, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:38.508954 140307967264512 fitness_value_extractor.py:131] Location(x=30.350647, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:38.915787 140307967264512 fitness_value_extractor.py:131] Location(x=30.350647, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:39.311435 140307967264512 fitness_value_extractor.py:131] Location(x=30.350643, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:39.777068 140307950479104 fitness_value_extractor.py:131] Location(x=30.350643, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:40.171251 140307958871808 fitness_value_extractor.py:131] Location(x=30.350641, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:40.587177 140307958871808 fitness_value_extractor.py:131] Location(x=30.350641, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:41.168794 140307958871808 fitness_value_extractor.py:131] Location(x=30.350639, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:41.660865 140307958871808 fitness_value_extractor.py:131] Location(x=30.350639, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:42.110928 140307958871808 fitness_value_extractor.py:131] Location(x=30.350637, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:42.555401 140307958871808 fitness_value_extractor.py:131] Location(x=30.350637, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:42.946602 140307958871808 fitness_value_extractor.py:131] Location(x=30.350634, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:43.386639 140307958871808 fitness_value_extractor.py:131] Location(x=30.350632, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:43.845550 140304125789952 fitness_value_extractor.py:131] Location(x=30.350630, y=-109.715904, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:44.291089 140304125789952 fitness_value_extractor.py:131] Location(x=30.350630, y=-109.715958, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:44.833371 140304125789952 fitness_value_extractor.py:131] Location(x=30.350626, y=-109.715912, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:45.361335 140304125789952 fitness_value_extractor.py:131] Location(x=30.350624, y=-109.715942, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:45.830740 140304125789952 fitness_value_extractor.py:131] Location(x=30.350622, y=-109.715912, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:46.261880 140304125789952 fitness_value_extractor.py:131] Location(x=30.350622, y=-109.715958, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:46.681314 140304125789952 fitness_value_extractor.py:131] Location(x=30.350620, y=-109.715912, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:47.162783 140304125789952 fitness_value_extractor.py:131] Location(x=30.350620, y=-109.715958, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:47.598313 140304125789952 fitness_value_extractor.py:131] Location(x=30.350616, y=-109.715912, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:47.939837 140304125789952 fitness_value_extractor.py:131] Location(x=30.350616, y=-109.715958, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:48.427245 140304125789952 fitness_value_extractor.py:131] Location(x=30.350615, y=-109.715912, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:48.826288 140304125789952 fitness_value_extractor.py:131] Location(x=30.350615, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:49.261925 140304125789952 fitness_value_extractor.py:131] Location(x=30.350609, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:49.689608 140304125789952 fitness_value_extractor.py:131] Location(x=30.350613, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:50.143157 140304125789952 fitness_value_extractor.py:131] Location(x=30.350607, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:50.573639 140304125789952 fitness_value_extractor.py:131] Location(x=30.350607, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:50.924658 140304125789952 fitness_value_extractor.py:131] Location(x=30.350605, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:51.462084 140304125789952 fitness_value_extractor.py:131] Location(x=30.350605, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:52.022976 140304125789952 fitness_value_extractor.py:131] Location(x=30.350599, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:52.398900 140304125789952 fitness_value_extractor.py:131] Location(x=30.350603, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:52.814155 140304125789952 fitness_value_extractor.py:131] Location(x=30.350599, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:53.331333 140304125789952 fitness_value_extractor.py:131] Location(x=30.350599, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:53.707565 140304125789952 fitness_value_extractor.py:131] Location(x=30.350597, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:54.106758 140304125789952 fitness_value_extractor.py:131] Location(x=30.350597, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:54.485842 140304125789952 fitness_value_extractor.py:131] Location(x=30.350592, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:54.905135 140304125789952 fitness_value_extractor.py:131] Location(x=30.350592, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:55.427927 140304125789952 fitness_value_extractor.py:131] Location(x=30.350590, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:55.890713 140304125789952 fitness_value_extractor.py:131] Location(x=30.350590, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:56.376904 140304125789952 fitness_value_extractor.py:131] Location(x=30.350588, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:56.773149 140304125789952 fitness_value_extractor.py:131] Location(x=30.350586, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:57.140157 140304125789952 fitness_value_extractor.py:131] Location(x=30.350582, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:57.543656 140304125789952 fitness_value_extractor.py:131] Location(x=30.350582, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:57.977344 140304125789952 fitness_value_extractor.py:131] Location(x=30.350578, y=-109.715927, z=0.033470)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:58.401073 140304125789952 fitness_value_extractor.py:131] Location(x=30.350578, y=-109.715965, z=0.033471)>DfC:0.0171,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:58.875966 140304125789952 fitness_value_extractor.py:131] Location(x=30.350573, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:59.303401 140304125789952 fitness_value_extractor.py:131] Location(x=30.350573, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:39:59.788670 140304125789952 fitness_value_extractor.py:131] Location(x=30.350569, y=-109.715912, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:00.239065 140304125789952 fitness_value_extractor.py:131] Location(x=30.350569, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:00.552381 140304125789952 fitness_value_extractor.py:131] Location(x=30.350565, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:00.984599 140307933693696 fitness_value_extractor.py:131] Location(x=30.350563, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:01.416018 140307933693696 fitness_value_extractor.py:131] Location(x=30.350561, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:01.743164 140307933693696 fitness_value_extractor.py:131] Location(x=30.350561, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:02.196591 140307984049920 fitness_value_extractor.py:131] Location(x=30.350559, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:02.631949 140307984049920 fitness_value_extractor.py:131] Location(x=30.350559, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:03.053833 140307984049920 fitness_value_extractor.py:131] Location(x=30.350555, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:03.499857 140307984049920 fitness_value_extractor.py:131] Location(x=30.350555, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:04.017003 140307984049920 fitness_value_extractor.py:131] Location(x=30.350554, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:04.388435 140307984049920 fitness_value_extractor.py:131] Location(x=30.350552, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:04.820488 140307984049920 fitness_value_extractor.py:131] Location(x=30.350548, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:05.236368 140307984049920 fitness_value_extractor.py:131] Location(x=30.350552, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:05.698573 140307984049920 fitness_value_extractor.py:131] Location(x=30.350548, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:06.221022 140307984049920 fitness_value_extractor.py:131] Location(x=30.350548, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:06.720143 140307984049920 fitness_value_extractor.py:131] Location(x=30.350546, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:07.211253 140307984049920 fitness_value_extractor.py:131] Location(x=30.350544, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:07.664375 140307984049920 fitness_value_extractor.py:131] Location(x=30.350542, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:08.156275 140307984049920 fitness_value_extractor.py:131] Location(x=30.350542, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:08.589942 140307984049920 fitness_value_extractor.py:131] Location(x=30.350538, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:09.071371 140307984049920 fitness_value_extractor.py:131] Location(x=30.350538, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:09.602966 140307984049920 fitness_value_extractor.py:131] Location(x=30.350536, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:10.041330 140307984049920 fitness_value_extractor.py:131] Location(x=30.350536, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:10.646411 140307984049920 fitness_value_extractor.py:131] Location(x=30.350534, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:11.125805 140307984049920 fitness_value_extractor.py:131] Location(x=30.350531, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:11.593618 140307984049920 fitness_value_extractor.py:131] Location(x=30.350529, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:12.049910 140307984049920 fitness_value_extractor.py:131] Location(x=30.350529, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:12.505846 140307984049920 fitness_value_extractor.py:131] Location(x=30.350527, y=-109.715912, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:12.884643 140307984049920 fitness_value_extractor.py:131] Location(x=30.350527, y=-109.715958, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:13.301635 140307984049920 fitness_value_extractor.py:131] Location(x=30.350525, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:13.720568 140307984049920 fitness_value_extractor.py:131] Location(x=30.350525, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:14.130411 140307984049920 fitness_value_extractor.py:131] Location(x=30.350519, y=-109.715912, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:14.569553 140307984049920 fitness_value_extractor.py:131] Location(x=30.350519, y=-109.715958, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:14.986059 140307984049920 fitness_value_extractor.py:131] Location(x=30.350517, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:15.450135 140307984049920 fitness_value_extractor.py:131] Location(x=30.350517, y=-109.715965, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:15.798155 140307984049920 fitness_value_extractor.py:131] Location(x=30.350515, y=-109.715927, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:16.223419 140307984049920 fitness_value_extractor.py:131] Location(x=30.350512, y=-109.715973, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:16.644022 140307984049920 fitness_value_extractor.py:131] Location(x=30.350510, y=-109.715935, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:17.079392 140307984049920 fitness_value_extractor.py:131] Location(x=30.350510, y=-109.715981, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:17.529497 140307984049920 fitness_value_extractor.py:131] Location(x=30.350508, y=-109.715942, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:17.988065 140307984049920 fitness_value_extractor.py:131] Location(x=30.350508, y=-109.715981, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:18.468072 140307984049920 fitness_value_extractor.py:131] Location(x=30.350504, y=-109.715942, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:18.857366 140307984049920 fitness_value_extractor.py:131] Location(x=30.350502, y=-109.715981, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:19.266678 140307984049920 fitness_value_extractor.py:131] Location(x=30.350500, y=-109.715942, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:19.655379 140307984049920 fitness_value_extractor.py:131] Location(x=30.350500, y=-109.715981, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:20.177985 140307984049920 fitness_value_extractor.py:131] Location(x=30.350498, y=-109.715942, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:20.625487 140307984049920 fitness_value_extractor.py:131] Location(x=30.350498, y=-109.715981, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:21.067446 140307984049920 fitness_value_extractor.py:131] Location(x=30.350494, y=-109.715942, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:21.601879 140307984049920 fitness_value_extractor.py:131] Location(x=30.350498, y=-109.715981, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:22.104505 140307984049920 fitness_value_extractor.py:131] Location(x=30.350492, y=-109.715942, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:22.511649 140307984049920 fitness_value_extractor.py:131] Location(x=30.350492, y=-109.715996, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:22.944133 140307984049920 fitness_value_extractor.py:131] Location(x=30.350487, y=-109.715958, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:23.402865 140307984049920 fitness_value_extractor.py:131] Location(x=30.350491, y=-109.715996, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:23.879338 140307984049920 fitness_value_extractor.py:131] Location(x=30.350487, y=-109.715965, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:24.228584 140307984049920 fitness_value_extractor.py:131] Location(x=30.350485, y=-109.716003, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:24.630048 140307984049920 fitness_value_extractor.py:131] Location(x=30.350483, y=-109.715965, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:25.001906 140307984049920 fitness_value_extractor.py:131] Location(x=30.350483, y=-109.716011, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:25.471230 140307984049920 fitness_value_extractor.py:131] Location(x=30.350481, y=-109.715973, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:25.878396 140307984049920 fitness_value_extractor.py:131] Location(x=30.350481, y=-109.715996, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:26.249280 140307984049920 fitness_value_extractor.py:131] Location(x=30.350477, y=-109.715965, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:26.704893 140307984049920 fitness_value_extractor.py:131] Location(x=30.350477, y=-109.716011, z=0.033471)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:27.172252 140307984049920 fitness_value_extractor.py:131] Location(x=30.350475, y=-109.715973, z=0.033470)>DfC:0.0172,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:27.509245 140307984049920 fitness_value_extractor.py:131] Location(x=30.350473, y=-109.716003, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:27.981258 140307933693696 fitness_value_extractor.py:131] Location(x=30.350470, y=-109.715965, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:28.398936 140307933693696 fitness_value_extractor.py:131] Location(x=30.350470, y=-109.716003, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:28.938030 140307933693696 fitness_value_extractor.py:131] Location(x=30.350468, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:29.319145 140307933693696 fitness_value_extractor.py:131] Location(x=30.350468, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:29.724185 140307933693696 fitness_value_extractor.py:131] Location(x=30.350466, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:30.129572 140307933693696 fitness_value_extractor.py:131] Location(x=30.350466, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:30.654085 140307933693696 fitness_value_extractor.py:131] Location(x=30.350464, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:31.160700 140307933693696 fitness_value_extractor.py:131] Location(x=30.350464, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:31.672556 140307933693696 fitness_value_extractor.py:131] Location(x=30.350460, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:32.080395 140307933693696 fitness_value_extractor.py:131] Location(x=30.350464, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:32.538795 140307933693696 fitness_value_extractor.py:131] Location(x=30.350460, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:33.053793 140307933693696 fitness_value_extractor.py:131] Location(x=30.350458, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:33.536692 140307933693696 fitness_value_extractor.py:131] Location(x=30.350456, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:34.124257 140307933693696 fitness_value_extractor.py:131] Location(x=30.350456, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:34.666913 140307933693696 fitness_value_extractor.py:131] Location(x=30.350454, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:35.149066 140307933693696 fitness_value_extractor.py:131] Location(x=30.350454, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:35.732516 140307933693696 fitness_value_extractor.py:131] Location(x=30.350451, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:36.179047 140307933693696 fitness_value_extractor.py:131] Location(x=30.350451, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:36.621817 140307933693696 fitness_value_extractor.py:131] Location(x=30.350449, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:37.054490 140307933693696 fitness_value_extractor.py:131] Location(x=30.350449, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:37.606667 140307933693696 fitness_value_extractor.py:131] Location(x=30.350447, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:38.026891 140307933693696 fitness_value_extractor.py:131] Location(x=30.350447, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:38.492320 140307933693696 fitness_value_extractor.py:131] Location(x=30.350443, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:38.865806 140307933693696 fitness_value_extractor.py:131] Location(x=30.350441, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:39.361342 140307933693696 fitness_value_extractor.py:131] Location(x=30.350439, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:39.781053 140307933693696 fitness_value_extractor.py:131] Location(x=30.350441, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:40.211953 140307933693696 fitness_value_extractor.py:131] Location(x=30.350439, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:40.624434 140307933693696 fitness_value_extractor.py:131] Location(x=30.350439, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:41.014600 140307933693696 fitness_value_extractor.py:131] Location(x=30.350437, y=-109.715965, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:41.484488 140307933693696 fitness_value_extractor.py:131] Location(x=30.350437, y=-109.716026, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:41.863945 140307933693696 fitness_value_extractor.py:131] Location(x=30.350433, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:42.272509 140307933693696 fitness_value_extractor.py:131] Location(x=30.350431, y=-109.716011, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:42.734241 140307933693696 fitness_value_extractor.py:131] Location(x=30.350430, y=-109.715981, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:43.177329 140307933693696 fitness_value_extractor.py:131] Location(x=30.350431, y=-109.716034, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:43.675817 140307933693696 fitness_value_extractor.py:131] Location(x=30.350426, y=-109.715973, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:44.155265 140307933693696 fitness_value_extractor.py:131] Location(x=30.350426, y=-109.716026, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:44.684628 140307933693696 fitness_value_extractor.py:131] Location(x=30.350424, y=-109.715996, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:45.226203 140307933693696 fitness_value_extractor.py:131] Location(x=30.350424, y=-109.716042, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:45.670024 140307933693696 fitness_value_extractor.py:131] Location(x=30.350420, y=-109.715996, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:46.191623 140307933693696 fitness_value_extractor.py:131] Location(x=30.350420, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:46.629395 140307933693696 fitness_value_extractor.py:131] Location(x=30.350416, y=-109.716003, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:47.033737 140307933693696 fitness_value_extractor.py:131] Location(x=30.350416, y=-109.716042, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:47.470743 140307933693696 fitness_value_extractor.py:131] Location(x=30.350414, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:47.855020 140307933693696 fitness_value_extractor.py:131] Location(x=30.350414, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:48.316181 140307933693696 fitness_value_extractor.py:131] Location(x=30.350412, y=-109.716026, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:48.679402 140307933693696 fitness_value_extractor.py:131] Location(x=30.350412, y=-109.716064, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:49.085122 140307933693696 fitness_value_extractor.py:131] Location(x=30.350409, y=-109.716026, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:49.580552 140307933693696 fitness_value_extractor.py:131] Location(x=30.350409, y=-109.716064, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:50.027367 140307933693696 fitness_value_extractor.py:131] Location(x=30.350405, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:50.493180 140307933693696 fitness_value_extractor.py:131] Location(x=30.350405, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:50.966813 140307933693696 fitness_value_extractor.py:131] Location(x=30.350403, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:51.454321 140307933693696 fitness_value_extractor.py:131] Location(x=30.350403, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:51.892597 140307933693696 fitness_value_extractor.py:131] Location(x=30.350399, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:52.426659 140307933693696 fitness_value_extractor.py:131] Location(x=30.350399, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:52.990927 140307933693696 fitness_value_extractor.py:131] Location(x=30.350397, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:53.325148 140307933693696 fitness_value_extractor.py:131] Location(x=30.350397, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:53.846951 140307933693696 fitness_value_extractor.py:131] Location(x=30.350395, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:54.302260 140307933693696 fitness_value_extractor.py:131] Location(x=30.350395, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:54.846460 140307933693696 fitness_value_extractor.py:131] Location(x=30.350395, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:55.327586 140307933693696 fitness_value_extractor.py:131] Location(x=30.350395, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:55.794012 140307933693696 fitness_value_extractor.py:131] Location(x=30.350393, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:56.183310 140307933693696 fitness_value_extractor.py:131] Location(x=30.350393, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:56.603234 140307933693696 fitness_value_extractor.py:131] Location(x=30.350388, y=-109.716003, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:57.055862 140307933693696 fitness_value_extractor.py:131] Location(x=30.350388, y=-109.716042, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:57.483564 140307933693696 fitness_value_extractor.py:131] Location(x=30.350382, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:57.920537 140307933693696 fitness_value_extractor.py:131] Location(x=30.350382, y=-109.716049, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:58.355373 140307933693696 fitness_value_extractor.py:131] Location(x=30.350380, y=-109.716011, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:58.745343 140307933693696 fitness_value_extractor.py:131] Location(x=30.350380, y=-109.716042, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:59.177033 140307933693696 fitness_value_extractor.py:131] Location(x=30.350378, y=-109.716003, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:40:59.605815 140307933693696 fitness_value_extractor.py:131] Location(x=30.350378, y=-109.716042, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:00.010958 140307933693696 fitness_value_extractor.py:131] Location(x=30.350376, y=-109.716003, z=0.033470)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:00.497455 140307933693696 fitness_value_extractor.py:131] Location(x=30.350376, y=-109.716042, z=0.033471)>DfC:0.0173,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:00.924112 140307933693696 fitness_value_extractor.py:131] Location(x=30.350372, y=-109.716003, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:01.479202 140307933693696 fitness_value_extractor.py:131] Location(x=30.350372, y=-109.716042, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:01.921747 140307933693696 fitness_value_extractor.py:131] Location(x=30.350368, y=-109.716003, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:02.391222 140307933693696 fitness_value_extractor.py:131] Location(x=30.350370, y=-109.716042, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:02.786361 140307933693696 fitness_value_extractor.py:131] Location(x=30.350365, y=-109.716003, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:03.217143 140307933693696 fitness_value_extractor.py:131] Location(x=30.350365, y=-109.716042, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:03.699287 140307933693696 fitness_value_extractor.py:131] Location(x=30.350363, y=-109.716003, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:04.209646 140307933693696 fitness_value_extractor.py:131] Location(x=30.350363, y=-109.716042, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:04.606561 140307933693696 fitness_value_extractor.py:131] Location(x=30.350361, y=-109.715996, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:05.086895 140307933693696 fitness_value_extractor.py:131] Location(x=30.350363, y=-109.716042, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:05.496398 140307933693696 fitness_value_extractor.py:131] Location(x=30.350361, y=-109.716003, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:05.946714 140307933693696 fitness_value_extractor.py:131] Location(x=30.350361, y=-109.716042, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:06.313359 140307933693696 fitness_value_extractor.py:131] Location(x=30.350359, y=-109.716003, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:06.787834 140307933693696 fitness_value_extractor.py:131] Location(x=30.350355, y=-109.716049, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:07.371900 140307933693696 fitness_value_extractor.py:131] Location(x=30.350353, y=-109.716034, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:07.742312 140307933693696 fitness_value_extractor.py:131] Location(x=30.350353, y=-109.716080, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:08.137090 140307933693696 fitness_value_extractor.py:131] Location(x=30.350351, y=-109.716064, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:08.668523 140307933693696 fitness_value_extractor.py:131] Location(x=30.350351, y=-109.716110, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:09.093871 140307933693696 fitness_value_extractor.py:131] Location(x=30.350348, y=-109.716080, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:09.579370 140307933693696 fitness_value_extractor.py:131] Location(x=30.350351, y=-109.716133, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:10.072384 140307933693696 fitness_value_extractor.py:131] Location(x=30.350346, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:10.524432 140307933693696 fitness_value_extractor.py:131] Location(x=30.350346, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:11.017315 140307933693696 fitness_value_extractor.py:131] Location(x=30.350344, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:11.546247 140307933693696 fitness_value_extractor.py:131] Location(x=30.350344, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:11.983235 140307933693696 fitness_value_extractor.py:131] Location(x=30.350342, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:12.472961 140307933693696 fitness_value_extractor.py:131] Location(x=30.350342, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:12.912857 140307933693696 fitness_value_extractor.py:131] Location(x=30.350338, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:13.474643 140307933693696 fitness_value_extractor.py:131] Location(x=30.350338, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:13.954471 140307933693696 fitness_value_extractor.py:131] Location(x=30.350336, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:14.478385 140307933693696 fitness_value_extractor.py:131] Location(x=30.350336, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:14.987818 140307933693696 fitness_value_extractor.py:131] Location(x=30.350332, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:15.428061 140307933693696 fitness_value_extractor.py:131] Location(x=30.350332, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:15.879847 140307933693696 fitness_value_extractor.py:131] Location(x=30.350328, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:16.317499 140307933693696 fitness_value_extractor.py:131] Location(x=30.350328, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:16.703773 140307933693696 fitness_value_extractor.py:131] Location(x=30.350327, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:17.116920 140307933693696 fitness_value_extractor.py:131] Location(x=30.350328, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:17.601630 140307933693696 fitness_value_extractor.py:131] Location(x=30.350327, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:18.080598 140307933693696 fitness_value_extractor.py:131] Location(x=30.350325, y=-109.716141, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:18.578510 140307933693696 fitness_value_extractor.py:131] Location(x=30.350319, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:19.086331 140307933693696 fitness_value_extractor.py:131] Location(x=30.350319, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:19.582334 140307933693696 fitness_value_extractor.py:131] Location(x=30.350317, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:19.982378 140307933693696 fitness_value_extractor.py:131] Location(x=30.350317, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:20.318088 140307933693696 fitness_value_extractor.py:131] Location(x=30.350315, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:20.771087 140307933693696 fitness_value_extractor.py:131] Location(x=30.350311, y=-109.716141, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:21.219000 140307933693696 fitness_value_extractor.py:131] Location(x=30.350309, y=-109.716103, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:21.697280 140307933693696 fitness_value_extractor.py:131] Location(x=30.350309, y=-109.716141, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:22.178238 140307933693696 fitness_value_extractor.py:131] Location(x=30.350307, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:22.571315 140307933693696 fitness_value_extractor.py:131] Location(x=30.350307, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:23.056082 140307933693696 fitness_value_extractor.py:131] Location(x=30.350304, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:23.367561 140307933693696 fitness_value_extractor.py:131] Location(x=30.350304, y=-109.716148, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:23.844700 140307958871808 fitness_value_extractor.py:131] Location(x=30.350302, y=-109.716110, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:24.290401 140307958871808 fitness_value_extractor.py:131] Location(x=30.350300, y=-109.716141, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:24.707829 140307958871808 fitness_value_extractor.py:131] Location(x=30.350298, y=-109.716118, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:25.086585 140307958871808 fitness_value_extractor.py:131] Location(x=30.350298, y=-109.716171, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:25.531873 140307958871808 fitness_value_extractor.py:131] Location(x=30.350294, y=-109.716141, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:25.943671 140307958871808 fitness_value_extractor.py:131] Location(x=30.350298, y=-109.716179, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:26.343283 140307958871808 fitness_value_extractor.py:131] Location(x=30.350290, y=-109.716133, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:26.764004 140307958871808 fitness_value_extractor.py:131] Location(x=30.350290, y=-109.716179, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:27.187515 140307958871808 fitness_value_extractor.py:131] Location(x=30.350286, y=-109.716148, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:27.693409 140307958871808 fitness_value_extractor.py:131] Location(x=30.350286, y=-109.716179, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:28.064657 140307958871808 fitness_value_extractor.py:131] Location(x=30.350285, y=-109.716141, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:28.555664 140307958871808 fitness_value_extractor.py:131] Location(x=30.350286, y=-109.716179, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:28.959444 140307958871808 fitness_value_extractor.py:131] Location(x=30.350283, y=-109.716141, z=0.033470)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:29.387932 140307958871808 fitness_value_extractor.py:131] Location(x=30.350283, y=-109.716179, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:29.815092 140307958871808 fitness_value_extractor.py:131] Location(x=30.350277, y=-109.716141, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:30.334355 140307958871808 fitness_value_extractor.py:131] Location(x=30.350281, y=-109.716171, z=0.033471)>DfC:0.0174,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:30.850497 140307958871808 fitness_value_extractor.py:131] Location(x=30.350275, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:31.271574 140307958871808 fitness_value_extractor.py:131] Location(x=30.350277, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:31.632187 140307958871808 fitness_value_extractor.py:131] Location(x=30.350275, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:32.069328 140307958871808 fitness_value_extractor.py:131] Location(x=30.350275, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:32.587875 140307958871808 fitness_value_extractor.py:131] Location(x=30.350273, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:32.999331 140307958871808 fitness_value_extractor.py:131] Location(x=30.350273, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:33.378783 140307958871808 fitness_value_extractor.py:131] Location(x=30.350271, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:33.866064 140307958871808 fitness_value_extractor.py:131] Location(x=30.350271, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:34.326453 140307958871808 fitness_value_extractor.py:131] Location(x=30.350267, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:34.800670 140307958871808 fitness_value_extractor.py:131] Location(x=30.350267, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:35.297154 140307942086400 fitness_value_extractor.py:131] Location(x=30.350266, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:35.777385 140307942086400 fitness_value_extractor.py:131] Location(x=30.350267, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:36.209085 140307942086400 fitness_value_extractor.py:131] Location(x=30.350264, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:36.575458 140307942086400 fitness_value_extractor.py:131] Location(x=30.350266, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:37.046259 140307942086400 fitness_value_extractor.py:131] Location(x=30.350264, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:37.476032 140307942086400 fitness_value_extractor.py:131] Location(x=30.350260, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:37.970252 140307942086400 fitness_value_extractor.py:131] Location(x=30.350258, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:38.403112 140307942086400 fitness_value_extractor.py:131] Location(x=30.350258, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:38.787694 140307942086400 fitness_value_extractor.py:131] Location(x=30.350256, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:39.149867 140307942086400 fitness_value_extractor.py:131] Location(x=30.350256, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:39.567441 140307958871808 fitness_value_extractor.py:131] Location(x=30.350254, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:40.026282 140307958871808 fitness_value_extractor.py:131] Location(x=30.350250, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:40.469230 140307958871808 fitness_value_extractor.py:131] Location(x=30.350248, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:40.867808 140307958871808 fitness_value_extractor.py:131] Location(x=30.350248, y=-109.716156, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:41.284816 140307958871808 fitness_value_extractor.py:131] Location(x=30.350246, y=-109.716118, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:41.784190 140307958871808 fitness_value_extractor.py:131] Location(x=30.350248, y=-109.716171, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:42.235031 140307958871808 fitness_value_extractor.py:131] Location(x=30.350243, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:42.693667 140304125789952 fitness_value_extractor.py:131] Location(x=30.350243, y=-109.716156, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:43.084762 140304125789952 fitness_value_extractor.py:131] Location(x=30.350241, y=-109.716133, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:43.605779 140304125789952 fitness_value_extractor.py:131] Location(x=30.350241, y=-109.716179, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:44.095941 140304125789952 fitness_value_extractor.py:131] Location(x=30.350237, y=-109.716156, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:44.659995 140304125789952 fitness_value_extractor.py:131] Location(x=30.350237, y=-109.716209, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:45.150367 140304125789952 fitness_value_extractor.py:131] Location(x=30.350233, y=-109.716179, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:45.634355 140304125789952 fitness_value_extractor.py:131] Location(x=30.350233, y=-109.716217, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:46.143848 140304125789952 fitness_value_extractor.py:131] Location(x=30.350231, y=-109.716179, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:46.582739 140304125789952 fitness_value_extractor.py:131] Location(x=30.350233, y=-109.716217, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.35,DfM:14.08,DT:20.12
I0902 18:41:47.053384 140304125789952 fitness_value_extractor.py:131] Location(x=30.350231, y=-109.716179, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:47.574289 140304125789952 fitness_value_extractor.py:131] Location(x=30.350231, y=-109.716217, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:48.030691 140304125789952 fitness_value_extractor.py:131] Location(x=30.350229, y=-109.716179, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:48.440327 140304125789952 fitness_value_extractor.py:131] Location(x=30.350229, y=-109.716225, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:48.913680 140304125789952 fitness_value_extractor.py:131] Location(x=30.350225, y=-109.716202, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:49.306575 140304125789952 fitness_value_extractor.py:131] Location(x=30.350225, y=-109.716248, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:49.734234 140304125789952 fitness_value_extractor.py:131] Location(x=30.350225, y=-109.716225, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:50.192221 140304125789952 fitness_value_extractor.py:131] Location(x=30.350224, y=-109.716270, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:50.753110 140304125789952 fitness_value_extractor.py:131] Location(x=30.350222, y=-109.716225, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:51.173324 140304125789952 fitness_value_extractor.py:131] Location(x=30.350220, y=-109.716278, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:51.556308 140304125789952 fitness_value_extractor.py:131] Location(x=30.350216, y=-109.716248, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:51.964556 140304125789952 fitness_value_extractor.py:131] Location(x=30.350216, y=-109.716286, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:52.366411 140304125789952 fitness_value_extractor.py:131] Location(x=30.350214, y=-109.716248, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:52.729516 140307950479104 fitness_value_extractor.py:131] Location(x=30.350214, y=-109.716278, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:53.098463 140307950479104 fitness_value_extractor.py:131] Location(x=30.350212, y=-109.716240, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:53.585199 140307950479104 fitness_value_extractor.py:131] Location(x=30.350212, y=-109.716278, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:54.071386 140307950479104 fitness_value_extractor.py:131] Location(x=30.350210, y=-109.716240, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:54.536046 140307950479104 fitness_value_extractor.py:131] Location(x=30.350210, y=-109.716286, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:54.982957 140307950479104 fitness_value_extractor.py:131] Location(x=30.350206, y=-109.716248, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:55.319143 140307950479104 fitness_value_extractor.py:131] Location(x=30.350204, y=-109.716286, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:55.768121 140307950479104 fitness_value_extractor.py:131] Location(x=30.350199, y=-109.716255, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:56.175120 140307950479104 fitness_value_extractor.py:131] Location(x=30.350199, y=-109.716293, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:56.639345 140307950479104 fitness_value_extractor.py:131] Location(x=30.350197, y=-109.716255, z=0.033470)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:57.002018 140307950479104 fitness_value_extractor.py:131] Location(x=30.350199, y=-109.716293, z=0.033471)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:57.552073 140307950479104 fitness_value_extractor.py:131] Location(x=30.350197, y=-109.716179, z=0.033467)>DfC:0.0175,DfV:-0.35,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:57.908342 140307950479104 fitness_value_extractor.py:131] Location(x=30.350185, y=-109.715698, z=0.033456)>DfC:0.0175,DfV:-0.34,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:58.251477 140307950479104 fitness_value_extractor.py:131] Location(x=30.350161, y=-109.714760, z=0.033442)>DfC:0.0175,DfV:-0.34,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:58.743752 140307950479104 fitness_value_extractor.py:131] Location(x=30.350136, y=-109.713631, z=0.033434)>DfC:0.0175,DfV:-0.34,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:59.131032 140307950479104 fitness_value_extractor.py:131] Location(x=30.350103, y=-109.712204, z=0.033426)>DfC:0.0175,DfV:-0.33,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:59.614619 140307950479104 fitness_value_extractor.py:131] Location(x=30.350073, y=-109.710724, z=0.033424)>DfC:0.0175,DfV:-0.33,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:41:59.943579 140307950479104 fitness_value_extractor.py:131] Location(x=30.350037, y=-109.709068, z=0.033422)>DfC:0.0175,DfV:-0.32,DfP:6.34,DfM:14.08,DT:20.12
I0902 18:42:00.412543 140304125789952 fitness_value_extractor.py:131] Location(x=30.349998, y=-109.707458, z=0.033424)>DfC:0.0175,DfV:-0.31,DfP:6.34,DfM:14.08,DT:20.11
I0902 18:42:00.833725 140304125789952 fitness_value_extractor.py:131] Location(x=30.349962, y=-109.705750, z=0.033424)>DfC:0.0175,DfV:-0.30,DfP:6.34,DfM:14.08,DT:20.11
I0902 18:42:01.177314 140304125789952 fitness_value_extractor.py:131] Location(x=30.349928, y=-109.704147, z=0.033427)>DfC:0.0175,DfV:-0.28,DfP:6.34,DfM:14.08,DT:20.11
I0902 18:42:01.666418 140304125789952 fitness_value_extractor.py:131] Location(x=30.349892, y=-109.702477, z=0.033428)>DfC:0.0175,DfV:-0.27,DfP:6.34,DfM:14.07,DT:20.11
I0902 18:42:02.199960 140304125789952 fitness_value_extractor.py:131] Location(x=30.349857, y=-109.700928, z=0.033431)>DfC:0.0175,DfV:-0.25,DfP:6.34,DfM:14.07,DT:20.11
I0902 18:42:02.676172 140304125789952 fitness_value_extractor.py:131] Location(x=30.349823, y=-109.699341, z=0.033431)>DfC:0.0175,DfV:-0.23,DfP:6.34,DfM:14.07,DT:20.11
I0902 18:42:03.083241 140304125789952 fitness_value_extractor.py:131] Location(x=30.349792, y=-109.697899, z=0.033434)>DfC:0.0174,DfV:-0.20,DfP:6.34,DfM:14.07,DT:20.11
I0902 18:42:03.479959 140304125789952 fitness_value_extractor.py:131] Location(x=30.349758, y=-109.696434, z=0.033434)>DfC:0.0174,DfV:-0.18,DfP:6.34,DfM:14.07,DT:20.11
I0902 18:42:03.969436 140304125789952 fitness_value_extractor.py:131] Location(x=30.349728, y=-109.695107, z=0.033436)>DfC:0.0174,DfV:-0.15,DfP:6.34,DfM:14.07,DT:20.11
I0902 18:42:04.422129 140304125789952 fitness_value_extractor.py:131] Location(x=30.349699, y=-109.693756, z=0.033435)>DfC:0.0174,DfV:-0.12,DfP:6.34,DfM:14.07,DT:20.10
I0902 18:42:04.843732 140304125789952 fitness_value_extractor.py:131] Location(x=30.349674, y=-109.692558, z=0.033437)>DfC:0.0174,DfV:-0.10,DfP:6.34,DfM:14.07,DT:20.10
I0902 18:42:05.445760 140304125789952 fitness_value_extractor.py:131] Location(x=30.349648, y=-109.691307, z=0.033436)>DfC:0.0174,DfV:-0.06,DfP:6.34,DfM:14.07,DT:20.10
I0902 18:42:05.852526 140304125789952 fitness_value_extractor.py:131] Location(x=30.349623, y=-109.690201, z=0.033438)>DfC:0.0174,DfV:-0.03,DfP:6.34,DfM:14.07,DT:20.10
I0902 18:42:06.353820 140304125789952 fitness_value_extractor.py:131] Location(x=30.349596, y=-109.689049, z=0.033436)>DfC:0.0174,DfV:0.01,DfP:6.34,DfM:14.07,DT:20.10
I0902 18:42:06.794907 140304125789952 fitness_value_extractor.py:131] Location(x=30.349571, y=-109.688034, z=0.033438)>DfC:0.0174,DfV:0.05,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:07.208701 140304125789952 fitness_value_extractor.py:131] Location(x=30.349550, y=-109.686958, z=0.033436)>DfC:0.0174,DfV:0.09,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:07.638015 140304125789952 fitness_value_extractor.py:131] Location(x=30.349527, y=-109.686012, z=0.033437)>DfC:0.0174,DfV:0.13,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:08.115384 140304125789952 fitness_value_extractor.py:131] Location(x=30.349506, y=-109.685005, z=0.033436)>DfC:0.0174,DfV:0.17,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:08.544038 140304125789952 fitness_value_extractor.py:131] Location(x=30.349489, y=-109.684120, z=0.033437)>DfC:0.0174,DfV:0.22,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:08.978754 140304125789952 fitness_value_extractor.py:131] Location(x=30.349470, y=-109.683159, z=0.033435)>DfC:0.0174,DfV:0.26,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:09.388365 140304125789952 fitness_value_extractor.py:131] Location(x=30.349453, y=-109.682320, z=0.033436)>DfC:0.0174,DfV:0.31,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:09.886454 140304125789952 fitness_value_extractor.py:131] Location(x=30.349432, y=-109.681412, z=0.033435)>DfC:0.0174,DfV:0.37,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:10.306338 140304125789952 fitness_value_extractor.py:131] Location(x=30.349417, y=-109.680603, z=0.033436)>DfC:0.0174,DfV:0.42,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:10.710439 140304125789952 fitness_value_extractor.py:131] Location(x=30.349396, y=-109.679741, z=0.033434)>DfC:0.0174,DfV:0.47,DfP:6.34,DfM:14.06,DT:20.10
I0902 18:42:11.131717 140304125789952 fitness_value_extractor.py:131] Location(x=30.349379, y=-109.678963, z=0.033435)>DfC:0.0174,DfV:0.53,DfP:6.34,DfM:14.06,DT:20.09
I0902 18:42:11.584888 140304125789952 fitness_value_extractor.py:131] Location(x=30.349365, y=-109.678116, z=0.033434)>DfC:0.0173,DfV:0.59,DfP:6.34,DfM:14.06,DT:20.09
I0902 18:42:12.014043 140304125789952 fitness_value_extractor.py:131] Location(x=30.349348, y=-109.677292, z=0.033434)>DfC:0.0173,DfV:0.65,DfP:6.34,DfM:14.06,DT:20.09
I0902 18:42:12.430214 140304125789952 fitness_value_extractor.py:131] Location(x=30.349323, y=-109.676208, z=0.033429)>DfC:0.0173,DfV:0.71,DfP:6.34,DfM:14.06,DT:20.09
I0902 18:42:12.852694 140304125789952 fitness_value_extractor.py:131] Location(x=30.349289, y=-109.674713, z=0.033422)>DfC:0.0173,DfV:0.77,DfP:6.34,DfM:14.05,DT:20.09
I0902 18:42:13.318751 140304125789952 fitness_value_extractor.py:131] Location(x=30.349186, y=-109.669975, z=0.033362)>DfC:0.0173,DfV:0.83,DfP:6.34,DfM:14.05,DT:20.09
I0902 18:42:13.686031 140304125789952 fitness_value_extractor.py:131] Location(x=30.348888, y=-109.656181, z=0.033219)>DfC:0.0172,DfV:0.88,DfP:6.34,DfM:14.04,DT:20.08
I0902 18:42:14.119284 140304125789952 fitness_value_extractor.py:131] Location(x=30.348469, y=-109.630600, z=0.033053)>DfC:0.0170,DfV:0.92,DfP:6.33,DfM:14.02,DT:20.06
I0902 18:42:14.479874 140304125789952 fitness_value_extractor.py:131] Location(x=30.347910, y=-109.598129, z=0.032950)>DfC:0.0167,DfV:0.96,DfP:6.33,DfM:14.00,DT:20.04
I0902 18:42:14.792840 140304125789952 fitness_value_extractor.py:131] Location(x=30.346989, y=-109.555000, z=0.032834)>DfC:0.0164,DfV:0.99,DfP:6.32,DfM:13.97,DT:20.01
I0902 18:42:15.252477 140307942086400 fitness_value_extractor.py:131] Location(x=30.345781, y=-109.498192, z=0.032686)>DfC:0.0161,DfV:1.01,DfP:6.31,DfM:13.93,DT:19.97
I0902 18:42:15.677476 140307942086400 fitness_value_extractor.py:131] Location(x=30.344257, y=-109.427452, z=0.032552)>DfC:0.0157,DfV:1.01,DfP:6.31,DfM:13.88,DT:19.92
I0902 18:42:16.036430 140307942086400 fitness_value_extractor.py:131] Location(x=30.342463, y=-109.344032, z=0.032458)>DfC:0.0153,DfV:1.00,DfP:6.30,DfM:13.82,DT:19.86
I0902 18:42:16.434102 140307942086400 fitness_value_extractor.py:131] Location(x=30.340420, y=-109.248970, z=0.032406)>DfC:0.0148,DfV:0.98,DfP:6.29,DfM:13.76,DT:19.80
I0902 18:42:16.782654 140307942086400 fitness_value_extractor.py:131] Location(x=30.338137, y=-109.142868, z=0.032384)>DfC:0.0143,DfV:0.96,DfP:6.28,DfM:13.68,DT:19.72
I0902 18:42:17.163897 140307942086400 fitness_value_extractor.py:131] Location(x=30.335619, y=-109.026131, z=0.032380)>DfC:0.0137,DfV:0.92,DfP:6.27,DfM:13.60,DT:19.64
I0902 18:42:17.655874 140307942086400 fitness_value_extractor.py:131] Location(x=30.332876, y=-108.899002, z=0.032387)>DfC:0.0130,DfV:0.88,DfP:6.26,DfM:13.51,DT:19.56
I0902 18:42:18.070638 140307942086400 fitness_value_extractor.py:131] Location(x=30.329746, y=-108.761635, z=0.032399)>DfC:0.0125,DfV:0.82,DfP:6.25,DfM:13.42,DT:19.47
I0902 18:42:18.580206 140307942086400 fitness_value_extractor.py:131] Location(x=30.326313, y=-108.614105, z=0.032411)>DfC:0.0119,DfV:0.76,DfP:6.25,DfM:13.32,DT:19.37
I0902 18:42:19.241621 140307942086400 fitness_value_extractor.py:131] Location(x=30.322622, y=-108.456474, z=0.032423)>DfC:0.0114,DfV:0.69,DfP:6.25,DfM:13.22,DT:19.26
I0902 18:42:19.777328 140307942086400 fitness_value_extractor.py:131] Location(x=30.318693, y=-108.288757, z=0.032433)>DfC:0.0109,DfV:0.61,DfP:6.25,DfM:13.11,DT:19.15
I0902 18:42:20.260694 140307942086400 fitness_value_extractor.py:131] Location(x=30.314667, y=-108.116783, z=0.032538)>DfC:0.0103,DfV:0.53,DfP:6.26,DfM:12.99,DT:19.03
I0902 18:42:20.724752 140307942086400 fitness_value_extractor.py:131] Location(x=30.310652, y=-107.944984, z=0.032705)>DfC:0.0097,DfV:0.45,DfP:6.27,DfM:12.88,DT:18.92
I0902 18:42:21.251130 140307942086400 fitness_value_extractor.py:131] Location(x=30.306530, y=-107.773300, z=0.032870)>DfC:0.0092,DfV:0.37,DfP:6.29,DfM:12.77,DT:18.81
I0902 18:42:21.667117 140307942086400 fitness_value_extractor.py:131] Location(x=30.302572, y=-107.603386, z=0.033040)>DfC:0.0086,DfV:0.29,DfP:6.31,DfM:12.66,DT:18.69
I0902 18:42:22.091151 140307942086400 fitness_value_extractor.py:131] Location(x=30.298813, y=-107.440163, z=0.033255)>DfC:0.0080,DfV:0.23,DfP:6.33,DfM:12.56,DT:18.59
I0902 18:42:22.610667 140307942086400 fitness_value_extractor.py:131] Location(x=30.295328, y=-107.288834, z=0.033527)>DfC:0.0075,DfV:0.17,DfP:6.35,DfM:12.47,DT:18.49
I0902 18:42:23.108819 140307942086400 fitness_value_extractor.py:131] Location(x=30.292227, y=-107.153984, z=0.033837)>DfC:0.0070,DfV:0.14,DfP:6.37,DfM:12.39,DT:18.40
I0902 18:42:23.618228 140307942086400 fitness_value_extractor.py:131] Location(x=30.289526, y=-107.036652, z=0.034124)>DfC:0.0065,DfV:0.12,DfP:6.40,DfM:12.32,DT:18.33
I0902 18:42:24.106084 140307942086400 fitness_value_extractor.py:131] Location(x=30.287228, y=-106.936752, z=0.034360)>DfC:0.0062,DfV:0.12,DfP:6.42,DfM:12.26,DT:18.26
I0902 18:42:24.622558 140307942086400 fitness_value_extractor.py:131] Location(x=30.285336, y=-106.854340, z=0.034544)>DfC:0.0059,DfV:0.14,DfP:6.43,DfM:12.21,DT:18.21
I0902 18:42:25.091467 140307942086400 fitness_value_extractor.py:131] Location(x=30.283491, y=-106.773979, z=0.034442)>DfC:0.0056,DfV:0.17,DfP:6.45,DfM:12.16,DT:18.16
I0902 18:42:25.624116 140307942086400 fitness_value_extractor.py:131] Location(x=30.281965, y=-106.707436, z=0.034499)>DfC:0.0053,DfV:0.21,DfP:6.47,DfM:12.12,DT:18.11
I0902 18:42:26.114249 140307942086400 fitness_value_extractor.py:131] Location(x=30.281111, y=-106.670143, z=0.034762)>DfC:0.0052,DfV:0.28,DfP:6.48,DfM:12.10,DT:18.09
I0902 18:42:26.566966 140307942086400 fitness_value_extractor.py:131] Location(x=30.280888, y=-106.660782, z=0.035048)>DfC:0.0051,DfV:0.38,DfP:6.48,DfM:12.10,DT:18.08
I0902 18:42:27.054344 140307942086400 fitness_value_extractor.py:131] Location(x=30.280886, y=-106.660736, z=0.034989)>DfC:0.0051,DfV:0.49,DfP:6.48,DfM:12.10,DT:18.08
I0902 18:42:27.598669 140307942086400 fitness_value_extractor.py:131] Location(x=30.280884, y=-106.660576, z=0.034741)>DfC:0.0051,DfV:0.60,DfP:6.48,DfM:12.10,DT:18.08
I0902 18:42:28.154382 140307942086400 fitness_value_extractor.py:131] Location(x=30.280878, y=-106.660378, z=0.034465)>DfC:0.0051,DfV:0.71,DfP:6.48,DfM:12.10,DT:18.08
I0902 18:42:28.703353 140307942086400 fitness_value_extractor.py:131] Location(x=30.280851, y=-106.659439, z=0.034211)>DfC:0.0051,DfV:0.82,DfP:6.48,DfM:12.10,DT:18.08
I0902 18:42:29.222543 140307942086400 fitness_value_extractor.py:131] Location(x=30.280796, y=-106.657120, z=0.033984)>DfC:0.0051,DfV:0.94,DfP:6.48,DfM:12.09,DT:18.08
I0902 18:42:29.679972 140307942086400 fitness_value_extractor.py:131] Location(x=30.280735, y=-106.654625, z=0.033821)>DfC:0.0051,DfV:1.05,DfP:6.48,DfM:12.09,DT:18.08
I0902 18:42:30.101611 140307942086400 fitness_value_extractor.py:131] Location(x=30.280531, y=-106.646446, z=0.033614)>DfC:0.0051,DfV:1.16,DfP:6.48,DfM:12.09,DT:18.08
I0902 18:42:30.499042 140307942086400 fitness_value_extractor.py:131] Location(x=30.280300, y=-106.634712, z=0.033474)>DfC:0.0050,DfV:1.27,DfP:6.48,DfM:12.08,DT:18.07
I0902 18:42:30.938173 140307942086400 fitness_value_extractor.py:131] Location(x=30.280130, y=-106.616768, z=0.033334)>DfC:0.0047,DfV:1.36,DfP:6.49,DfM:12.07,DT:18.06
I0902 18:42:31.396945 140307942086400 fitness_value_extractor.py:131] Location(x=30.279629, y=-106.592461, z=0.033209)>DfC:0.0046,DfV:1.46,DfP:6.50,DfM:12.06,DT:18.04
I0902 18:42:31.794018 140307942086400 fitness_value_extractor.py:131] Location(x=30.278662, y=-106.561020, z=0.033103)>DfC:0.0047,DfV:1.54,DfP:6.50,DfM:12.04,DT:18.02
I0902 18:42:32.282208 140307958871808 fitness_value_extractor.py:131] Location(x=30.277588, y=-106.519821, z=0.032969)>DfC:0.0047,DfV:1.61,DfP:6.51,DfM:12.02,DT:18.00
I0902 18:42:32.783612 140307958871808 fitness_value_extractor.py:131] Location(x=30.276218, y=-106.468956, z=0.032858)>DfC:0.0047,DfV:1.68,DfP:6.53,DfM:11.99,DT:17.96
I0902 18:42:33.236352 140307958871808 fitness_value_extractor.py:131] Location(x=30.274767, y=-106.407806, z=0.032760)>DfC:0.0045,DfV:1.73,DfP:6.54,DfM:11.95,DT:17.92
I0902 18:42:33.739836 140307958871808 fitness_value_extractor.py:131] Location(x=30.272917, y=-106.336273, z=0.032681)>DfC:0.0044,DfV:1.77,DfP:6.56,DfM:11.91,DT:17.88
I0902 18:42:34.212867 140307958871808 fitness_value_extractor.py:131] Location(x=30.270910, y=-106.255089, z=0.032629)>DfC:0.0043,DfV:1.81,DfP:6.59,DfM:11.87,DT:17.83
I0902 18:42:34.732300 140307958871808 fitness_value_extractor.py:131] Location(x=30.268620, y=-106.164413, z=0.032595)>DfC:0.0041,DfV:1.83,DfP:6.61,DfM:11.82,DT:17.77
I0902 18:42:35.133869 140307958871808 fitness_value_extractor.py:131] Location(x=30.266115, y=-106.064346, z=0.032575)>DfC:0.0039,DfV:1.85,DfP:6.64,DfM:11.76,DT:17.71
I0902 18:42:35.588331 140307958871808 fitness_value_extractor.py:131] Location(x=30.263388, y=-105.955254, z=0.032567)>DfC:0.0038,DfV:1.85,DfP:6.68,DfM:11.70,DT:17.64
I0902 18:42:36.012395 140307958871808 fitness_value_extractor.py:131] Location(x=30.260380, y=-105.837372, z=0.032568)>DfC:0.0036,DfV:1.86,DfP:6.72,DfM:11.64,DT:17.57
I0902 18:42:36.404508 140307958871808 fitness_value_extractor.py:131] Location(x=30.257135, y=-105.710876, z=0.032574)>DfC:0.0035,DfV:1.85,DfP:6.76,DfM:11.57,DT:17.49
I0902 18:42:36.806784 140307958871808 fitness_value_extractor.py:131] Location(x=30.253672, y=-105.575859, z=0.032583)>DfC:0.0033,DfV:1.84,DfP:6.81,DfM:11.50,DT:17.41
I0902 18:42:37.246698 140307958871808 fitness_value_extractor.py:131] Location(x=30.250000, y=-105.432381, z=0.032591)>DfC:0.0032,DfV:1.82,DfP:6.86,DfM:11.43,DT:17.32
I0902 18:42:37.626734 140307958871808 fitness_value_extractor.py:131] Location(x=30.246120, y=-105.280457, z=0.032598)>DfC:0.0030,DfV:1.79,DfP:6.92,DfM:11.35,DT:17.23
I0902 18:42:38.064276 140307958871808 fitness_value_extractor.py:131] Location(x=30.242035, y=-105.120125, z=0.032605)>DfC:0.0028,DfV:1.76,DfP:6.99,DfM:11.27,DT:17.13
I0902 18:42:38.466440 140307958871808 fitness_value_extractor.py:131] Location(x=30.237741, y=-104.951355, z=0.032609)>DfC:0.0026,DfV:1.72,DfP:7.06,DfM:11.19,DT:17.03
I0902 18:42:38.965770 140307958871808 fitness_value_extractor.py:131] Location(x=30.233244, y=-104.774170, z=0.032613)>DfC:0.0023,DfV:1.67,DfP:7.14,DfM:11.11,DT:16.93
I0902 18:42:39.468204 140307958871808 fitness_value_extractor.py:131] Location(x=30.229200, y=-104.588516, z=0.032615)>DfC:0.0014,DfV:1.62,DfP:7.22,DfM:11.03,DT:16.81
I0902 18:42:39.888822 140307958871808 fitness_value_extractor.py:131] Location(x=30.225332, y=-104.394394, z=0.032616)>DfC:0.0001,DfV:1.56,DfP:7.31,DfM:10.94,DT:16.70
I0902 18:42:40.493062 140307958871808 fitness_value_extractor.py:131] Location(x=30.221403, y=-104.191772, z=0.032616)>DfC:0.0014,DfV:1.49,DfP:7.41,DfM:10.86,DT:16.58
I0902 18:42:40.972874 140307958871808 fitness_value_extractor.py:131] Location(x=30.217308, y=-103.980629, z=0.032616)>DfC:0.0030,DfV:1.41,DfP:7.52,DfM:10.77,DT:16.46
I0902 18:42:41.447659 140307958871808 fitness_value_extractor.py:131] Location(x=30.212988, y=-103.760971, z=0.032615)>DfC:0.0045,DfV:1.33,DfP:7.64,DfM:10.69,DT:16.33
I0902 18:42:41.857055 140307958871808 fitness_value_extractor.py:131] Location(x=30.210340, y=-103.532784, z=0.032614)>DfC:0.0080,DfV:1.24,DfP:7.77,DfM:10.60,DT:16.20
I0902 18:42:42.342509 140307958871808 fitness_value_extractor.py:131] Location(x=30.208818, y=-103.296036, z=0.032613)>DfC:0.0128,DfV:1.14,DfP:7.90,DfM:10.52,DT:16.06
I0902 18:42:42.769834 140307958871808 fitness_value_extractor.py:131] Location(x=30.207726, y=-103.050644, z=0.032610)>DfC:0.0183,DfV:1.04,DfP:8.05,DfM:10.44,DT:15.92
I0902 18:42:43.405079 140307958871808 fitness_value_extractor.py:131] Location(x=30.206648, y=-102.796593, z=0.033217)>DfC:0.0240,DfV:0.93,DfP:8.21,DfM:10.37,DT:15.78
I0902 18:42:43.891777 140307958871808 fitness_value_extractor.py:131] Location(x=30.205301, y=-102.533844, z=0.033554)>DfC:0.0297,DfV:0.81,DfP:8.37,DfM:10.30,DT:15.63
I0902 18:42:44.388321 140307958871808 fitness_value_extractor.py:131] Location(x=30.209524, y=-102.262993, z=0.033600)>DfC:0.0411,DfV:0.68,DfP:8.55,DfM:10.24,DT:15.48
I0902 18:42:44.918310 140307958871808 fitness_value_extractor.py:131] Location(x=30.219248, y=-101.988419, z=0.033625)>DfC:0.0582,DfV:0.56,DfP:8.74,DfM:10.19,DT:15.32
I0902 18:42:45.416410 140307958871808 fitness_value_extractor.py:131] Location(x=30.231991, y=-101.716240, z=0.033726)>DfC:0.0833,DfV:0.43,DfP:8.94,DfM:10.15,DT:15.16
I0902 18:42:45.841473 140307958871808 fitness_value_extractor.py:131] Location(x=30.246847, y=-101.442467, z=0.033756)>DfC:0.1134,DfV:0.31,DfP:9.14,DfM:10.12,DT:15.00
I0902 18:42:46.300677 140307958871808 fitness_value_extractor.py:131] Location(x=30.256857, y=-101.171745, z=0.033856)>DfC:0.0964,DfV:0.19,DfP:9.34,DfM:10.09,DT:14.85
I0902 18:42:46.703696 140307958871808 fitness_value_extractor.py:131] Location(x=30.264381, y=-100.905067, z=0.033959)>DfC:0.1008,DfV:0.08,DfP:9.53,DfM:10.06,DT:14.71
I0902 18:42:47.117008 140307958871808 fitness_value_extractor.py:131] Location(x=30.270803, y=-100.659996, z=0.034050)>DfC:0.1096,DfV:-0.01,DfP:9.72,DfM:10.05,DT:14.58
I0902 18:42:47.531425 140307958871808 fitness_value_extractor.py:131] Location(x=30.276239, y=-100.446693, z=0.034039)>DfC:0.1210,DfV:-0.07,DfP:9.88,DfM:10.04,DT:14.47
I0902 18:42:47.962874 140307958871808 fitness_value_extractor.py:131] Location(x=30.280817, y=-100.264969, z=0.034344)>DfC:0.1334,DfV:-0.09,DfP:10.02,DfM:10.04,DT:14.37
I0902 18:42:48.389745 140307958871808 fitness_value_extractor.py:131] Location(x=30.284533, y=-100.114555, z=0.034727)>DfC:0.0942,DfV:-0.09,DfP:10.13,DfM:10.04,DT:14.29
I0902 18:42:48.817414 140307958871808 fitness_value_extractor.py:131] Location(x=30.287485, y=-99.995262, z=0.035084)>DfC:0.0513,DfV:-0.05,DfP:10.22,DfM:10.04,DT:14.23
I0902 18:42:49.269203 140307958871808 fitness_value_extractor.py:131] Location(x=30.289686, y=-99.906807, z=0.035381)>DfC:0.0473,DfV:0.02,DfP:10.29,DfM:10.04,DT:14.19
I0902 18:42:49.686553 140307958871808 fitness_value_extractor.py:131] Location(x=30.291132, y=-99.848732, z=0.035608)>DfC:0.0463,DfV:0.11,DfP:10.34,DfM:10.04,DT:14.16
I0902 18:42:50.089339 140307958871808 fitness_value_extractor.py:131] Location(x=30.291849, y=-99.819977, z=0.035761)>DfC:0.0463,DfV:0.24,DfP:10.36,DfM:10.04,DT:14.14
I0902 18:42:50.618404 140307958871808 fitness_value_extractor.py:131] Location(x=30.292002, y=-99.813637, z=0.035768)>DfC:0.0464,DfV:0.39,DfP:10.37,DfM:10.04,DT:14.14
I0902 18:42:51.067801 140307958871808 fitness_value_extractor.py:131] Location(x=30.292006, y=-99.813438, z=0.035484)>DfC:0.0464,DfV:0.54,DfP:10.37,DfM:10.04,DT:14.14
I0902 18:42:51.567656 140307958871808 fitness_value_extractor.py:131] Location(x=30.292011, y=-99.813148, z=0.035087)>DfC:0.0464,DfV:0.69,DfP:10.37,DfM:10.04,DT:14.14
I0902 18:42:51.976944 140307958871808 fitness_value_extractor.py:131] Location(x=30.292028, y=-99.812889, z=0.034708)>DfC:0.0464,DfV:0.84,DfP:10.37,DfM:10.04,DT:14.14
I0902 18:42:52.423202 140307958871808 fitness_value_extractor.py:131] Location(x=30.292036, y=-99.812866, z=0.034398)>DfC:0.0464,DfV:0.99,DfP:10.37,DfM:10.04,DT:14.14
I0902 18:42:52.863862 140307958871808 fitness_value_extractor.py:131] Location(x=30.292425, y=-99.810913, z=0.034116)>DfC:0.0467,DfV:1.14,DfP:10.37,DfM:10.04,DT:14.14
I0902 18:42:53.299996 140307958871808 fitness_value_extractor.py:131] Location(x=30.293423, y=-99.806961, z=0.033882)>DfC:0.0474,DfV:1.29,DfP:10.37,DfM:10.04,DT:14.14
I0902 18:42:53.654249 140307958871808 fitness_value_extractor.py:131] Location(x=30.294939, y=-99.798775, z=0.033672)>DfC:0.0485,DfV:1.43,DfP:10.38,DfM:10.05,DT:14.13
I0902 18:42:54.159538 140307958871808 fitness_value_extractor.py:131] Location(x=30.297871, y=-99.787010, z=0.033518)>DfC:0.0507,DfV:1.58,DfP:10.39,DfM:10.05,DT:14.12
I0902 18:42:54.652030 140307958871808 fitness_value_extractor.py:131] Location(x=30.301426, y=-99.771309, z=0.033398)>DfC:0.0533,DfV:1.72,DfP:10.40,DfM:10.05,DT:14.11
I0902 18:42:55.140641 140307958871808 fitness_value_extractor.py:131] Location(x=30.305843, y=-99.751541, z=0.033309)>DfC:0.0566,DfV:1.85,DfP:10.42,DfM:10.06,DT:14.10
I0902 18:42:55.550512 140307958871808 fitness_value_extractor.py:131] Location(x=30.311876, y=-99.726837, z=0.033223)>DfC:0.0610,DfV:1.99,DfP:10.45,DfM:10.06,DT:14.08
I0902 18:42:56.045408 140307958871808 fitness_value_extractor.py:131] Location(x=30.319157, y=-99.697144, z=0.033154)>DfC:0.0663,DfV:2.12,DfP:10.47,DfM:10.07,DT:14.06
I0902 18:42:56.463384 140307958871808 fitness_value_extractor.py:131] Location(x=30.328154, y=-99.661537, z=0.033088)>DfC:0.0727,DfV:2.24,DfP:10.51,DfM:10.08,DT:14.04
I0902 18:42:57.038076 140307958871808 fitness_value_extractor.py:131] Location(x=30.338469, y=-99.619240, z=0.033023)>DfC:0.0800,DfV:2.36,DfP:10.55,DfM:10.09,DT:14.01
I0902 18:42:57.560385 140307958871808 fitness_value_extractor.py:131] Location(x=30.350470, y=-99.569740, z=0.032955)>DfC:0.0884,DfV:2.48,DfP:10.59,DfM:10.11,DT:13.97
I0902 18:42:57.926592 140307958871808 fitness_value_extractor.py:131] Location(x=30.364498, y=-99.513535, z=0.032906)>DfC:0.0980,DfV:2.59,DfP:10.64,DfM:10.12,DT:13.93
I0902 18:42:58.637396 140307958871808 fitness_value_extractor.py:131] Location(x=30.380201, y=-99.450798, z=0.032873)>DfC:0.1085,DfV:2.69,DfP:10.70,DfM:10.14,DT:13.89
I0902 18:42:59.157285 140307958871808 fitness_value_extractor.py:131] Location(x=30.397221, y=-99.381958, z=0.032859)>DfC:0.1196,DfV:2.79,DfP:10.77,DfM:10.16,DT:13.84
I0902 18:42:59.723652 140307958871808 fitness_value_extractor.py:131] Location(x=30.417824, y=-99.307663, z=0.032857)>DfC:0.1329,DfV:2.89,DfP:10.84,DfM:10.19,DT:13.79
I0902 18:43:00.189424 140307958871808 fitness_value_extractor.py:131] Location(x=30.440731, y=-99.227623, z=0.032858)>DfC:0.1473,DfV:2.98,DfP:10.91,DfM:10.21,DT:13.73
I0902 18:43:00.630083 140307958871808 fitness_value_extractor.py:131] Location(x=30.465946, y=-99.141685, z=0.032857)>DfC:0.1628,DfV:3.07,DfP:11.00,DfM:10.24,DT:13.67
I0902 18:43:01.071419 140307958871808 fitness_value_extractor.py:131] Location(x=30.493387, y=-99.049637, z=0.032852)>DfC:0.1693,DfV:3.16,DfP:11.08,DfM:10.28,DT:13.60
I0902 18:43:01.482612 140307958871808 fitness_value_extractor.py:131] Location(x=30.523155, y=-98.951431, z=0.032847)>DfC:0.1409,DfV:3.24,DfP:11.18,DfM:10.32,DT:13.53
I0902 18:43:01.954228 140307958871808 fitness_value_extractor.py:131] Location(x=30.554937, y=-98.847038, z=0.032842)>DfC:0.1546,DfV:3.31,DfP:11.28,DfM:10.36,DT:13.45
I0902 18:43:02.407292 140307958871808 fitness_value_extractor.py:131] Location(x=30.588409, y=-98.736359, z=0.032837)>DfC:0.1693,DfV:3.38,DfP:11.39,DfM:10.40,DT:13.37
I0902 18:43:02.863292 140307958871808 fitness_value_extractor.py:131] Location(x=30.623396, y=-98.619370, z=0.032833)>DfC:0.1842,DfV:3.45,DfP:11.50,DfM:10.45,DT:13.29
I0902 18:43:03.412077 140307958871808 fitness_value_extractor.py:131] Location(x=30.659634, y=-98.496651, z=0.032843)>DfC:0.1991,DfV:3.51,DfP:11.62,DfM:10.50,DT:13.20
I0902 18:43:03.865475 140307958871808 fitness_value_extractor.py:131] Location(x=30.695820, y=-98.372772, z=0.032922)>DfC:0.2132,DfV:3.57,DfP:11.74,DfM:10.56,DT:13.11
I0902 18:43:04.339701 140307958871808 fitness_value_extractor.py:131] Location(x=30.731918, y=-98.248779, z=0.033022)>DfC:0.2267,DfV:3.63,DfP:11.86,DfM:10.61,DT:13.03
I0902 18:43:04.842162 140307958871808 fitness_value_extractor.py:131] Location(x=30.771841, y=-98.126831, z=0.033135)>DfC:0.2433,DfV:3.70,DfP:11.98,DfM:10.67,DT:12.94
I0902 18:43:05.248842 140307958871808 fitness_value_extractor.py:131] Location(x=30.814213, y=-98.006180, z=0.033223)>DfC:0.2614,DfV:3.77,DfP:12.11,DfM:10.73,DT:12.85
I0902 18:43:05.722627 140307958871808 fitness_value_extractor.py:131] Location(x=30.856924, y=-97.885498, z=0.033282)>DfC:0.2458,DfV:3.83,DfP:12.23,DfM:10.80,DT:12.76
I0902 18:43:06.149479 140307958871808 fitness_value_extractor.py:131] Location(x=30.899384, y=-97.764503, z=0.033321)>DfC:0.2578,DfV:3.90,DfP:12.35,DfM:10.86,DT:12.67
I0902 18:43:06.623346 140307958871808 fitness_value_extractor.py:131] Location(x=30.941399, y=-97.643166, z=0.033347)>DfC:0.2690,DfV:3.97,DfP:12.47,DfM:10.93,DT:12.58
I0902 18:43:06.974450 140307958871808 fitness_value_extractor.py:131] Location(x=30.983208, y=-97.521660, z=0.033367)>DfC:0.2794,DfV:4.04,DfP:12.60,DfM:10.99,DT:12.49
I0902 18:43:07.533312 140307958871808 fitness_value_extractor.py:131] Location(x=31.025009, y=-97.400108, z=0.033382)>DfC:0.2893,DfV:4.12,DfP:12.72,DfM:11.06,DT:12.40
I0902 18:43:07.919804 140307958871808 fitness_value_extractor.py:131] Location(x=31.067022, y=-97.278442, z=0.033389)>DfC:0.2988,DfV:4.19,DfP:12.84,DfM:11.13,DT:12.31
I0902 18:43:08.388147 140307958871808 fitness_value_extractor.py:131] Location(x=31.110025, y=-97.154556, z=0.033360)>DfC:0.3080,DfV:4.25,DfP:12.97,DfM:11.16,DT:12.22
I0902 18:43:08.821676 140307958871808 fitness_value_extractor.py:131] Location(x=31.158239, y=-97.028603, z=0.033310)>DfC:0.3207,DfV:4.32,DfP:13.10,DfM:11.15,DT:12.13
I0902 18:43:09.207658 140307958871808 fitness_value_extractor.py:131] Location(x=31.210920, y=-96.898628, z=0.033235)>DfC:0.3207,DfV:4.38,DfP:13.23,DfM:11.14,DT:12.03
I0902 18:43:09.622921 140307958871808 fitness_value_extractor.py:131] Location(x=31.266491, y=-96.762627, z=0.033143)>DfC:0.3230,DfV:4.44,DfP:13.38,DfM:11.13,DT:11.92
I0902 18:43:10.098354 140307958871808 fitness_value_extractor.py:131] Location(x=31.324764, y=-96.619858, z=0.033052)>DfC:0.3333,DfV:4.49,DfP:13.53,DfM:11.12,DT:11.81
I0902 18:43:10.555141 140307958871808 fitness_value_extractor.py:131] Location(x=31.386005, y=-96.470070, z=0.032970)>DfC:0.3432,DfV:4.53,DfP:13.68,DfM:11.11,DT:11.70
I0902 18:43:11.037989 140307958871808 fitness_value_extractor.py:131] Location(x=31.450510, y=-96.313126, z=0.032899)>DfC:0.3528,DfV:4.57,DfP:13.85,DfM:11.10,DT:11.58
I0902 18:43:11.653916 140307958871808 fitness_value_extractor.py:131] Location(x=31.518517, y=-96.148941, z=0.032840)>DfC:0.3621,DfV:4.60,DfP:14.02,DfM:11.10,DT:11.45
I0902 18:43:12.090495 140307958871808 fitness_value_extractor.py:131] Location(x=31.594259, y=-95.980194, z=0.032810)>DfC:0.3756,DfV:4.63,DfP:14.21,DfM:11.09,DT:11.32
I0902 18:43:12.490026 140307958871808 fitness_value_extractor.py:131] Location(x=31.676992, y=-95.806183, z=0.032782)>DfC:0.3704,DfV:4.65,DfP:14.40,DfM:11.08,DT:11.18
I0902 18:43:12.921246 140307958871808 fitness_value_extractor.py:131] Location(x=31.764456, y=-95.625038, z=0.032750)>DfC:0.3014,DfV:4.67,DfP:14.59,DfM:11.07,DT:11.03
I0902 18:43:13.366517 140307958871808 fitness_value_extractor.py:131] Location(x=31.856276, y=-95.436440, z=0.032719)>DfC:0.1316,DfV:4.69,DfP:14.80,DfM:11.07,DT:10.88
I0902 18:43:13.819936 140307958871808 fitness_value_extractor.py:131] Location(x=31.952589, y=-95.240456, z=0.032693)>DfC:0.0492,DfV:4.70,DfP:15.02,DfM:11.07,DT:10.72
I0902 18:43:14.200538 140307958871808 fitness_value_extractor.py:131] Location(x=32.053463, y=-95.037109, z=0.032672)>DfC:0.2500,DfV:4.71,DfP:15.24,DfM:11.07,DT:10.55
I0902 18:43:14.577778 140307958871808 fitness_value_extractor.py:131] Location(x=32.163311, y=-94.829773, z=0.032675)>DfC:0.2416,DfV:4.72,DfP:15.47,DfM:11.08,DT:10.38
I0902 18:43:14.982540 140307958871808 fitness_value_extractor.py:131] Location(x=32.281700, y=-94.617966, z=0.032675)>DfC:0.0639,DfV:4.73,DfP:15.72,DfM:11.08,DT:10.20
I0902 18:43:15.516462 140307958871808 fitness_value_extractor.py:131] Location(x=32.406826, y=-94.399971, z=0.033025)>DfC:0.1942,DfV:4.74,DfP:15.97,DfM:11.08,DT:10.01
I0902 18:43:15.880244 140307958871808 fitness_value_extractor.py:131] Location(x=32.538158, y=-94.175293, z=0.033536)>DfC:0.4354,DfV:4.75,DfP:16.23,DfM:11.09,DT:9.81
I0902 18:43:16.358138 140307958871808 fitness_value_extractor.py:131] Location(x=32.675457, y=-93.943825, z=0.033630)>DfC:0.4344,DfV:4.76,DfP:16.49,DfM:11.10,DT:9.61
I0902 18:43:16.782286 140307958871808 fitness_value_extractor.py:131] Location(x=32.823441, y=-93.709999, z=0.033605)>DfC:0.4352,DfV:4.78,DfP:16.77,DfM:11.12,DT:9.40
I0902 18:43:17.221776 140307958871808 fitness_value_extractor.py:131] Location(x=32.981564, y=-93.473198, z=0.033529)>DfC:0.4457,DfV:4.80,DfP:17.05,DfM:11.13,DT:9.18
I0902 18:43:17.673562 140307958871808 fitness_value_extractor.py:131] Location(x=33.148300, y=-93.231728, z=0.033441)>DfC:0.2797,DfV:4.83,DfP:17.35,DfM:11.15,DT:8.95
I0902 18:43:18.094369 140307958871808 fitness_value_extractor.py:131] Location(x=33.322952, y=-92.984932, z=0.033362)>DfC:0.0985,DfV:4.86,DfP:17.65,DfM:11.17,DT:8.72
I0902 18:43:18.456302 140307958871808 fitness_value_extractor.py:131] Location(x=33.509712, y=-92.737900, z=0.033331)>DfC:0.0948,DfV:4.90,DfP:17.96,DfM:11.19,DT:8.47
I0902 18:43:18.930599 140307958871808 fitness_value_extractor.py:131] Location(x=33.708046, y=-92.489975, z=0.033303)>DfC:0.2997,DfV:4.95,DfP:18.27,DfM:11.21,DT:8.22
I0902 18:43:19.537629 140307958871808 fitness_value_extractor.py:131] Location(x=33.916504, y=-92.239136, z=0.033269)>DfC:0.4913,DfV:5.01,DfP:18.60,DfM:11.24,DT:7.96
I0902 18:43:19.910884 140307958871808 fitness_value_extractor.py:131] Location(x=34.138687, y=-91.991241, z=0.033285)>DfC:0.4927,DfV:5.09,DfP:18.93,DfM:11.26,DT:7.68
I0902 18:43:20.329481 140307958871808 fitness_value_extractor.py:131] Location(x=34.373703, y=-91.744919, z=0.033283)>DfC:0.5121,DfV:5.18,DfP:19.09,DfM:11.29,DT:7.40
I0902 18:43:20.772521 140307958871808 fitness_value_extractor.py:131] Location(x=34.619820, y=-91.497009, z=0.033262)>DfC:0.4766,DfV:5.28,DfP:19.24,DfM:11.31,DT:7.10
I0902 18:43:21.278961 140307958871808 fitness_value_extractor.py:131] Location(x=34.876240, y=-91.246613, z=0.033238)>DfC:0.2317,DfV:5.40,DfP:19.39,DfM:11.35,DT:6.80
I0902 18:43:21.742836 140307958871808 fitness_value_extractor.py:131] Location(x=35.144817, y=-91.001022, z=0.033295)>DfC:0.0121,DfV:5.53,DfP:19.54,DfM:11.38,DT:6.49
I0902 18:43:22.188342 140307958871808 fitness_value_extractor.py:131] Location(x=35.420654, y=-90.763893, z=0.033432)>DfC:0.2416,DfV:5.68,DfP:19.69,DfM:11.42,DT:6.18
I0902 18:43:22.621540 140307958871808 fitness_value_extractor.py:131] Location(x=35.701283, y=-90.533607, z=0.033579)>DfC:0.4677,DfV:5.84,DfP:19.83,DfM:11.46,DT:5.86
I0902 18:43:23.135187 140307958871808 fitness_value_extractor.py:131] Location(x=35.989712, y=-90.314903, z=0.033718)>DfC:0.5349,DfV:6.03,DfP:19.97,DfM:11.49,DT:5.54
I0902 18:43:23.565154 140307958871808 fitness_value_extractor.py:131] Location(x=36.283924, y=-90.106934, z=0.033830)>DfC:0.5466,DfV:6.23,DfP:20.09,DfM:11.53,DT:5.22
I0902 18:43:23.919466 140307958871808 fitness_value_extractor.py:131] Location(x=36.583645, y=-89.905952, z=0.033883)>DfC:0.2567,DfV:6.45,DfP:20.22,DfM:11.56,DT:4.89
I0902 18:43:24.344344 140307958871808 fitness_value_extractor.py:131] Location(x=36.889175, y=-89.718300, z=0.033972)>DfC:0.0538,DfV:6.68,DfP:20.34,DfM:11.60,DT:4.57
I0902 18:43:24.769137 140307958871808 fitness_value_extractor.py:131] Location(x=37.200535, y=-89.541588, z=0.034011)>DfC:0.0934,DfV:6.93,DfP:20.45,DfM:11.63,DT:4.24
I0902 18:43:25.187836 140307958871808 fitness_value_extractor.py:131] Location(x=37.515690, y=-89.372604, z=0.034034)>DfC:0.3999,DfV:7.19,DfP:20.55,DfM:11.66,DT:3.90
I0902 18:43:25.555678 140307958871808 fitness_value_extractor.py:131] Location(x=37.836468, y=-89.217155, z=0.034074)>DfC:0.5476,DfV:7.47,DfP:20.65,DfM:11.67,DT:3.57
I0902 18:43:26.079982 140307958871808 fitness_value_extractor.py:131] Location(x=38.160896, y=-89.073318, z=0.034101)>DfC:0.5598,DfV:7.76,DfP:20.74,DfM:11.44,DT:3.23
I0902 18:43:26.663722 140307958871808 fitness_value_extractor.py:131] Location(x=38.495300, y=-88.934242, z=0.033967)>DfC:0.5542,DfV:8.07,DfP:20.83,DfM:11.22,DT:2.89
I0902 18:43:27.126270 140307958871808 fitness_value_extractor.py:131] Location(x=38.841637, y=-88.806747, z=0.033854)>DfC:0.5583,DfV:8.39,DfP:20.92,DfM:11.01,DT:2.53
I0902 18:43:27.504225 140307958871808 fitness_value_extractor.py:131] Location(x=39.199097, y=-88.690704, z=0.033745)>DfC:0.5726,DfV:8.73,DfP:20.99,DfM:10.82,DT:2.17
I0902 18:43:27.934440 140307958871808 fitness_value_extractor.py:131] Location(x=39.567322, y=-88.580711, z=0.033633)>DfC:0.5678,DfV:9.08,DfP:21.07,DfM:10.64,DT:1.79
I0902 18:43:28.374843 140307958871808 fitness_value_extractor.py:131] Location(x=39.945530, y=-88.483444, z=0.033590)>DfC:0.5734,DfV:9.45,DfP:21.14,DfM:10.48,DT:1.41
I0902 18:43:28.781074 140307958871808 fitness_value_extractor.py:131] Location(x=40.333347, y=-88.394966, z=0.033534)>DfC:0.5830,DfV:9.83,DfP:21.20,DfM:10.35,DT:1.02
I0902 18:43:29.237832 140307958871808 fitness_value_extractor.py:131] Location(x=40.730461, y=-88.310822, z=0.033475)>DfC:0.5646,DfV:10.22,DfP:21.27,DfM:10.23,DT:0.62
I0902 18:43:29.638022 140307958871808 fitness_value_extractor.py:131] Location(x=41.136230, y=-88.237335, z=0.033457)>DfC:0.5601,DfV:10.63,DfP:21.34,DfM:10.14,DT:0.21
I0902 18:43:30.044461 140307958871808 fitness_value_extractor.py:129] Location(x=41.550327, y=-88.170105, z=0.033426)>DfC:0.5529,DfV:11.05,DfP:21.40,DfM:10.07,DT:-0.21
