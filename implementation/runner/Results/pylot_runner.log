I0901 16:25:12.625727 139770863273792 __init__.py:409] $HOME=/home/erdos
I0901 16:25:12.626544 139770863273792 __init__.py:409] matplotlib data path /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data
I0901 16:25:12.633069 139770863273792 __init__.py:1156] loaded rc file /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
I0901 16:25:12.634103 139770863273792 __init__.py:1879] matplotlib version 2.2.4
I0901 16:25:12.634158 139770863273792 __init__.py:1880] interactive is False
I0901 16:25:12.634415 139770863273792 __init__.py:1881] platform is linux
I0901 16:25:12.637502 139770863273792 __init__.py:1882] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'sitecustomize', 'encodings.cp437', 'signal', 'enum', 'absl', 'absl.app', '__future__', 'pdb', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'cmd', 'string', '_string', 'bdb', 'fnmatch', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'linecache', 'tokenize', 'token', 'code', 'traceback', 'argparse', 'copy', 'textwrap', 'gettext', 'locale', 'struct', '_struct', 'codeop', 'glob', 'pprint', 'absl.command_name', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'csv', '_csv', 'absl.flags._helpers', 'fcntl', 'termios', 'six', 'six.moves', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'logging', 'time', 'threading', 'atexit', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'typing', 'typing.io', 'typing.re', 'absl.flags._validators', 'absl.logging', 'getpass', 'socket', '_socket', 'selectors', 'math', 'select', 'timeit', 'gc', 'absl.logging.converter', 'faulthandler', 'erdos', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'pickle', '_compat_pickle', '_pickle', 'array', '__mp_main__', 'erdos.internal', 'erdos.streams', 'erdos.message', 'erdos.timestamp', 'erdos.operator', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'ntpath', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', '_ctypes', 'ctypes', 'ctypes._endian', 'numpy.core._internal', 'platform', 'subprocess', '_posixsubprocess', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random._bit_generator', '_cython_0_29_19', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', 'hashlib', '_hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'tempfile', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'erdos.profile', 'erdos.utils', 'pylot', 'pylot.flags', 'pylot.control', 'pylot.control.flags', 'pylot.debug', 'pylot.debug.flags', 'pylot.perception', 'pylot.perception.flags', 'pylot.planning', 'pylot.planning.flags', 'pylot.planning.frenet_optimal_trajectory', 'pylot.planning.frenet_optimal_trajectory.flags', 'pylot.planning.hybrid_astar', 'pylot.planning.hybrid_astar.flags', 'pylot.planning.rrt_star', 'pylot.planning.rrt_star.flags', 'pylot.prediction', 'pylot.prediction.flags', 'pylot.simulation', 'pylot.simulation.flags', 'pylot.component_creator', 'pylot.operator_creator', 'pylot.utils', 'tensorflow', 'tensorflow._api', 'tensorflow.python', 'tensorflow.tools', 'tensorflow.core', 'tensorflow.compiler', 'tensorflow.lite', 'tensorflow.keras', 'tensorflow.contrib', 'tensorflow.compat', 'tensorflow.summary', 'tensorflow.examples', 'tensorflow.estimator', 'tensorflow_core', 'distutils', 'tensorflow_core.python', 'tensorflow_core.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow.python.pywrap_tensorflow_internal', 'imp', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.python.util', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow_core.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.util.tf_contextlib', 'tensorflow_core.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'calendar', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow_core.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.framework.ops', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python.util.nest', 'tensorflow.python.framework.dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.fast_tensor_util', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow_core.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.framework.constant_op', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'uuid', 'ctypes.util', 'tensorflow.python.framework.config', 'tensorflow.python.client', 'tensorflow.python.client.client_lib', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.standard_ops', 'tensorflow_core.python.autograph', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'queue', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python.platform.gfile', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'distutils.version', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.sparse', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.func_graph', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.compiler', 'astor', 'astor.code_gen', 'astor.op_util', 'astor.node_util', 'astor.string_repr', 'astor.source_repr', 'astor.file_util', 'astor.tree_walk', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'tensorflow_core.compiler', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', 'ipaddress', '_ssl', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.python.tpu', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.ops.initializers_ns', 'tensorflow_core.python.keras', 'tensorflow.python.keras', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.pool', 'multiprocessing.util', 'tarfile', 'zipfile', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', '_cython_0_29_21', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'multiprocessing.connection', '_multiprocessing', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.sslproto', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.saving.model_config', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.saved_model.builder', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'six.moves.http_client', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.util.selectors', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3.util.url', 'six.moves.urllib.parse', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.response', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'urllib3.contrib', 'requests.__version__', 'requests.utils', 'cgi', 'html', 'html.entities', 'requests.certs', 'certifi', 'certifi.core', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.selectors', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.response', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3.contrib', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'unicodedata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'urllib3.contrib.socks', 'socks', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.training_arrays', 'scipy', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', '_cython_0_29', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._reordering', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.engine.training_v2', 'tensorflow.python.keras.engine.training_v2_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'pydot', 'dot_parser', 'pyparsing', 'tensorflow.python.keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.models', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'PIL', 'PIL._version', 'PIL.ImageEnhance', 'PIL.Image', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'PIL.ImageFilter', 'PIL.ImageStat', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'numpy.dual', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special.basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.misc.pilutil', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.io', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.ops', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'fractions', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.moving_averages', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'absl.testing._parameterized_async', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow_core._api', 'tensorflow._api.v1', 'tensorflow._api.v1.app', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow._api.v1.audio', 'tensorflow._api.v1.autograph', 'tensorflow._api.v1.autograph.experimental', 'tensorflow._api.v1.bitwise', 'tensorflow._api.v1.compat', 'tensorflow._api.v1.compat.v1', 'tensorflow._api.v1.compat.v1.app', 'tensorflow._api.v1.compat.v1.audio', 'tensorflow._api.v1.compat.v1.autograph', 'tensorflow._api.v1.compat.v1.autograph.experimental', 'tensorflow._api.v1.compat.v1.bitwise', 'tensorflow._api.v1.compat.v1.compat', 'tensorflow._api.v1.compat.v1.config', 'tensorflow._api.v1.compat.v1.config.experimental', 'tensorflow._api.v1.compat.v1.config.optimizer', 'tensorflow._api.v1.compat.v1.config.threading', 'tensorflow._api.v1.compat.v1.data', 'tensorflow._api.v1.compat.v1.data.experimental', 'tensorflow._api.v1.compat.v1.debugging', 'tensorflow._api.v1.compat.v1.distribute', 'tensorflow._api.v1.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v1.compat.v1.distribute.experimental', 'tensorflow._api.v1.compat.v1.distributions', 'tensorflow._api.v1.compat.v1.dtypes', 'tensorflow._api.v1.compat.v1.errors', 'tensorflow._api.v1.compat.v1.experimental', 'tensorflow._api.v1.compat.v1.feature_column', 'tensorflow._api.v1.compat.v1.gfile', 'tensorflow._api.v1.compat.v1.graph_util', 'tensorflow._api.v1.compat.v1.image', 'tensorflow._api.v1.compat.v1.initializers', 'tensorflow._api.v1.compat.v1.io', 'tensorflow._api.v1.compat.v1.io.gfile', 'tensorflow._api.v1.compat.v1.layers', 'tensorflow._api.v1.compat.v1.layers.experimental', 'tensorflow._api.v1.compat.v1.linalg', 'tensorflow._api.v1.compat.v1.lite', 'tensorflow._api.v1.compat.v1.lite.constants', 'tensorflow_core.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v1.compat.v1.lite.experimental', 'tensorflow._api.v1.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '4259f303abd9c6563476d3977e38810b', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.lite.python.convert', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v1.compat.v1.logging', 'tensorflow._api.v1.compat.v1.lookup', 'tensorflow._api.v1.compat.v1.lookup.experimental', 'tensorflow._api.v1.compat.v1.losses', 'tensorflow._api.v1.compat.v1.manip', 'tensorflow._api.v1.compat.v1.math', 'tensorflow._api.v1.compat.v1.metrics', 'tensorflow._api.v1.compat.v1.nest', 'tensorflow._api.v1.compat.v1.nn', 'tensorflow._api.v1.compat.v1.nn.rnn_cell', 'tensorflow._api.v1.compat.v1.profiler', 'tensorflow._api.v1.compat.v1.python_io', 'tensorflow._api.v1.compat.v1.quantization', 'tensorflow._api.v1.compat.v1.queue', 'tensorflow._api.v1.compat.v1.ragged', 'tensorflow._api.v1.compat.v1.random', 'tensorflow._api.v1.compat.v1.random.experimental', 'tensorflow._api.v1.compat.v1.raw_ops', 'tensorflow._api.v1.compat.v1.resource_loader', 'tensorflow._api.v1.compat.v1.saved_model', 'tensorflow._api.v1.compat.v1.saved_model.builder', 'tensorflow._api.v1.compat.v1.saved_model.constants', 'tensorflow._api.v1.compat.v1.saved_model.experimental', 'tensorflow._api.v1.compat.v1.saved_model.loader', 'tensorflow._api.v1.compat.v1.saved_model.main_op', 'tensorflow._api.v1.compat.v1.saved_model.signature_constants', 'tensorflow._api.v1.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v1.compat.v1.saved_model.tag_constants', 'tensorflow._api.v1.compat.v1.saved_model.utils', 'tensorflow._api.v1.compat.v1.sets', 'tensorflow._api.v1.compat.v1.signal', 'tensorflow._api.v1.compat.v1.sparse', 'tensorflow._api.v1.compat.v1.spectral', 'tensorflow._api.v1.compat.v1.strings', 'tensorflow._api.v1.compat.v1.summary', 'tensorflow._api.v1.compat.v1.sysconfig', 'tensorflow._api.v1.compat.v1.test', 'tensorflow._api.v1.compat.v1.tpu', 'tensorflow._api.v1.compat.v1.tpu.experimental', 'tensorflow._api.v1.compat.v1.train', 'tensorflow._api.v1.compat.v1.train.experimental', 'tensorflow._api.v1.compat.v1.train.queue_runner', 'tensorflow._api.v1.compat.v1.user_ops', 'tensorflow._api.v1.compat.v1.version', 'tensorflow._api.v1.compat.v1.xla', 'tensorflow._api.v1.compat.v1.xla.experimental', 'tensorflow_estimator', 'tensorflow_estimator._api', 'tensorflow_estimator._api.v1', 'tensorflow_estimator._api.v1.estimator', 'tensorflow_estimator._api.v1.estimator.experimental', 'tensorflow_estimator.python', 'tensorflow_estimator.python.estimator', 'tensorflow_estimator.python.estimator.canned', 'tensorflow_estimator.python.estimator.canned.dnn', 'tensorflow_estimator.python.estimator.estimator', 'tensorflow.python.distribute.estimator_training', 'tensorflow.python.training.evaluation', 'tensorflow.python.util.compat_internal', 'tensorflow_estimator.python.estimator.model_fn', 'tensorflow_estimator.python.estimator.mode_keys', 'tensorflow_estimator.python.estimator.run_config', 'tensorflow_estimator.python.estimator.util', 'tensorflow_estimator.python.estimator.export', 'tensorflow_estimator.python.estimator.export.export_lib', 'tensorflow_estimator.python.estimator.export.export', 'tensorflow_estimator.python.estimator.canned.head', 'tensorflow_estimator.python.estimator.canned.metric_keys', 'tensorflow_estimator.python.estimator.canned.prediction_keys', 'tensorflow_estimator.python.estimator.export.export_output', 'tensorflow_estimator.python.estimator.canned.optimizers', 'tensorflow_estimator.python.estimator.head', 'tensorflow_estimator.python.estimator.head.head_utils', 'tensorflow_estimator.python.estimator.head.binary_class_head', 'tensorflow_estimator.python.estimator.head.base_head', 'tensorflow_estimator.python.estimator.head.multi_class_head', 'tensorflow_estimator.python.estimator.head.regression_head', 'tensorflow_estimator.python.estimator.canned.kmeans', 'tensorflow.python.ops.clustering_ops', 'tensorflow.python.ops.gen_clustering_ops', 'tensorflow_estimator.python.estimator.canned.linear', 'tensorflow_estimator.python.estimator.canned.linear_optimizer', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils.sdca_ops', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils.sharded_mutable_dense_hashtable', 'tensorflow_estimator.python.estimator.early_stopping', 'tensorflow_estimator.python.estimator.hooks', 'tensorflow_estimator.python.estimator.hooks.hooks', 'tensorflow_estimator._api.v1.estimator.export', 'tensorflow_estimator._api.v1.estimator.inputs', 'tensorflow_estimator.python.estimator.inputs', 'tensorflow_estimator.python.estimator.inputs.numpy_io', 'tensorflow_estimator.python.estimator.inputs.queues', 'tensorflow_estimator.python.estimator.inputs.queues.feeding_functions', 'tensorflow_estimator.python.estimator.inputs.queues.feeding_queue_runner', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas._typing', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.interval', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.tslibs', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.easter', 'dateutil.relativedelta', 'dateutil._common', 'pandas._libs.properties', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.ops_dispatch', 'pandas._libs.algos', 'pandas._libs.lib', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.construction', 'pandas.core.common', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.arrays.masked', 'pandas.core.nanops', 'pandas.core.array_algos', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.tseries.offsets', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.aggregation', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.times', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.generic', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.concat', 'pandas.core.internals.managers', 'pandas.core.internals.ops', 'pandas.core.shared_docs', 'pandas.io.formats.format', 'pandas.io.common', 'mmap', 'pandas.core.indexes.accessors', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.util.numba_', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.frame', 'pandas.core.internals.construction', 'pandas.core.reshape', 'pandas.core.reshape.melt', 'pandas.core.reshape.concat', 'pandas.core.reshape.util', 'pandas.io.formats.info', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._odswriter', 'pandas._libs.json', 'pandas.io.formats.excel', 'pandas.io.formats.css', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tensorflow_estimator.python.estimator.inputs.pandas_io', 'tensorflow_estimator._api.v1.estimator.tpu', 'tensorflow_estimator._api.v1.estimator.tpu.experimental', 'tensorflow_estimator.python.estimator.tpu', 'tensorflow_estimator.python.estimator.tpu._tpu_estimator_embedding', 'tensorflow_estimator.python.estimator.tpu.tpu_config', 'tensorflow_estimator.python.estimator.tpu.util', 'tensorflow_estimator.python.estimator.tpu.tpu_estimator', 'tensorflow.core.protobuf.tpu.compilation_result_pb2', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.service', 'tensorflow.compiler.xla.service.hlo_pb2', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.functional', 'tensorflow.python.tpu.preempted_hook', 'tensorflow.python.tpu.session_support', 'tensorflow.python.tpu.tpu_embedding_gradient', 'tensorflow.python.tpu.tpu_feed', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.python.tpu.tpu_sharding', 'tensorflow_estimator.python.estimator.tpu.error_handling', 'tensorflow_estimator.python.estimator.tpu.iteration_count_estimator', 'tensorflow_estimator.python.estimator.tpu.tpu_context', 'tensorflow_estimator.python.estimator.canned.baseline', 'tensorflow_estimator.python.estimator.canned.boosted_trees', 'tensorflow.core.kernels', 'tensorflow.core.kernels.boosted_trees', 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2', 'tensorflow.python.ops.boosted_trees_ops', 'tensorflow_estimator.python.estimator.canned.boosted_trees_utils', 'tensorflow.python.ops.cond_v2', 'tensorflow_estimator.python.estimator.canned.dnn_linear_combined', 'tensorflow_estimator.python.estimator.canned.parsing_utils', 'tensorflow_estimator.python.estimator.exporter', 'tensorflow_estimator.python.estimator.gc', 'tensorflow_estimator.python.estimator.extenders', 'tensorflow_estimator.python.estimator.head.multi_head', 'tensorflow_estimator.python.estimator.head.multi_label_head', 'tensorflow_estimator.python.estimator.hooks.basic_session_run_hooks', 'tensorflow_estimator.python.estimator.hooks.session_run_hook', 'tensorflow_estimator.python.estimator.training', 'tensorflow_estimator.python.estimator.api', 'tensorflow_estimator.python.estimator.api._v1', 'tensorflow_estimator.python.estimator.api._v1.estimator', 'tensorflow_estimator.python.estimator.api._v1.estimator.experimental', 'tensorflow_estimator.python.estimator.api._v1.estimator.export', 'tensorflow_estimator.python.estimator.api._v1.estimator.inputs', 'tensorflow_estimator.python.estimator.api._v1.estimator.tpu', 'tensorflow_estimator.python.estimator.api._v1.estimator.tpu.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v1.compat.v2', 'tensorflow._api.v1.compat.v2.audio', 'tensorflow._api.v1.compat.v2.autograph', 'tensorflow._api.v1.compat.v2.autograph.experimental', 'tensorflow._api.v1.compat.v2.bitwise', 'tensorflow._api.v1.compat.v2.compat', 'tensorflow._api.v1.compat.v2.config', 'tensorflow._api.v1.compat.v2.config.experimental', 'tensorflow._api.v1.compat.v2.config.optimizer', 'tensorflow._api.v1.compat.v2.config.threading', 'tensorflow._api.v1.compat.v2.data', 'tensorflow._api.v1.compat.v2.data.experimental', 'tensorflow._api.v1.compat.v2.debugging', 'tensorflow._api.v1.compat.v2.distribute', 'tensorflow._api.v1.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v1.compat.v2.distribute.experimental', 'tensorflow._api.v1.compat.v2.dtypes', 'tensorflow._api.v1.compat.v2.errors', 'tensorflow._api.v1.compat.v2.experimental', 'tensorflow._api.v1.compat.v2.feature_column', 'tensorflow._api.v1.compat.v2.graph_util', 'tensorflow._api.v1.compat.v2.image', 'tensorflow._api.v1.compat.v2.io', 'tensorflow._api.v1.compat.v2.io.gfile', 'tensorflow._api.v1.compat.v2.linalg', 'tensorflow._api.v1.compat.v2.lite', 'tensorflow._api.v1.compat.v2.lite.experimental', 'tensorflow._api.v1.compat.v2.lookup', 'tensorflow._api.v1.compat.v2.lookup.experimental', 'tensorflow._api.v1.compat.v2.math', 'tensorflow._api.v1.compat.v2.nest', 'tensorflow._api.v1.compat.v2.nn', 'tensorflow._api.v1.compat.v2.quantization', 'tensorflow._api.v1.compat.v2.queue', 'tensorflow._api.v1.compat.v2.ragged', 'tensorflow._api.v1.compat.v2.random', 'tensorflow._api.v1.compat.v2.random.experimental', 'tensorflow._api.v1.compat.v2.raw_ops', 'tensorflow._api.v1.compat.v2.saved_model', 'tensorflow._api.v1.compat.v2.sets', 'tensorflow._api.v1.compat.v2.signal', 'tensorflow._api.v1.compat.v2.sparse', 'tensorflow._api.v1.compat.v2.strings', 'tensorflow._api.v1.compat.v2.summary', 'tensorflow._api.v1.compat.v2.summary.experimental', 'tensorflow._api.v1.compat.v2.sysconfig', 'tensorflow._api.v1.compat.v2.test', 'tensorflow._api.v1.compat.v2.tpu', 'tensorflow._api.v1.compat.v2.tpu.experimental', 'tensorflow._api.v1.compat.v2.train', 'tensorflow._api.v1.compat.v2.train.experimental', 'tensorflow._api.v1.compat.v2.version', 'tensorflow._api.v1.compat.v2.xla', 'tensorflow._api.v1.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow_estimator.python.estimator.api._v2', 'tensorflow_estimator.python.estimator.api._v2.estimator', 'tensorflow_estimator.python.estimator.api._v2.estimator.experimental', 'tensorflow_estimator.python.estimator.canned.rnn', 'tensorflow_estimator.python.estimator.head.sequential_head', 'tensorflow_estimator.python.estimator.api._v2.estimator.export', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v1.config', 'tensorflow._api.v1.config.experimental', 'tensorflow._api.v1.config.optimizer', 'tensorflow._api.v1.config.threading', 'tensorflow._api.v1.data', 'tensorflow._api.v1.data.experimental', 'tensorflow._api.v1.debugging', 'tensorflow._api.v1.distribute', 'tensorflow._api.v1.distribute.cluster_resolver', 'tensorflow._api.v1.distribute.experimental', 'tensorflow._api.v1.distributions', 'tensorflow._api.v1.dtypes', 'tensorflow._api.v1.errors', 'tensorflow._api.v1.experimental', 'tensorflow._api.v1.feature_column', 'tensorflow._api.v1.gfile', 'tensorflow._api.v1.graph_util', 'tensorflow._api.v1.image', 'tensorflow._api.v1.initializers', 'tensorflow._api.v1.io', 'tensorflow._api.v1.io.gfile', 'tensorflow._api.v1.layers', 'tensorflow._api.v1.layers.experimental', 'tensorflow._api.v1.linalg', 'tensorflow._api.v1.lite', 'tensorflow._api.v1.lite.constants', 'tensorflow._api.v1.lite.experimental', 'tensorflow._api.v1.lite.experimental.nn', 'tensorflow._api.v1.logging', 'tensorflow._api.v1.lookup', 'tensorflow._api.v1.lookup.experimental', 'tensorflow._api.v1.losses', 'tensorflow._api.v1.manip', 'tensorflow._api.v1.math', 'tensorflow._api.v1.metrics', 'tensorflow._api.v1.nest', 'tensorflow._api.v1.nn', 'tensorflow._api.v1.nn.rnn_cell', 'tensorflow._api.v1.profiler', 'tensorflow._api.v1.python_io', 'tensorflow._api.v1.quantization', 'tensorflow._api.v1.queue', 'tensorflow._api.v1.ragged', 'tensorflow._api.v1.random', 'tensorflow._api.v1.random.experimental', 'tensorflow._api.v1.raw_ops', 'tensorflow._api.v1.resource_loader', 'tensorflow._api.v1.saved_model', 'tensorflow._api.v1.saved_model.builder', 'tensorflow._api.v1.saved_model.constants', 'tensorflow._api.v1.saved_model.experimental', 'tensorflow._api.v1.saved_model.loader', 'tensorflow._api.v1.saved_model.main_op', 'tensorflow._api.v1.saved_model.signature_constants', 'tensorflow._api.v1.saved_model.signature_def_utils', 'tensorflow._api.v1.saved_model.tag_constants', 'tensorflow._api.v1.saved_model.utils', 'tensorflow._api.v1.sets', 'tensorflow._api.v1.signal', 'tensorflow._api.v1.sparse', 'tensorflow._api.v1.spectral', 'tensorflow._api.v1.strings', 'tensorflow._api.v1.summary', 'tensorflow._api.v1.sysconfig', 'tensorflow._api.v1.test', 'tensorflow._api.v1.tpu', 'tensorflow._api.v1.tpu.experimental', 'tensorflow._api.v1.train', 'tensorflow._api.v1.train.experimental', 'tensorflow._api.v1.train.queue_runner', 'tensorflow._api.v1.user_ops', 'tensorflow._api.v1.version', 'tensorflow._api.v1.xla', 'tensorflow._api.v1.xla.experimental', 'tensorflow.python.util.deprecation_wrapper', 'pylot.drivers', 'pylot.drivers.sensor_setup', 'pylot.simulation.utils', 'pylot.perception.depth_frame', 'numpy.matlib', 'pylot.perception.detection', 'pylot.perception.detection.obstacle', 'pylot.perception.detection.utils', 'pylot.perception.detection.speed_limit_sign', 'pylot.perception.detection.stop_sign', 'pylot.perception.detection.traffic_light', 'pylot.simulation.carla_handler', 'carla', 'carla.libcarla', 'pkg_resources', 'pkgutil', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'libcarla.command', 'pylot.simulation.carla_operator', 'pylot.simulation.fitness_value_extractor', 'pylot.control.messages', 'pylot.perception.messages', 'pylot.perception.camera_frame', 'cv2', 'cv2.Error', 'cv2.aruco', 'cv2.bgsegm', 'cv2.bioinspired', 'cv2.ccm', 'cv2.cuda', 'cv2.datasets', 'cv2.detail', 'cv2.dnn', 'cv2.dnn_superres', 'cv2.dynafu', 'cv2.face', 'cv2.fisheye', 'cv2.flann', 'cv2.ft', 'cv2.gapi', 'cv2.gapi.core', 'cv2.gapi.core.cpu', 'cv2.gapi.core.fluid', 'cv2.gapi.core.ocl', 'cv2.gapi.ie', 'cv2.gapi.ie.detail', 'cv2.gapi.onnx', 'cv2.gapi.own', 'cv2.gapi.own.detail', 'cv2.gapi.video', 'cv2.gapi.wip', 'cv2.hfs', 'cv2.img_hash', 'cv2.intensity_transform', 'cv2.ipp', 'cv2.kinfu', 'cv2.large_kinfu', 'cv2.legacy', 'cv2.line_descriptor', 'cv2.linemod', 'cv2.mcc', 'cv2.ml', 'cv2.motempl', 'cv2.multicalib', 'cv2.ocl', 'cv2.ogl', 'cv2.omnidir', 'cv2.optflow', 'cv2.phase_unwrapping', 'cv2.plot', 'cv2.ppf_match_3d', 'cv2.quality', 'cv2.rapid', 'cv2.reg', 'cv2.rgbd', 'cv2.saliency', 'cv2.samples', 'cv2.structured_light', 'cv2.text', 'cv2.utils', 'cv2.videoio_registry', 'cv2.videostab', 'cv2.xfeatures2d', 'cv2.ximgproc', 'cv2.ximgproc.segmentation', 'cv2.xphoto', 'cv2.cv2', 'cv2.data', 'cv2.version', 'pylot.perception.point_cloud', 'pylot.perception.segmentation', 'pylot.perception.segmentation.segmented_frame', 'skimage', 'skimage._shared', 'skimage._shared.geometry', 'skimage.util', 'skimage.util.dtype', 'skimage.util.shape', 'skimage.util.noise', 'skimage.util.apply_parallel', 'skimage.util.arraycrop', 'skimage.util._regular_grid', 'skimage.util.unique', 'skimage.util._invert', 'skimage.util._montage', 'skimage.exposure', 'skimage.exposure.exposure', 'skimage.color', 'skimage.color.colorconv', 'skimage.color.colorlabel', 'skimage._shared.utils', 'skimage._shared._warnings', 'skimage.color.rgb_colors', 'skimage.color.delta_e', 'skimage.exposure._adapthist', 'skimage.color.adapt_rgb', 'skimage.util.lookfor', 'skimage.data', 'skimage.io', 'skimage.io.manage_plugins', 'configparser', 'skimage.io.collection', 'skimage.external', 'skimage.external.tifffile', 'skimage.external.tifffile.tifffile', 'xml.etree.cElementTree', 'skimage.external.tifffile._tifffile', 'skimage.io.sift', 'skimage.io._io', 'skimage.io.util', 'skimage.io._image_stack', 'skimage.io._plugins', 'skimage.io._plugins.pil_plugin', 'skimage.io._plugins.matplotlib_plugin', 'mpl_toolkits.axes_grid1', 'mpl_toolkits.axes_grid1.axes_size', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.cbook._backports', 'matplotlib.compat', 'matplotlib.compat.subprocess', 'matplotlib.rcsetup', 'matplotlib.testing', 'matplotlib.fontconfig_pattern', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version']
I0901 16:25:12.661347 139770863273792 __init__.py:409] CACHEDIR=/home/erdos/.cache/matplotlib
I0901 16:25:12.661500 139770863273792 font_manager.py:1071] font search path ['/home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf', '/home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm', '/home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts']
I0901 16:25:12.816924 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf
I0901 16:25:12.817185 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf
I0901 16:25:12.817232 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf
I0901 16:25:12.817266 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf
I0901 16:25:12.817297 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf
I0901 16:25:12.817325 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf
I0901 16:25:12.817351 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf
I0901 16:25:12.817376 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf
I0901 16:25:12.817402 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf
I0901 16:25:12.817436 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf
I0901 16:25:12.817463 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf
I0901 16:25:12.817488 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf
I0901 16:25:12.817512 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf
I0901 16:25:12.817536 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf
I0901 16:25:12.817560 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf
I0901 16:25:12.817584 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf
I0901 16:25:12.817607 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf
I0901 16:25:12.817630 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf
I0901 16:25:12.817653 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf
I0901 16:25:12.817723 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf
I0901 16:25:12.817756 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf
I0901 16:25:12.817782 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf
I0901 16:25:12.817807 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf
I0901 16:25:12.817831 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf
I0901 16:25:12.817854 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf
I0901 16:25:12.817877 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf
I0901 16:25:12.817900 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf
I0901 16:25:12.817923 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf
I0901 16:25:12.817945 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf
I0901 16:25:12.817968 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf
I0901 16:25:12.817991 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf
I0901 16:25:12.818014 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf
I0901 16:25:12.818036 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf
I0901 16:25:12.818059 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf
I0901 16:25:12.818082 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf
I0901 16:25:12.818104 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf
I0901 16:25:12.818127 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf
I0901 16:25:12.818150 139770863273792 font_manager.py:1081] trying fontname /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf
I0901 16:25:12.818172 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf
I0901 16:25:12.818195 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf
I0901 16:25:12.818218 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf
I0901 16:25:12.818240 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf
I0901 16:25:12.818264 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf
I0901 16:25:12.818286 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf
I0901 16:25:12.818328 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf
I0901 16:25:12.818360 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf
I0901 16:25:12.818386 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf
I0901 16:25:12.818411 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf
I0901 16:25:12.818444 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf
I0901 16:25:12.818468 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf
I0901 16:25:12.818491 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf
I0901 16:25:12.818514 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
I0901 16:25:12.818537 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf
I0901 16:25:12.818559 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf
I0901 16:25:12.818582 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf
I0901 16:25:12.818604 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf
I0901 16:25:12.818627 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf
I0901 16:25:12.818650 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf
I0901 16:25:12.818672 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf
I0901 16:25:12.818694 139770863273792 font_manager.py:1081] trying fontname /usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf
I0901 16:25:12.818722 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf
I0901 16:25:12.821293 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf
I0901 16:25:12.823053 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf
I0901 16:25:12.824892 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf
I0901 16:25:12.825763 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf
I0901 16:25:12.827005 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf
I0901 16:25:12.829243 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf
I0901 16:25:12.831454 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf
I0901 16:25:12.833697 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf
I0901 16:25:12.834523 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf
I0901 16:25:12.836009 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf
I0901 16:25:12.838366 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf
I0901 16:25:12.838769 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf
I0901 16:25:12.839134 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf
I0901 16:25:12.839761 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf
I0901 16:25:12.842191 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf
I0901 16:25:12.842567 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf
I0901 16:25:12.842998 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf
I0901 16:25:12.845349 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf
I0901 16:25:12.845717 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf
I0901 16:25:12.848988 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf
I0901 16:25:12.849560 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf
I0901 16:25:12.852168 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf
I0901 16:25:12.852546 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf
I0901 16:25:12.852905 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf
I0901 16:25:12.853250 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf
I0901 16:25:12.853640 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf
I0901 16:25:12.853999 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf
I0901 16:25:12.855949 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf
I0901 16:25:12.857905 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf
I0901 16:25:12.859173 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf
I0901 16:25:12.861327 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf
I0901 16:25:12.861700 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf
I0901 16:25:12.862058 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf
I0901 16:25:12.862432 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf
I0901 16:25:12.862816 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf
I0901 16:25:12.863391 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf
I0901 16:25:12.865076 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf
I0901 16:25:12.868510 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf
I0901 16:25:12.868563 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf
I0901 16:25:12.871259 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf
I0901 16:25:12.875840 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf
I0901 16:25:12.878561 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf
I0901 16:25:12.881066 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf
I0901 16:25:12.881120 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf
I0901 16:25:12.881159 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf
I0901 16:25:12.881189 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf
I0901 16:25:12.883239 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf
I0901 16:25:12.883293 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf
I0901 16:25:12.885354 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf
I0901 16:25:12.887639 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf
I0901 16:25:12.887695 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
I0901 16:25:12.887734 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf
I0901 16:25:12.889758 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf
I0901 16:25:12.889813 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf
I0901 16:25:12.889849 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf
I0901 16:25:12.889878 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf
I0901 16:25:12.889905 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf
I0901 16:25:12.892391 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf
I0901 16:25:12.894834 139770863273792 font_manager.py:565] createFontDict: /usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf
I0901 16:25:12.914831 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pcrbo8a.afm
I0901 16:25:12.917056 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Courier-Bold.afm
I0901 16:25:12.918889 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Times-Roman.afm
I0901 16:25:12.924113 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Helvetica-BoldOblique.afm
I0901 16:25:12.928590 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvlo8a.afm
I0901 16:25:12.930355 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmsy10.afm
I0901 16:25:12.931715 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pbkd8a.afm
I0901 16:25:12.933214 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmex10.afm
I0901 16:25:12.934091 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pagko8a.afm
I0901 16:25:12.935977 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pcrb8a.afm
I0901 16:25:12.937451 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/psyr.afm
I0901 16:25:12.938953 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Times-BoldItalic.afm
I0901 16:25:12.942896 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Helvetica.afm
I0901 16:25:12.947350 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pbkdi8a.afm
I0901 16:25:12.948845 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pbkl8a.afm
I0901 16:25:12.950381 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/putb8a.afm
I0901 16:25:12.952659 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pplri8a.afm
I0901 16:25:12.954084 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Times-Bold.afm
I0901 16:25:12.958194 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Symbol.afm
I0901 16:25:12.959622 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvro8an.afm
I0901 16:25:12.961524 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pzcmi8a.afm
I0901 16:25:12.962980 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvb8an.afm
I0901 16:25:12.964851 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmmi10.afm
I0901 16:25:12.966118 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pagk8a.afm
I0901 16:25:12.967733 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvbo8a.afm
I0901 16:25:12.969528 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pncb8a.afm
I0901 16:25:12.971089 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pbkli8a.afm
I0901 16:25:12.972506 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Times-Italic.afm
I0901 16:25:12.976632 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvr8a.afm
I0901 16:25:12.978234 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvro8a.afm
I0901 16:25:12.979821 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Helvetica-Bold.afm
I0901 16:25:12.984042 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pplbi8a.afm
I0901 16:25:12.985544 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/ptmbi8a.afm
I0901 16:25:12.987101 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pncbi8a.afm
I0901 16:25:12.988618 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pzdr.afm
I0901 16:25:12.989893 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvl8a.afm
I0901 16:25:12.991311 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/putri8a.afm
I0901 16:25:12.993103 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pncr8a.afm
I0901 16:25:12.994677 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/putr8a.afm
I0901 16:25:12.996504 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvb8a.afm
I0901 16:25:12.998138 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Helvetica-Oblique.afm
I0901 16:25:13.002549 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Courier-Oblique.afm
I0901 16:25:13.004299 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pcrr8a.afm
I0901 16:25:13.005767 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvr8an.afm
I0901 16:25:13.007515 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pcrro8a.afm
I0901 16:25:13.009019 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/ptmb8a.afm
I0901 16:25:13.010584 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/putbi8a.afm
I0901 16:25:13.012455 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pplr8a.afm
I0901 16:25:13.014144 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmr10.afm
I0901 16:25:13.015467 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/ZapfDingbats.afm
I0901 16:25:13.017024 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/cmtt10.afm
I0901 16:25:13.017870 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/ptmr8a.afm
I0901 16:25:13.019436 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Courier-BoldOblique.afm
I0901 16:25:13.021102 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pncri8a.afm
I0901 16:25:13.022595 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/ptmri8a.afm
I0901 16:25:13.024138 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts/Courier.afm
I0901 16:25:13.025700 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pplb8a.afm
I0901 16:25:13.027175 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/phvbo8an.afm
I0901 16:25:13.029014 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pagd8a.afm
I0901 16:25:13.030919 139770863273792 font_manager.py:565] createFontDict: /home/erdos/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/afm/pagdo8a.afm
I0901 16:25:13.035190 139770863273792 font_manager.py:1458] generated new fontManager
I0901 16:25:13.843588 139770863273792 component_creator.py:99] Using perfect obstacle detector...
I0901 16:25:13.846542 139770863273792 component_creator.py:119] Using perfect obstacle detector...
I0901 16:25:13.846995 139770863273792 component_creator.py:215] Using ground traffic lights from the simulator...
I0901 16:25:13.847125 139770863273792 component_creator.py:369] Using perfect obstacle tracker...
I0901 16:25:13.850183 139770863273792 component_creator.py:428] Using perfect semantic segmentation...
I0901 16:25:13.850257 139770863273792 component_creator.py:254] Using perfect depth estimation...
I0901 16:25:13.850301 139770863273792 component_creator.py:499] Not using prediction...
I0901 16:25:13.850348 139770863273792 component_creator.py:529] Using behavior planning...
I0901 16:25:13.854501 139770863273792 component_creator.py:533] Using planning...
I0901 16:25:13.857840 139770863273792 component_creator.py:564] Using MPC controller...
I0901 16:25:14.287378 139770863273792 component_creator.py:595] Adding collision logging sensor...
I0901 16:25:14.288902 139770863273792 component_creator.py:599] Adding lane invasion sensor...
I0901 16:25:14.289708 139770863273792 component_creator.py:603] Adding traffic light invasion sensor...
I0901 16:25:14.326313 139770863273792 geos.py:67] Found GEOS DLL: <CDLL '/home/erdos/.local/lib/python3.6/site-packages/shapely/.libs/libgeos_c-bd8d3f16.so.1.10.2', handle 6839bd0 at 0x7f1d86efad68>, using it.
I0901 16:25:14.351797 139770863273792 geos.py:32] Trying `CDLL(libc.so.6)`
I0901 16:25:14.352350 139770863273792 geos.py:49] Library path: 'libc.so.6'
I0901 16:25:14.352396 139770863273792 geos.py:50] DLL: <CDLL 'libc.so.6', handle 7f1ef0aa3080 at 0x7f1d86efa898>
I0901 16:25:14.375877 139770863273792 component_creator.py:608] Adding overall evaluation operator...
I0901 16:25:36.101655 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.242859)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.51
I0901 16:25:36.702442 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.177575)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:37.224646 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.090843)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:37.692658 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.037671)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:38.064357 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.015681)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:38.550338 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.009213)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:39.057495 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.009869)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:39.581447 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.013306)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:39.987648 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.017400)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:40.647381 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.021207)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:41.226450 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.024385)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:41.671500 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.026882)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:42.148296 139765928150784 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.028768)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:42.670390 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.030154)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:43.081335 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.031152)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:43.604408 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.031859)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:44.019997 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.032353)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:44.491276 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.032353)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:44.918156 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.032721)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:45.354412 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.032865)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:45.832770 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.032997)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:46.271857 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033107)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:46.677577 139765928150784 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033193)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:47.039066 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033257)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:47.416435 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033305)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:47.893946 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033339)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:48.266330 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033346)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:48.813919 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033359)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:49.232867 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033372)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:49.694433 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033383)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:50.193057 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033392)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:50.628406 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033399)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:51.067310 139765408065280 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033404)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:51.502989 139764267214592 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033408)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:52.046851 139764267214592 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033409)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:52.501285 139764267214592 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033410)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:52.954410 139764267214592 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033411)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:53.454471 139764267214592 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033412)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:53.927394 139764267214592 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033412)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:54.422321 139764267214592 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033414)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:55.166107 139764267214592 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033414)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:55.625072 139764267214592 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033414)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:56.142755 139765408065280 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033414)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:56.768809 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033415)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:57.151333 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033415)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:57.638300 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033415)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:58.149497 139765936543488 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033415)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:58.771948 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033415)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:59.209885 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382355, y=-4.108996, z=0.033415)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:25:59.647141 139765902972672 fitness_value_extractor.py:131] Location(x=-140.382370, y=-4.108997, z=0.033419)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.52
I0901 16:26:00.156120 139765919758080 fitness_value_extractor.py:131] Location(x=-140.403732, y=-4.108945, z=0.033077)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.28,DT:55.50
I0901 16:26:00.555124 139765902972672 fitness_value_extractor.py:131] Location(x=-140.455368, y=-4.108820, z=0.032595)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.29,DT:55.47
I0901 16:26:01.163243 139765902972672 fitness_value_extractor.py:131] Location(x=-140.535263, y=-4.108626, z=0.032159)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.30,DT:55.41
I0901 16:26:01.492251 139765902972672 fitness_value_extractor.py:131] Location(x=-140.641495, y=-4.108368, z=0.031825)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.32,DT:55.34
I0901 16:26:01.959063 139765902972672 fitness_value_extractor.py:131] Location(x=-140.772171, y=-4.108050, z=0.031600)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.35,DT:55.26
I0901 16:26:02.463468 139765902972672 fitness_value_extractor.py:131] Location(x=-140.925522, y=-4.107677, z=0.031470)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.39,DT:55.16
I0901 16:26:02.938238 139765902972672 fitness_value_extractor.py:131] Location(x=-141.099884, y=-4.107254, z=0.031413)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.44,DT:55.04
I0901 16:26:03.449647 139765902972672 fitness_value_extractor.py:131] Location(x=-141.293732, y=-4.106782, z=0.031412)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.49,DT:54.91
I0901 16:26:03.894870 139765902972672 fitness_value_extractor.py:131] Location(x=-141.505707, y=-4.106266, z=0.031449)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.56,DT:54.77
I0901 16:26:04.421491 139765902972672 fitness_value_extractor.py:131] Location(x=-141.734543, y=-4.105710, z=0.031510)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.64,DT:54.63
I0901 16:26:04.964943 139765902972672 fitness_value_extractor.py:131] Location(x=-141.979233, y=-4.105114, z=0.031586)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.73,DT:54.47
I0901 16:26:05.671700 139765902972672 fitness_value_extractor.py:131] Location(x=-142.238861, y=-4.104482, z=0.032289)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.84,DT:54.30
I0901 16:26:06.139875 139765902972672 fitness_value_extractor.py:131] Location(x=-142.512695, y=-4.103814, z=0.032719)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:6.96,DT:54.12
I0901 16:26:06.594934 139765902972672 fitness_value_extractor.py:131] Location(x=-142.799942, y=-4.103114, z=0.032839)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:7.09,DT:53.93
I0901 16:26:07.063121 139765902972672 fitness_value_extractor.py:131] Location(x=-143.099945, y=-4.102383, z=0.032853)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:7.24,DT:53.74
I0901 16:26:07.560268 139765416457984 fitness_value_extractor.py:131] Location(x=-143.412140, y=-4.101624, z=0.032838)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:7.41,DT:53.54
I0901 16:26:08.216731 139765416457984 fitness_value_extractor.py:131] Location(x=-143.735992, y=-4.100835, z=0.032825)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:7.59,DT:53.34
I0901 16:26:08.801169 139765416457984 fitness_value_extractor.py:131] Location(x=-144.071075, y=-4.100021, z=0.032822)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:7.79,DT:53.12
I0901 16:26:09.285328 139765416457984 fitness_value_extractor.py:131] Location(x=-144.416977, y=-4.099180, z=0.032828)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:8.01,DT:52.91
I0901 16:26:09.667131 139765416457984 fitness_value_extractor.py:131] Location(x=-144.773346, y=-4.098313, z=0.032841)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:8.24,DT:52.68
I0901 16:26:10.152723 139765416457984 fitness_value_extractor.py:131] Location(x=-145.139908, y=-4.097422, z=0.032859)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:8.49,DT:52.45
I0901 16:26:10.630387 139765416457984 fitness_value_extractor.py:131] Location(x=-145.516388, y=-4.096507, z=0.032880)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:8.75,DT:52.22
I0901 16:26:11.138830 139765416457984 fitness_value_extractor.py:131] Location(x=-145.902542, y=-4.095567, z=0.032902)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:9.02,DT:51.98
I0901 16:26:11.744795 139765416457984 fitness_value_extractor.py:131] Location(x=-146.298157, y=-4.094604, z=0.032924)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:9.32,DT:51.74
I0901 16:26:12.183349 139765416457984 fitness_value_extractor.py:131] Location(x=-146.703064, y=-4.093619, z=0.032945)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:9.62,DT:51.49
I0901 16:26:12.747496 139765416457984 fitness_value_extractor.py:131] Location(x=-147.117050, y=-4.092611, z=0.032966)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:9.94,DT:51.24
I0901 16:26:13.205505 139765416457984 fitness_value_extractor.py:131] Location(x=-147.539993, y=-4.091581, z=0.032985)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.28,DT:50.99
I0901 16:26:13.678684 139765416457984 fitness_value_extractor.py:131] Location(x=-147.971741, y=-4.090530, z=0.033003)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.63,DT:50.73
I0901 16:26:14.173205 139765408065280 fitness_value_extractor.py:131] Location(x=-148.412186, y=-4.089458, z=0.033019)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.99,DT:50.47
I0901 16:26:14.634958 139765408065280 fitness_value_extractor.py:131] Location(x=-148.861176, y=-4.088365, z=0.033034)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:11.36,DT:50.21
I0901 16:26:15.103078 139765408065280 fitness_value_extractor.py:131] Location(x=-149.315109, y=-4.087260, z=0.033121)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:11.74,DT:49.95
I0901 16:26:15.589363 139765408065280 fitness_value_extractor.py:131] Location(x=-149.768372, y=-4.086156, z=0.033287)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:12.13,DT:49.68
I0901 16:26:15.981357 139765408065280 fitness_value_extractor.py:131] Location(x=-150.221451, y=-4.085053, z=0.033438)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:12.52,DT:49.43
I0901 16:26:16.327109 139765408065280 fitness_value_extractor.py:131] Location(x=-150.674133, y=-4.083951, z=0.033561)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:12.92,DT:49.17
I0901 16:26:16.896090 139765408065280 fitness_value_extractor.py:131] Location(x=-151.126556, y=-4.082850, z=0.033655)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:13.32,DT:48.92
I0901 16:26:17.321823 139765408065280 fitness_value_extractor.py:131] Location(x=-151.578629, y=-4.081750, z=0.033726)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:13.72,DT:48.66
I0901 16:26:17.740333 139765408065280 fitness_value_extractor.py:131] Location(x=-152.030396, y=-4.080650, z=0.033779)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:14.12,DT:48.42
I0901 16:26:18.162786 139765408065280 fitness_value_extractor.py:131] Location(x=-152.481842, y=-4.079550, z=0.033818)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:14.53,DT:48.17
I0901 16:26:18.664853 139765408065280 fitness_value_extractor.py:131] Location(x=-152.932953, y=-4.078452, z=0.033847)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:14.94,DT:47.93
I0901 16:26:19.102233 139765408065280 fitness_value_extractor.py:131] Location(x=-153.383743, y=-4.077354, z=0.033869)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:15.35,DT:47.69
I0901 16:26:19.424794 139765408065280 fitness_value_extractor.py:131] Location(x=-153.838791, y=-4.076246, z=0.033788)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:15.77,DT:47.45
I0901 16:26:19.872522 139765408065280 fitness_value_extractor.py:131] Location(x=-154.306427, y=-4.075107, z=0.033584)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:16.20,DT:47.20
I0901 16:26:20.365405 139765408065280 fitness_value_extractor.py:131] Location(x=-154.785782, y=-4.073940, z=0.033396)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:16.64,DT:46.95
I0901 16:26:20.836589 139765408065280 fitness_value_extractor.py:131] Location(x=-155.276215, y=-4.072746, z=0.033255)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:17.10,DT:46.70
I0901 16:26:21.293895 139765408065280 fitness_value_extractor.py:131] Location(x=-155.777161, y=-4.071527, z=0.033158)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:17.57,DT:46.45
I0901 16:26:21.877534 139765408065280 fitness_value_extractor.py:131] Location(x=-156.288162, y=-4.070283, z=0.033096)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:18.05,DT:46.20
I0901 16:26:22.360153 139765408065280 fitness_value_extractor.py:131] Location(x=-156.808807, y=-4.069016, z=0.033061)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:18.54,DT:45.94
I0901 16:26:22.778048 139765408065280 fitness_value_extractor.py:131] Location(x=-157.338730, y=-4.067726, z=0.033043)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:19.04,DT:45.68
I0901 16:26:23.251052 139765408065280 fitness_value_extractor.py:131] Location(x=-157.877655, y=-4.066415, z=0.033038)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:19.55,DT:45.43
I0901 16:26:23.803405 139765408065280 fitness_value_extractor.py:131] Location(x=-158.424988, y=-4.065084, z=0.033048)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:20.07,DT:45.17
I0901 16:26:24.142446 139765408065280 fitness_value_extractor.py:131] Location(x=-158.977783, y=-4.063739, z=0.033113)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:20.59,DT:44.91
I0901 16:26:24.504243 139765408065280 fitness_value_extractor.py:131] Location(x=-159.530380, y=-4.062395, z=0.033276)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:20.51,DT:44.66
I0901 16:26:25.121743 139765408065280 fitness_value_extractor.py:131] Location(x=-160.076691, y=-4.061065, z=0.033534)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:19.99,DT:44.42
I0901 16:26:25.532359 139765408065280 fitness_value_extractor.py:131] Location(x=-160.612762, y=-4.059760, z=0.033832)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:19.47,DT:44.19
I0901 16:26:25.956726 139765408065280 fitness_value_extractor.py:131] Location(x=-161.136200, y=-4.058485, z=0.034127)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:18.97,DT:43.96
I0901 16:26:26.855461 139765408065280 fitness_value_extractor.py:131] Location(x=-161.645172, y=-4.057245, z=0.034397)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:18.49,DT:43.75
I0901 16:26:27.455333 139765408065280 fitness_value_extractor.py:131] Location(x=-162.138321, y=-4.056042, z=0.034636)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:18.02,DT:43.54
I0901 16:26:27.898736 139765408065280 fitness_value_extractor.py:131] Location(x=-162.614639, y=-4.054881, z=0.034841)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:17.57,DT:43.35
I0901 16:26:28.367722 139765408065280 fitness_value_extractor.py:131] Location(x=-163.073380, y=-4.053762, z=0.035013)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:17.13,DT:43.16
I0901 16:26:28.793132 139765408065280 fitness_value_extractor.py:131] Location(x=-163.513992, y=-4.052688, z=0.035155)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:16.72,DT:42.99
I0901 16:26:29.302740 139765408065280 fitness_value_extractor.py:131] Location(x=-163.936050, y=-4.051659, z=0.035271)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:16.32,DT:42.83
I0901 16:26:29.753520 139765408065280 fitness_value_extractor.py:131] Location(x=-164.339294, y=-4.050676, z=0.035364)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:15.95,DT:42.68
I0901 16:26:30.251845 139765408065280 fitness_value_extractor.py:131] Location(x=-164.723557, y=-4.049740, z=0.035438)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:15.59,DT:42.53
I0901 16:26:30.714937 139765408065280 fitness_value_extractor.py:131] Location(x=-165.088715, y=-4.048851, z=0.035496)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:15.25,DT:42.40
I0901 16:26:31.102811 139765408065280 fitness_value_extractor.py:131] Location(x=-165.434769, y=-4.048008, z=0.035540)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:14.93,DT:42.27
I0901 16:26:31.600529 139765408065280 fitness_value_extractor.py:131] Location(x=-165.761688, y=-4.047213, z=0.035573)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:14.62,DT:42.16
I0901 16:26:32.227672 139765408065280 fitness_value_extractor.py:131] Location(x=-166.069580, y=-4.046463, z=0.035596)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:14.34,DT:42.05
I0901 16:26:32.741750 139765408065280 fitness_value_extractor.py:131] Location(x=-166.358505, y=-4.045761, z=0.035612)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:14.08,DT:41.95
I0901 16:26:33.278824 139765408065280 fitness_value_extractor.py:131] Location(x=-166.628555, y=-4.045103, z=0.035622)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:13.83,DT:41.86
I0901 16:26:33.756045 139765408065280 fitness_value_extractor.py:131] Location(x=-166.879852, y=-4.044491, z=0.035626)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:13.60,DT:41.77
I0901 16:26:34.198332 139765408065280 fitness_value_extractor.py:131] Location(x=-167.112747, y=-4.043925, z=0.034960)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:13.39,DT:41.69
I0901 16:26:34.878166 139765408065280 fitness_value_extractor.py:131] Location(x=-167.327927, y=-4.043401, z=0.034701)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:13.20,DT:41.62
I0901 16:26:35.305488 139765408065280 fitness_value_extractor.py:131] Location(x=-167.525497, y=-4.042920, z=0.034640)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:13.02,DT:41.56
I0901 16:26:35.776118 139765408065280 fitness_value_extractor.py:131] Location(x=-167.708282, y=-4.042475, z=0.034620)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:12.85,DT:41.50
I0901 16:26:36.219698 139765408065280 fitness_value_extractor.py:131] Location(x=-167.884476, y=-4.042046, z=0.034508)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:12.70,DT:41.44
I0901 16:26:36.593119 139765902972672 fitness_value_extractor.py:131] Location(x=-168.060120, y=-4.041618, z=0.034315)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:12.54,DT:41.39
I0901 16:26:37.100748 139765902972672 fitness_value_extractor.py:131] Location(x=-168.235641, y=-4.041191, z=0.034118)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:12.38,DT:41.33
I0901 16:26:37.582991 139765902972672 fitness_value_extractor.py:131] Location(x=-168.411011, y=-4.040765, z=0.033949)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:12.23,DT:41.28
I0901 16:26:38.076808 139765902972672 fitness_value_extractor.py:131] Location(x=-168.586227, y=-4.040339, z=0.033814)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:12.07,DT:41.23
I0901 16:26:38.449944 139765902972672 fitness_value_extractor.py:131] Location(x=-168.761307, y=-4.039913, z=0.033711)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:11.92,DT:41.17
I0901 16:26:39.033221 139765902972672 fitness_value_extractor.py:131] Location(x=-168.935135, y=-4.039490, z=0.033658)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:11.77,DT:41.12
I0901 16:26:39.485090 139765902972672 fitness_value_extractor.py:131] Location(x=-169.098297, y=-4.039093, z=0.033755)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:11.62,DT:41.07
I0901 16:26:39.882969 139765902972672 fitness_value_extractor.py:131] Location(x=-169.253708, y=-4.038716, z=0.033835)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:11.49,DT:41.03
I0901 16:26:40.241778 139765902972672 fitness_value_extractor.py:131] Location(x=-169.406662, y=-4.038344, z=0.033827)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:11.36,DT:40.98
I0901 16:26:40.708375 139765902972672 fitness_value_extractor.py:131] Location(x=-169.561142, y=-4.037968, z=0.033738)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:11.22,DT:40.94
I0901 16:26:41.093370 139765902972672 fitness_value_extractor.py:131] Location(x=-169.718781, y=-4.037586, z=0.033618)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:11.09,DT:40.89
I0901 16:26:41.534059 139765902972672 fitness_value_extractor.py:131] Location(x=-169.877197, y=-4.037201, z=0.033542)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.95,DT:40.85
I0901 16:26:41.932922 139765408065280 fitness_value_extractor.py:131] Location(x=-170.031326, y=-4.036827, z=0.033563)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.82,DT:40.80
I0901 16:26:42.385843 139765408065280 fitness_value_extractor.py:131] Location(x=-170.176422, y=-4.036474, z=0.033677)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.70,DT:40.76
I0901 16:26:42.772642 139765408065280 fitness_value_extractor.py:131] Location(x=-170.310013, y=-4.036150, z=0.033837)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.58,DT:40.73
I0901 16:26:43.405330 139765408065280 fitness_value_extractor.py:131] Location(x=-170.430725, y=-4.035857, z=0.034008)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.48,DT:40.69
I0901 16:26:43.811292 139765408065280 fitness_value_extractor.py:131] Location(x=-170.537628, y=-4.035597, z=0.034170)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.39,DT:40.66
I0901 16:26:44.210085 139765408065280 fitness_value_extractor.py:131] Location(x=-170.630219, y=-4.035372, z=0.034311)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.31,DT:40.64
I0901 16:26:44.626791 139765408065280 fitness_value_extractor.py:131] Location(x=-170.708160, y=-4.035184, z=0.034428)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.25,DT:40.62
I0901 16:26:44.991009 139765408065280 fitness_value_extractor.py:131] Location(x=-170.769180, y=-4.034953, z=0.034567)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.20,DT:40.60
I0901 16:26:45.535937 139765408065280 fitness_value_extractor.py:131] Location(x=-170.801849, y=-4.034870, z=0.034838)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.17,DT:40.59
I0901 16:26:45.906616 139765936543488 fitness_value_extractor.py:131] Location(x=-170.809433, y=-4.034858, z=0.035062)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.17,DT:40.59
I0901 16:26:46.304261 139765936543488 fitness_value_extractor.py:131] Location(x=-170.809509, y=-4.034858, z=0.034964)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.17,DT:40.59
I0901 16:26:46.704525 139765936543488 fitness_value_extractor.py:131] Location(x=-170.809662, y=-4.034857, z=0.034705)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.17,DT:40.59
I0901 16:26:47.108694 139765936543488 fitness_value_extractor.py:131] Location(x=-170.810516, y=-4.034855, z=0.034414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.16,DT:40.59
I0901 16:26:47.528169 139765936543488 fitness_value_extractor.py:131] Location(x=-170.812912, y=-4.034850, z=0.034150)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.16,DT:40.59
I0901 16:26:47.888469 139765936543488 fitness_value_extractor.py:131] Location(x=-170.815308, y=-4.034844, z=0.033951)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.16,DT:40.59
I0901 16:26:48.294527 139765936543488 fitness_value_extractor.py:131] Location(x=-170.818039, y=-4.034838, z=0.033797)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.16,DT:40.59
I0901 16:26:48.694318 139765936543488 fitness_value_extractor.py:131] Location(x=-170.821167, y=-4.034831, z=0.033683)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.16,DT:40.59
I0901 16:26:49.037801 139765936543488 fitness_value_extractor.py:131] Location(x=-170.827301, y=-4.034817, z=0.033550)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.15,DT:40.59
I0901 16:26:49.499375 139765936543488 fitness_value_extractor.py:131] Location(x=-170.840897, y=-4.034785, z=0.033377)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.14,DT:40.58
I0901 16:26:49.881744 139765936543488 fitness_value_extractor.py:131] Location(x=-170.860229, y=-4.034843, z=0.033250)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.12,DT:40.58
I0901 16:26:50.394199 139765936543488 fitness_value_extractor.py:131] Location(x=-170.868134, y=-4.034793, z=0.033440)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.12,DT:40.58
I0901 16:26:50.780170 139765936543488 fitness_value_extractor.py:131] Location(x=-170.868057, y=-4.034794, z=0.033570)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.12,DT:40.58
I0901 16:26:51.284276 139765936543488 fitness_value_extractor.py:131] Location(x=-170.868042, y=-4.034794, z=0.033592)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.12,DT:40.58
I0901 16:26:51.857306 139765936543488 fitness_value_extractor.py:131] Location(x=-170.870331, y=-4.034789, z=0.033545)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.12,DT:40.57
I0901 16:26:52.396911 139765936543488 fitness_value_extractor.py:131] Location(x=-170.872726, y=-4.034782, z=0.033507)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.11,DT:40.57
I0901 16:26:52.830396 139765936543488 fitness_value_extractor.py:131] Location(x=-170.875305, y=-4.034777, z=0.033479)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.11,DT:40.57
I0901 16:26:53.290153 139765936543488 fitness_value_extractor.py:131] Location(x=-170.878296, y=-4.034770, z=0.033454)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.11,DT:40.57
I0901 16:26:53.805588 139765936543488 fitness_value_extractor.py:131] Location(x=-170.881592, y=-4.034761, z=0.033435)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.11,DT:40.57
I0901 16:26:54.272969 139765936543488 fitness_value_extractor.py:131] Location(x=-170.885941, y=-4.034764, z=0.033409)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.10,DT:40.57
I0901 16:26:54.678745 139765936543488 fitness_value_extractor.py:131] Location(x=-170.894257, y=-4.034894, z=0.033346)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.10,DT:40.57
I0901 16:26:55.111825 139765936543488 fitness_value_extractor.py:131] Location(x=-170.906815, y=-4.034732, z=0.033273)>DfC:0.0000,DfV:1000.00,DfP:998.80,DfM:10.08,DT:40.56
I0901 16:26:55.650076 139765936543488 fitness_value_extractor.py:131] Location(x=-170.909775, y=-4.034848, z=0.033434)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.08,DT:40.56
I0901 16:26:56.168094 139765936543488 fitness_value_extractor.py:131] Location(x=-170.909744, y=-4.034849, z=0.033502)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.08,DT:40.56
I0901 16:26:56.649889 139765936543488 fitness_value_extractor.py:131] Location(x=-170.911209, y=-4.034845, z=0.033489)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.08,DT:40.56
I0901 16:26:57.072535 139765936543488 fitness_value_extractor.py:131] Location(x=-170.913376, y=-4.034839, z=0.033469)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.08,DT:40.56
I0901 16:26:57.496487 139765936543488 fitness_value_extractor.py:131] Location(x=-170.915726, y=-4.034833, z=0.033451)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.08,DT:40.56
I0901 16:26:57.939467 139765936543488 fitness_value_extractor.py:131] Location(x=-170.918137, y=-4.034827, z=0.033440)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.08,DT:40.56
I0901 16:26:58.415748 139765936543488 fitness_value_extractor.py:131] Location(x=-170.920837, y=-4.034820, z=0.033428)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.07,DT:40.56
I0901 16:26:58.879796 139765936543488 fitness_value_extractor.py:131] Location(x=-170.923645, y=-4.034812, z=0.033421)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.07,DT:40.56
I0901 16:26:59.278449 139765936543488 fitness_value_extractor.py:131] Location(x=-170.926758, y=-4.034805, z=0.033413)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.07,DT:40.56
I0901 16:26:59.714694 139765936543488 fitness_value_extractor.py:131] Location(x=-170.929993, y=-4.034796, z=0.033410)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.07,DT:40.56
I0901 16:27:00.172287 139765936543488 fitness_value_extractor.py:131] Location(x=-170.933472, y=-4.034787, z=0.033406)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.06,DT:40.56
I0901 16:27:00.565319 139765936543488 fitness_value_extractor.py:131] Location(x=-170.936981, y=-4.034778, z=0.033406)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.06,DT:40.56
I0901 16:27:00.966728 139765936543488 fitness_value_extractor.py:131] Location(x=-170.940674, y=-4.034768, z=0.033405)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.06,DT:40.56
I0901 16:27:01.425943 139765936543488 fitness_value_extractor.py:131] Location(x=-170.944336, y=-4.034759, z=0.033407)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.05,DT:40.55
I0901 16:27:01.929943 139765936543488 fitness_value_extractor.py:131] Location(x=-170.948059, y=-4.034749, z=0.033408)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.05,DT:40.55
I0901 16:27:02.331070 139765936543488 fitness_value_extractor.py:131] Location(x=-170.951721, y=-4.034739, z=0.033411)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.05,DT:40.55
I0901 16:27:02.823407 139765936543488 fitness_value_extractor.py:131] Location(x=-170.955429, y=-4.034729, z=0.033412)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:10.04,DT:40.55
I0901 16:27:03.325012 139765902972672 fitness_value_extractor.py:131] Location(x=-170.959015, y=-4.034720, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.04,DT:40.55
I0901 16:27:03.842516 139765902972672 fitness_value_extractor.py:131] Location(x=-170.962631, y=-4.034710, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.04,DT:40.55
I0901 16:27:04.361708 139765936543488 fitness_value_extractor.py:131] Location(x=-170.966125, y=-4.034701, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.04,DT:40.55
I0901 16:27:04.925851 139765936543488 fitness_value_extractor.py:131] Location(x=-170.969650, y=-4.034692, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.03,DT:40.55
I0901 16:27:05.508208 139765936543488 fitness_value_extractor.py:131] Location(x=-170.973022, y=-4.034683, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.03,DT:40.55
I0901 16:27:05.907885 139765936543488 fitness_value_extractor.py:131] Location(x=-170.976425, y=-4.034675, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.03,DT:40.55
I0901 16:27:06.436505 139765936543488 fitness_value_extractor.py:131] Location(x=-170.979691, y=-4.034666, z=0.033422)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.02,DT:40.55
I0901 16:27:06.837841 139765936543488 fitness_value_extractor.py:131] Location(x=-170.982941, y=-4.034657, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.02,DT:40.54
I0901 16:27:07.227533 139765936543488 fitness_value_extractor.py:131] Location(x=-170.986069, y=-4.034649, z=0.033423)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.02,DT:40.54
I0901 16:27:07.661139 139765936543488 fitness_value_extractor.py:131] Location(x=-170.989212, y=-4.034641, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.02,DT:40.54
I0901 16:27:08.044348 139765936543488 fitness_value_extractor.py:131] Location(x=-170.992218, y=-4.034633, z=0.033423)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.01,DT:40.54
I0901 16:27:08.455199 139765936543488 fitness_value_extractor.py:131] Location(x=-170.995255, y=-4.034625, z=0.033422)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.01,DT:40.54
I0901 16:27:08.857226 139765936543488 fitness_value_extractor.py:131] Location(x=-170.998154, y=-4.034617, z=0.033423)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.01,DT:40.54
I0901 16:27:09.253699 139765936543488 fitness_value_extractor.py:131] Location(x=-171.001083, y=-4.034610, z=0.033422)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.01,DT:40.54
I0901 16:27:09.739738 139765936543488 fitness_value_extractor.py:131] Location(x=-171.003876, y=-4.034602, z=0.033423)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.00,DT:40.54
I0901 16:27:10.160594 139765936543488 fitness_value_extractor.py:131] Location(x=-171.006714, y=-4.034595, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.00,DT:40.54
I0901 16:27:10.524450 139765936543488 fitness_value_extractor.py:131] Location(x=-171.009430, y=-4.034588, z=0.033423)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.00,DT:40.54
I0901 16:27:10.923292 139765936543488 fitness_value_extractor.py:131] Location(x=-171.012161, y=-4.034581, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.00,DT:40.54
I0901 16:27:11.403761 139765919758080 fitness_value_extractor.py:131] Location(x=-171.014755, y=-4.034574, z=0.033422)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:10.00,DT:40.54
I0901 16:27:11.885454 139765919758080 fitness_value_extractor.py:131] Location(x=-171.017395, y=-4.034567, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.99,DT:40.54
I0901 16:27:12.354970 139765919758080 fitness_value_extractor.py:131] Location(x=-171.019913, y=-4.034561, z=0.033422)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.99,DT:40.54
I0901 16:27:12.851489 139765919758080 fitness_value_extractor.py:131] Location(x=-171.022476, y=-4.034554, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.99,DT:40.53
I0901 16:27:13.194301 139765919758080 fitness_value_extractor.py:131] Location(x=-171.024902, y=-4.034547, z=0.033422)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.99,DT:40.53
I0901 16:27:13.525562 139765919758080 fitness_value_extractor.py:131] Location(x=-171.027359, y=-4.034541, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.99,DT:40.53
I0901 16:27:14.026914 139765919758080 fitness_value_extractor.py:131] Location(x=-171.029709, y=-4.034535, z=0.033422)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.98,DT:40.53
I0901 16:27:14.399994 139765919758080 fitness_value_extractor.py:131] Location(x=-171.032089, y=-4.034529, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.98,DT:40.53
I0901 16:27:14.857613 139765919758080 fitness_value_extractor.py:131] Location(x=-171.034348, y=-4.034523, z=0.033422)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.98,DT:40.53
I0901 16:27:15.518061 139765919758080 fitness_value_extractor.py:131] Location(x=-171.036652, y=-4.034517, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.98,DT:40.53
I0901 16:27:16.222939 139765919758080 fitness_value_extractor.py:131] Location(x=-171.038849, y=-4.034511, z=0.033422)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.98,DT:40.53
I0901 16:27:16.695633 139765919758080 fitness_value_extractor.py:131] Location(x=-171.041077, y=-4.034505, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.97,DT:40.53
I0901 16:27:17.113383 139765919758080 fitness_value_extractor.py:131] Location(x=-171.043198, y=-4.034500, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.97,DT:40.53
I0901 16:27:17.491593 139765919758080 fitness_value_extractor.py:131] Location(x=-171.045349, y=-4.034494, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.97,DT:40.53
I0901 16:27:17.945087 139765919758080 fitness_value_extractor.py:131] Location(x=-171.047394, y=-4.034488, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.97,DT:40.53
I0901 16:27:18.344217 139765919758080 fitness_value_extractor.py:131] Location(x=-171.049484, y=-4.034483, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.97,DT:40.53
I0901 16:27:18.734344 139765919758080 fitness_value_extractor.py:131] Location(x=-171.051468, y=-4.034478, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.97,DT:40.53
I0901 16:27:19.286943 139765919758080 fitness_value_extractor.py:131] Location(x=-171.053497, y=-4.034473, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.96,DT:40.53
I0901 16:27:19.993783 139765919758080 fitness_value_extractor.py:131] Location(x=-171.055405, y=-4.034468, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.96,DT:40.53
I0901 16:27:20.347350 139765919758080 fitness_value_extractor.py:131] Location(x=-171.057373, y=-4.034463, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.96,DT:40.53
I0901 16:27:20.843217 139765919758080 fitness_value_extractor.py:131] Location(x=-171.059219, y=-4.034458, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.96,DT:40.52
I0901 16:27:21.304242 139764267214592 fitness_value_extractor.py:131] Location(x=-171.061127, y=-4.034453, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.96,DT:40.52
I0901 16:27:21.819298 139764267214592 fitness_value_extractor.py:131] Location(x=-171.062912, y=-4.034448, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.96,DT:40.52
I0901 16:27:22.340113 139765919758080 fitness_value_extractor.py:131] Location(x=-171.064743, y=-4.034443, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.95,DT:40.52
I0901 16:27:22.726559 139765919758080 fitness_value_extractor.py:131] Location(x=-171.066467, y=-4.034439, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.95,DT:40.52
I0901 16:27:23.166271 139765408065280 fitness_value_extractor.py:131] Location(x=-171.068253, y=-4.034434, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.95,DT:40.52
I0901 16:27:23.615906 139765408065280 fitness_value_extractor.py:131] Location(x=-171.069916, y=-4.034430, z=0.033421)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.95,DT:40.52
I0901 16:27:24.076924 139765408065280 fitness_value_extractor.py:131] Location(x=-171.071655, y=-4.034425, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.95,DT:40.52
I0901 16:27:24.541855 139765408065280 fitness_value_extractor.py:131] Location(x=-171.073257, y=-4.034421, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.95,DT:40.52
I0901 16:27:25.012283 139765408065280 fitness_value_extractor.py:131] Location(x=-171.074936, y=-4.034417, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.95,DT:40.52
I0901 16:27:25.291261 139765408065280 fitness_value_extractor.py:131] Location(x=-171.076508, y=-4.034413, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.95,DT:40.52
I0901 16:27:25.764355 139765919758080 fitness_value_extractor.py:131] Location(x=-171.078125, y=-4.034409, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.94,DT:40.52
I0901 16:27:26.214182 139764267214592 fitness_value_extractor.py:131] Location(x=-171.079620, y=-4.034405, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.94,DT:40.52
I0901 16:27:26.707402 139765408065280 fitness_value_extractor.py:131] Location(x=-171.081192, y=-4.034400, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.94,DT:40.52
I0901 16:27:27.228090 139765408065280 fitness_value_extractor.py:131] Location(x=-171.082672, y=-4.034397, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.94,DT:40.52
I0901 16:27:27.872131 139765408065280 fitness_value_extractor.py:131] Location(x=-171.084183, y=-4.034392, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.94,DT:40.52
I0901 16:27:28.468167 139765408065280 fitness_value_extractor.py:131] Location(x=-171.085602, y=-4.034389, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.94,DT:40.52
I0901 16:27:29.043370 139765408065280 fitness_value_extractor.py:131] Location(x=-171.087082, y=-4.034385, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.94,DT:40.52
I0901 16:27:29.498538 139765408065280 fitness_value_extractor.py:131] Location(x=-171.088455, y=-4.034381, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.94,DT:40.52
I0901 16:27:29.856032 139765408065280 fitness_value_extractor.py:131] Location(x=-171.089905, y=-4.034378, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.93,DT:40.52
I0901 16:27:30.243471 139765408065280 fitness_value_extractor.py:131] Location(x=-171.091232, y=-4.034374, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.93,DT:40.52
I0901 16:27:30.594905 139765408065280 fitness_value_extractor.py:131] Location(x=-171.092621, y=-4.034370, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.93,DT:40.52
I0901 16:27:31.029013 139765408065280 fitness_value_extractor.py:131] Location(x=-171.093918, y=-4.034367, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.93,DT:40.52
I0901 16:27:31.454752 139765408065280 fitness_value_extractor.py:131] Location(x=-171.095245, y=-4.034364, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.93,DT:40.52
I0901 16:27:31.962544 139765408065280 fitness_value_extractor.py:131] Location(x=-171.096497, y=-4.034361, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.93,DT:40.52
I0901 16:27:32.464642 139765408065280 fitness_value_extractor.py:131] Location(x=-171.097809, y=-4.034358, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.93,DT:40.51
I0901 16:27:32.965430 139765408065280 fitness_value_extractor.py:131] Location(x=-171.098999, y=-4.034355, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.93,DT:40.51
I0901 16:27:33.333737 139765408065280 fitness_value_extractor.py:131] Location(x=-171.100266, y=-4.034351, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.93,DT:40.51
I0901 16:27:33.906611 139765408065280 fitness_value_extractor.py:131] Location(x=-171.101456, y=-4.034348, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:34.462033 139765408065280 fitness_value_extractor.py:131] Location(x=-171.102676, y=-4.034345, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:34.987055 139765408065280 fitness_value_extractor.py:131] Location(x=-171.103806, y=-4.034342, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:35.422130 139765408065280 fitness_value_extractor.py:131] Location(x=-171.105011, y=-4.034338, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:35.848922 139765408065280 fitness_value_extractor.py:131] Location(x=-171.106094, y=-4.034335, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:36.354868 139765408065280 fitness_value_extractor.py:131] Location(x=-171.107239, y=-4.034332, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:36.777863 139765408065280 fitness_value_extractor.py:131] Location(x=-171.108322, y=-4.034329, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:37.263953 139765408065280 fitness_value_extractor.py:131] Location(x=-171.109451, y=-4.034327, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:37.747923 139765408065280 fitness_value_extractor.py:131] Location(x=-171.110458, y=-4.034324, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:38.247786 139765408065280 fitness_value_extractor.py:131] Location(x=-171.111557, y=-4.034321, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:38.712530 139765408065280 fitness_value_extractor.py:131] Location(x=-171.112579, y=-4.034318, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.92,DT:40.51
I0901 16:27:39.126525 139765408065280 fitness_value_extractor.py:131] Location(x=-171.113617, y=-4.034316, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:39.608323 139765408065280 fitness_value_extractor.py:131] Location(x=-171.114563, y=-4.034313, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:40.082818 139765408065280 fitness_value_extractor.py:131] Location(x=-171.115601, y=-4.034310, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:40.528978 139765408065280 fitness_value_extractor.py:131] Location(x=-171.116562, y=-4.034308, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:40.968225 139765408065280 fitness_value_extractor.py:131] Location(x=-171.117538, y=-4.034305, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:41.472683 139765408065280 fitness_value_extractor.py:131] Location(x=-171.118439, y=-4.034303, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:41.833835 139765408065280 fitness_value_extractor.py:131] Location(x=-171.119415, y=-4.034301, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:42.359209 139765408065280 fitness_value_extractor.py:131] Location(x=-171.120316, y=-4.034298, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:42.817241 139765408065280 fitness_value_extractor.py:131] Location(x=-171.121231, y=-4.034296, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:43.232447 139765408065280 fitness_value_extractor.py:131] Location(x=-171.122070, y=-4.034294, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:43.742619 139765408065280 fitness_value_extractor.py:131] Location(x=-171.122986, y=-4.034292, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:44.251283 139765408065280 fitness_value_extractor.py:131] Location(x=-171.123825, y=-4.034289, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:44.704538 139765408065280 fitness_value_extractor.py:131] Location(x=-171.124725, y=-4.034287, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.91,DT:40.51
I0901 16:27:45.180331 139765408065280 fitness_value_extractor.py:131] Location(x=-171.125504, y=-4.034285, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:45.771037 139765408065280 fitness_value_extractor.py:131] Location(x=-171.126358, y=-4.034283, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:46.130788 139765408065280 fitness_value_extractor.py:131] Location(x=-171.127151, y=-4.034280, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:46.580095 139765408065280 fitness_value_extractor.py:131] Location(x=-171.128006, y=-4.034278, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:46.953278 139765408065280 fitness_value_extractor.py:131] Location(x=-171.128754, y=-4.034276, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:47.341486 139765408065280 fitness_value_extractor.py:131] Location(x=-171.129547, y=-4.034273, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:47.725218 139765408065280 fitness_value_extractor.py:131] Location(x=-171.130264, y=-4.034271, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:48.186511 139765408065280 fitness_value_extractor.py:131] Location(x=-171.131073, y=-4.034270, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:48.599107 139765408065280 fitness_value_extractor.py:131] Location(x=-171.131790, y=-4.034268, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:49.116935 139765408065280 fitness_value_extractor.py:131] Location(x=-171.132553, y=-4.034266, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:49.679113 139765408065280 fitness_value_extractor.py:131] Location(x=-171.133224, y=-4.034264, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:50.017746 139765408065280 fitness_value_extractor.py:131] Location(x=-171.133957, y=-4.034262, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:50.414010 139765902972672 fitness_value_extractor.py:131] Location(x=-171.134628, y=-4.034260, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:50.946444 139765902972672 fitness_value_extractor.py:131] Location(x=-171.135361, y=-4.034259, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.51
I0901 16:27:51.349076 139765902972672 fitness_value_extractor.py:131] Location(x=-171.136032, y=-4.034257, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.50
I0901 16:27:51.798372 139765902972672 fitness_value_extractor.py:131] Location(x=-171.136719, y=-4.034255, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.50
I0901 16:27:52.384037 139765902972672 fitness_value_extractor.py:131] Location(x=-171.137314, y=-4.034253, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.90,DT:40.50
I0901 16:27:52.943223 139765902972672 fitness_value_extractor.py:131] Location(x=-171.138000, y=-4.034251, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:53.568897 139765902972672 fitness_value_extractor.py:131] Location(x=-171.138611, y=-4.034250, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:53.978364 139765902972672 fitness_value_extractor.py:131] Location(x=-171.139297, y=-4.034248, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:54.321346 139764267214592 fitness_value_extractor.py:131] Location(x=-171.139893, y=-4.034247, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:54.797920 139764267214592 fitness_value_extractor.py:131] Location(x=-171.140518, y=-4.034245, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:55.227828 139764267214592 fitness_value_extractor.py:131] Location(x=-171.141068, y=-4.034244, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:55.631322 139764267214592 fitness_value_extractor.py:131] Location(x=-171.141693, y=-4.034243, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:56.106671 139764267214592 fitness_value_extractor.py:131] Location(x=-171.142242, y=-4.034242, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:56.566919 139764267214592 fitness_value_extractor.py:131] Location(x=-171.142868, y=-4.034240, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:57.011853 139764267214592 fitness_value_extractor.py:131] Location(x=-171.143417, y=-4.034239, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:57.509206 139765936543488 fitness_value_extractor.py:131] Location(x=-171.144012, y=-4.034237, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:58.028838 139765936543488 fitness_value_extractor.py:131] Location(x=-171.144501, y=-4.034236, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:58.414988 139765919758080 fitness_value_extractor.py:131] Location(x=-171.145081, y=-4.034235, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:58.820960 139765919758080 fitness_value_extractor.py:131] Location(x=-171.145569, y=-4.034233, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:59.277161 139765936543488 fitness_value_extractor.py:131] Location(x=-171.146133, y=-4.034232, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:27:59.770491 139765936543488 fitness_value_extractor.py:131] Location(x=-171.146622, y=-4.034231, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:28:00.259649 139765936543488 fitness_value_extractor.py:131] Location(x=-171.147186, y=-4.034229, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:28:00.657712 139765936543488 fitness_value_extractor.py:131] Location(x=-171.147675, y=-4.034228, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:28:01.250205 139765936543488 fitness_value_extractor.py:131] Location(x=-171.148224, y=-4.034226, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:28:01.730088 139765936543488 fitness_value_extractor.py:131] Location(x=-171.148651, y=-4.034225, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:28:02.077786 139765936543488 fitness_value_extractor.py:131] Location(x=-171.149155, y=-4.034224, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:28:02.577672 139765936543488 fitness_value_extractor.py:131] Location(x=-171.149582, y=-4.034222, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.89,DT:40.50
I0901 16:28:02.986447 139765408065280 fitness_value_extractor.py:131] Location(x=-171.150101, y=-4.034221, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:03.379237 139765408065280 fitness_value_extractor.py:131] Location(x=-171.150528, y=-4.034220, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:03.900517 139765408065280 fitness_value_extractor.py:131] Location(x=-171.151031, y=-4.034218, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:04.376188 139765408065280 fitness_value_extractor.py:131] Location(x=-171.151459, y=-4.034217, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:04.830981 139765408065280 fitness_value_extractor.py:131] Location(x=-171.151947, y=-4.034215, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:05.296011 139765408065280 fitness_value_extractor.py:131] Location(x=-171.152344, y=-4.034214, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:05.713692 139765408065280 fitness_value_extractor.py:131] Location(x=-171.152786, y=-4.034213, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:06.117093 139765408065280 fitness_value_extractor.py:131] Location(x=-171.153168, y=-4.034212, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:06.529031 139765408065280 fitness_value_extractor.py:131] Location(x=-171.153610, y=-4.034210, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:06.919734 139765408065280 fitness_value_extractor.py:131] Location(x=-171.153976, y=-4.034209, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:07.438199 139765408065280 fitness_value_extractor.py:131] Location(x=-171.154434, y=-4.034207, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:07.902192 139765408065280 fitness_value_extractor.py:131] Location(x=-171.154800, y=-4.034206, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:08.319688 139765408065280 fitness_value_extractor.py:131] Location(x=-171.155243, y=-4.034205, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:08.817775 139765408065280 fitness_value_extractor.py:131] Location(x=-171.155624, y=-4.034204, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:09.228611 139765408065280 fitness_value_extractor.py:131] Location(x=-171.156052, y=-4.034204, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:09.599409 139765408065280 fitness_value_extractor.py:131] Location(x=-171.156357, y=-4.034203, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:10.133518 139765408065280 fitness_value_extractor.py:131] Location(x=-171.156754, y=-4.034202, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:10.520937 139765408065280 fitness_value_extractor.py:131] Location(x=-171.157074, y=-4.034201, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:11.013365 139765408065280 fitness_value_extractor.py:131] Location(x=-171.157455, y=-4.034200, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:11.424084 139765408065280 fitness_value_extractor.py:131] Location(x=-171.157776, y=-4.034199, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:11.942791 139764267214592 fitness_value_extractor.py:131] Location(x=-171.158157, y=-4.034198, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:12.294122 139764267214592 fitness_value_extractor.py:131] Location(x=-171.158478, y=-4.034197, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:12.697283 139764267214592 fitness_value_extractor.py:131] Location(x=-171.158707, y=-4.034197, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:13.092046 139764267214592 fitness_value_extractor.py:131] Location(x=-171.158829, y=-4.034196, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:13.692744 139764267214592 fitness_value_extractor.py:131] Location(x=-171.159042, y=-4.034196, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:14.105208 139764267214592 fitness_value_extractor.py:131] Location(x=-171.159241, y=-4.034195, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:14.488284 139764267214592 fitness_value_extractor.py:131] Location(x=-171.159515, y=-4.034195, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:15.030484 139764267214592 fitness_value_extractor.py:131] Location(x=-171.159698, y=-4.034194, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:15.679376 139764267214592 fitness_value_extractor.py:131] Location(x=-171.160034, y=-4.034194, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:16.077450 139764267214592 fitness_value_extractor.py:131] Location(x=-171.160294, y=-4.034194, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:16.586941 139764267214592 fitness_value_extractor.py:131] Location(x=-171.160294, y=-4.034194, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:16.995844 139764267214592 fitness_value_extractor.py:131] Location(x=-171.160400, y=-4.034194, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:17.471125 139765919758080 fitness_value_extractor.py:131] Location(x=-171.160461, y=-4.034194, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:18.032622 139765919758080 fitness_value_extractor.py:131] Location(x=-171.160507, y=-4.034194, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:18.506682 139765919758080 fitness_value_extractor.py:131] Location(x=-171.160675, y=-4.034193, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:19.005278 139765919758080 fitness_value_extractor.py:131] Location(x=-171.160812, y=-4.034193, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:19.380110 139765919758080 fitness_value_extractor.py:131] Location(x=-171.161072, y=-4.034192, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:19.773036 139765919758080 fitness_value_extractor.py:131] Location(x=-171.161270, y=-4.034191, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:20.265293 139765919758080 fitness_value_extractor.py:131] Location(x=-171.161560, y=-4.034191, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:20.923525 139765919758080 fitness_value_extractor.py:131] Location(x=-171.161652, y=-4.034190, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:21.450050 139765919758080 fitness_value_extractor.py:131] Location(x=-171.161865, y=-4.034190, z=0.033411)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:21.939128 139765919758080 fitness_value_extractor.py:131] Location(x=-171.162033, y=-4.034190, z=0.033412)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.88,DT:40.50
I0901 16:28:22.333336 139765919758080 fitness_value_extractor.py:131] Location(x=-171.162308, y=-4.034189, z=0.033412)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:23.016094 139765919758080 fitness_value_extractor.py:131] Location(x=-171.162491, y=-4.034189, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:23.429352 139765919758080 fitness_value_extractor.py:131] Location(x=-171.162811, y=-4.034188, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:23.916730 139765919758080 fitness_value_extractor.py:131] Location(x=-171.163055, y=-4.034188, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:24.383535 139765919758080 fitness_value_extractor.py:131] Location(x=-171.163391, y=-4.034187, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:24.750279 139765919758080 fitness_value_extractor.py:131] Location(x=-171.163391, y=-4.034187, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:25.236858 139765936543488 fitness_value_extractor.py:131] Location(x=-171.163391, y=-4.034187, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:25.802392 139765408065280 fitness_value_extractor.py:131] Location(x=-171.163391, y=-4.034187, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:26.305798 139765408065280 fitness_value_extractor.py:131] Location(x=-171.163513, y=-4.034187, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:26.686141 139765408065280 fitness_value_extractor.py:131] Location(x=-171.163589, y=-4.034187, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:27.024986 139765408065280 fitness_value_extractor.py:131] Location(x=-171.163788, y=-4.034186, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:27.414555 139765408065280 fitness_value_extractor.py:131] Location(x=-171.163925, y=-4.034186, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:27.843232 139765408065280 fitness_value_extractor.py:131] Location(x=-171.164154, y=-4.034185, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:28.295068 139765408065280 fitness_value_extractor.py:131] Location(x=-171.164154, y=-4.034185, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:28.859760 139765408065280 fitness_value_extractor.py:131] Location(x=-171.164490, y=-4.034184, z=0.033412)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:29.221371 139765408065280 fitness_value_extractor.py:131] Location(x=-171.164627, y=-4.034184, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:29.612561 139765408065280 fitness_value_extractor.py:131] Location(x=-171.164841, y=-4.034183, z=0.033412)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:30.141265 139765408065280 fitness_value_extractor.py:131] Location(x=-171.165039, y=-4.034183, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:30.637907 139765408065280 fitness_value_extractor.py:131] Location(x=-171.165314, y=-4.034183, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:31.108317 139765408065280 fitness_value_extractor.py:131] Location(x=-171.165497, y=-4.034182, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:31.676819 139765408065280 fitness_value_extractor.py:131] Location(x=-171.165771, y=-4.034182, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:32.033062 139765408065280 fitness_value_extractor.py:131] Location(x=-171.165970, y=-4.034181, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:32.477636 139765408065280 fitness_value_extractor.py:131] Location(x=-171.165939, y=-4.034182, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:32.854601 139765408065280 fitness_value_extractor.py:131] Location(x=-171.165878, y=-4.034182, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:33.340178 139765408065280 fitness_value_extractor.py:131] Location(x=-171.165955, y=-4.034182, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:33.811111 139765408065280 fitness_value_extractor.py:131] Location(x=-171.165985, y=-4.034181, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:34.314716 139765408065280 fitness_value_extractor.py:131] Location(x=-171.166153, y=-4.034181, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:34.736763 139765408065280 fitness_value_extractor.py:131] Location(x=-171.166245, y=-4.034180, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:35.282597 139765408065280 fitness_value_extractor.py:131] Location(x=-171.166458, y=-4.034180, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:35.720516 139765408065280 fitness_value_extractor.py:131] Location(x=-171.166595, y=-4.034179, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:36.143157 139765408065280 fitness_value_extractor.py:131] Location(x=-171.166779, y=-4.034179, z=0.033412)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:36.654542 139765408065280 fitness_value_extractor.py:131] Location(x=-171.166870, y=-4.034178, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:37.115605 139765408065280 fitness_value_extractor.py:131] Location(x=-171.167084, y=-4.034178, z=0.033412)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:37.724433 139765408065280 fitness_value_extractor.py:131] Location(x=-171.167221, y=-4.034177, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:38.208287 139765408065280 fitness_value_extractor.py:131] Location(x=-171.167435, y=-4.034177, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:38.635873 139765408065280 fitness_value_extractor.py:131] Location(x=-171.167587, y=-4.034176, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:39.137262 139765408065280 fitness_value_extractor.py:131] Location(x=-171.167862, y=-4.034176, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:39.606956 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168060, y=-4.034175, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:40.091402 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168060, y=-4.034175, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:40.572654 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168106, y=-4.034175, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:41.091983 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168121, y=-4.034175, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:41.491741 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168121, y=-4.034175, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:41.861828 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168213, y=-4.034175, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:42.440977 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168304, y=-4.034175, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:42.901031 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168457, y=-4.034174, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:43.293334 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168549, y=-4.034174, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:43.835701 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168762, y=-4.034173, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:44.310702 139765408065280 fitness_value_extractor.py:131] Location(x=-171.168839, y=-4.034173, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:44.743652 139765408065280 fitness_value_extractor.py:131] Location(x=-171.169006, y=-4.034172, z=0.033412)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:45.234573 139765919758080 fitness_value_extractor.py:131] Location(x=-171.169144, y=-4.034172, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:45.691853 139765919758080 fitness_value_extractor.py:131] Location(x=-171.169357, y=-4.034172, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:46.141654 139765919758080 fitness_value_extractor.py:131] Location(x=-171.169495, y=-4.034171, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:46.546415 139765919758080 fitness_value_extractor.py:131] Location(x=-171.169708, y=-4.034171, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:46.931643 139765919758080 fitness_value_extractor.py:131] Location(x=-171.169846, y=-4.034170, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:47.426784 139765919758080 fitness_value_extractor.py:131] Location(x=-171.170059, y=-4.034170, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:47.875324 139765919758080 fitness_value_extractor.py:131] Location(x=-171.169998, y=-4.034170, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:48.561307 139765919758080 fitness_value_extractor.py:131] Location(x=-171.169983, y=-4.034170, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:49.367589 139765919758080 fitness_value_extractor.py:131] Location(x=-171.169937, y=-4.034170, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:50.020887 139765919758080 fitness_value_extractor.py:131] Location(x=-171.169998, y=-4.034170, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:50.482263 139765919758080 fitness_value_extractor.py:131] Location(x=-171.170013, y=-4.034170, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:50.975672 139765919758080 fitness_value_extractor.py:131] Location(x=-171.170120, y=-4.034169, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:51.404058 139765919758080 fitness_value_extractor.py:131] Location(x=-171.170197, y=-4.034169, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:51.771116 139765919758080 fitness_value_extractor.py:131] Location(x=-171.170349, y=-4.034168, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:52.205251 139765919758080 fitness_value_extractor.py:131] Location(x=-171.170349, y=-4.034168, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:52.669715 139765919758080 fitness_value_extractor.py:131] Location(x=-171.170578, y=-4.034167, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:53.091656 139765919758080 fitness_value_extractor.py:131] Location(x=-171.170654, y=-4.034167, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:53.678503 139765919758080 fitness_value_extractor.py:131] Location(x=-171.170822, y=-4.034166, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:54.013076 139765928150784 fitness_value_extractor.py:131] Location(x=-171.170959, y=-4.034166, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:54.440348 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171173, y=-4.034165, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:54.852942 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171310, y=-4.034165, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:55.419386 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171524, y=-4.034164, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:55.974052 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171661, y=-4.034164, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:56.496134 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171600, y=-4.034164, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:57.006179 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171524, y=-4.034164, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:57.507486 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171555, y=-4.034164, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:58.011390 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171539, y=-4.034164, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:58.481313 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171631, y=-4.034164, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:58.879807 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171661, y=-4.034164, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:59.317552 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171799, y=-4.034163, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:28:59.723428 139765928150784 fitness_value_extractor.py:131] Location(x=-171.171875, y=-4.034163, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:00.177136 139765928150784 fitness_value_extractor.py:131] Location(x=-171.172028, y=-4.034162, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:00.678809 139765928150784 fitness_value_extractor.py:131] Location(x=-171.172104, y=-4.034162, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:01.008835 139765928150784 fitness_value_extractor.py:131] Location(x=-171.172256, y=-4.034161, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:01.476310 139765902972672 fitness_value_extractor.py:131] Location(x=-171.172333, y=-4.034161, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:01.992164 139765902972672 fitness_value_extractor.py:131] Location(x=-171.172501, y=-4.034160, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:02.405380 139765902972672 fitness_value_extractor.py:131] Location(x=-171.172577, y=-4.034160, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:02.930908 139765408065280 fitness_value_extractor.py:131] Location(x=-171.172729, y=-4.034160, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:03.500111 139765408065280 fitness_value_extractor.py:131] Location(x=-171.172806, y=-4.034159, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:03.805657 139765408065280 fitness_value_extractor.py:131] Location(x=-171.172806, y=-4.034159, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:04.209281 139765408065280 fitness_value_extractor.py:131] Location(x=-171.172470, y=-4.034160, z=0.033423)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:04.574669 139765408065280 fitness_value_extractor.py:131] Location(x=-171.172852, y=-4.034159, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:04.957451 139765928150784 fitness_value_extractor.py:131] Location(x=-171.172928, y=-4.034159, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:05.323694 139765919758080 fitness_value_extractor.py:131] Location(x=-171.172928, y=-4.034159, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:05.828534 139765919758080 fitness_value_extractor.py:131] Location(x=-171.172150, y=-4.034161, z=0.033428)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:06.356410 139765919758080 fitness_value_extractor.py:131] Location(x=-171.172073, y=-4.034161, z=0.033420)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:06.637367 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171967, y=-4.034162, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:07.035906 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171951, y=-4.034162, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:07.574217 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171906, y=-4.034162, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:07.953075 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171951, y=-4.034162, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:08.419902 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171936, y=-4.034162, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:08.847912 139765919758080 fitness_value_extractor.py:131] Location(x=-171.172028, y=-4.034162, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:09.301473 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171936, y=-4.034162, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:09.892985 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171906, y=-4.034162, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:10.322687 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171829, y=-4.034162, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:10.781294 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171875, y=-4.034162, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:11.226798 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171829, y=-4.034162, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:11.713118 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171936, y=-4.034162, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:12.107199 139765919758080 fitness_value_extractor.py:131] Location(x=-171.171951, y=-4.034162, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:12.493767 139765919758080 fitness_value_extractor.py:131] Location(x=-171.172043, y=-4.034162, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:12.931154 139764267214592 fitness_value_extractor.py:131] Location(x=-171.172043, y=-4.034162, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:13.462085 139764267214592 fitness_value_extractor.py:131] Location(x=-171.172241, y=-4.034161, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:13.840775 139764267214592 fitness_value_extractor.py:131] Location(x=-171.172318, y=-4.034160, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:14.312649 139765416457984 fitness_value_extractor.py:131] Location(x=-171.172470, y=-4.034160, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:14.704151 139765416457984 fitness_value_extractor.py:131] Location(x=-171.172562, y=-4.034160, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:15.049014 139765416457984 fitness_value_extractor.py:131] Location(x=-171.172714, y=-4.034159, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:15.486033 139765416457984 fitness_value_extractor.py:131] Location(x=-171.172791, y=-4.034159, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:15.962210 139765416457984 fitness_value_extractor.py:131] Location(x=-171.172943, y=-4.034158, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:16.433001 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173019, y=-4.034158, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:17.002634 139765902972672 fitness_value_extractor.py:131] Location(x=-171.172958, y=-4.034158, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:17.506637 139765902972672 fitness_value_extractor.py:131] Location(x=-171.172867, y=-4.034158, z=0.033419)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:17.932065 139765902972672 fitness_value_extractor.py:131] Location(x=-171.172913, y=-4.034158, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:18.531803 139765902972672 fitness_value_extractor.py:131] Location(x=-171.172867, y=-4.034158, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:19.046776 139765902972672 fitness_value_extractor.py:131] Location(x=-171.172943, y=-4.034158, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:19.441533 139765902972672 fitness_value_extractor.py:131] Location(x=-171.172958, y=-4.034158, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:19.837639 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173065, y=-4.034158, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:20.281357 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173080, y=-4.034157, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:20.843881 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173218, y=-4.034157, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:21.243659 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173294, y=-4.034156, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:21.661427 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173447, y=-4.034156, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:22.061033 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173538, y=-4.034155, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:22.541433 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173691, y=-4.034155, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:23.011786 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173767, y=-4.034154, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:23.447181 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173843, y=-4.034154, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:24.008375 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173340, y=-4.034156, z=0.033425)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:24.357727 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173584, y=-4.034155, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:24.762496 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173721, y=-4.034155, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:25.179816 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173828, y=-4.034155, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:25.559407 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173187, y=-4.034157, z=0.033426)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:26.001969 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173279, y=-4.034156, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:26.625219 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173294, y=-4.034155, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:27.120169 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173401, y=-4.034155, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:27.605043 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173416, y=-4.034154, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:28.074254 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173553, y=-4.034154, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:28.410120 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173630, y=-4.034153, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:28.877038 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173782, y=-4.034153, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:29.256890 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173706, y=-4.034153, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:29.836498 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173691, y=-4.034153, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:30.373952 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173615, y=-4.034153, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:30.789927 139764267214592 fitness_value_extractor.py:131] Location(x=-171.173645, y=-4.034153, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:31.168000 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173615, y=-4.034153, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:31.595844 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173691, y=-4.034153, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:32.088716 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173706, y=-4.034153, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:32.460379 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173798, y=-4.034153, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:32.889739 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173798, y=-4.034153, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:33.333665 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173996, y=-4.034153, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:33.826225 139765902972672 fitness_value_extractor.py:131] Location(x=-171.174072, y=-4.034153, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:34.361935 139765902972672 fitness_value_extractor.py:131] Location(x=-171.174133, y=-4.034153, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:34.785262 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173492, y=-4.034154, z=0.033426)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:35.284220 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173584, y=-4.034154, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:35.741415 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173615, y=-4.034153, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:36.137509 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173706, y=-4.034153, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:36.675731 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173721, y=-4.034153, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:37.059867 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173828, y=-4.034152, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:37.473287 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173859, y=-4.034152, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:37.916148 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173996, y=-4.034151, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:38.634552 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173920, y=-4.034152, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:39.136261 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173904, y=-4.034152, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:39.516810 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173828, y=-4.034152, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:39.940170 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173859, y=-4.034152, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:40.335389 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173828, y=-4.034152, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:40.994957 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173889, y=-4.034152, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:41.483245 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173904, y=-4.034152, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:41.914082 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173996, y=-4.034152, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:42.308027 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173996, y=-4.034152, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:42.733237 139765408065280 fitness_value_extractor.py:131] Location(x=-171.174194, y=-4.034151, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:43.159630 139765408065280 fitness_value_extractor.py:131] Location(x=-171.174271, y=-4.034150, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:43.683201 139765408065280 fitness_value_extractor.py:131] Location(x=-171.174332, y=-4.034150, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:44.173514 139765408065280 fitness_value_extractor.py:131] Location(x=-171.173645, y=-4.034152, z=0.033427)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:44.598530 139765902972672 fitness_value_extractor.py:131] Location(x=-171.173691, y=-4.034152, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:45.085340 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173645, y=-4.034152, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:45.586316 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173721, y=-4.034152, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:45.997417 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173752, y=-4.034152, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:46.561478 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173843, y=-4.034152, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:47.083699 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173859, y=-4.034151, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:47.545116 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173965, y=-4.034151, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:47.991185 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173859, y=-4.034151, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:48.617721 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173843, y=-4.034151, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:49.082801 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173767, y=-4.034151, z=0.033418)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:49.523506 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173798, y=-4.034151, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:49.833709 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173767, y=-4.034151, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:50.207263 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173828, y=-4.034151, z=0.033416)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:50.721135 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173843, y=-4.034151, z=0.033417)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:51.196283 139765416457984 fitness_value_extractor.py:131] Location(x=-171.173935, y=-4.034151, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:51.590584 139765928150784 fitness_value_extractor.py:131] Location(x=-171.173935, y=-4.034151, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.50
I0901 16:29:52.020806 139765928150784 fitness_value_extractor.py:131] Location(x=-171.174133, y=-4.034150, z=0.033413)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:52.464663 139765928150784 fitness_value_extractor.py:131] Location(x=-171.174210, y=-4.034150, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:52.958018 139765928150784 fitness_value_extractor.py:131] Location(x=-171.174377, y=-4.034150, z=0.033414)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.87,DT:40.49
I0901 16:29:53.579872 139765928150784 fitness_value_extractor.py:131] Location(x=-171.174515, y=-4.034149, z=0.033415)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.86,DT:40.49
I0901 16:29:54.108085 139765928150784 fitness_value_extractor.py:131] Location(x=-171.174896, y=-4.034149, z=0.033411)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.86,DT:40.49
I0901 16:29:54.895323 139765928150784 fitness_value_extractor.py:131] Location(x=-171.175568, y=-4.034146, z=0.033407)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.86,DT:40.49
I0901 16:29:55.633226 139765928150784 fitness_value_extractor.py:131] Location(x=-171.177261, y=-4.034142, z=0.033391)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.86,DT:40.49
I0901 16:29:56.285361 139765928150784 fitness_value_extractor.py:131] Location(x=-171.184372, y=-4.034125, z=0.033298)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.86,DT:40.49
I0901 16:29:56.711533 139765928150784 fitness_value_extractor.py:131] Location(x=-171.200790, y=-4.034085, z=0.033154)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.84,DT:40.49
I0901 16:29:57.095222 139765928150784 fitness_value_extractor.py:131] Location(x=-171.225662, y=-4.034025, z=0.033027)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.82,DT:40.48
I0901 16:29:57.485977 139765928150784 fitness_value_extractor.py:131] Location(x=-171.261887, y=-4.033937, z=0.032885)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.79,DT:40.47
I0901 16:29:57.933025 139765928150784 fitness_value_extractor.py:131] Location(x=-171.308960, y=-4.033827, z=0.032762)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.76,DT:40.46
I0901 16:29:58.334355 139765928150784 fitness_value_extractor.py:131] Location(x=-171.367691, y=-4.033649, z=0.032646)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.71,DT:40.45
I0901 16:29:58.714572 139765928150784 fitness_value_extractor.py:131] Location(x=-171.440842, y=-4.033480, z=0.032520)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.65,DT:40.43
I0901 16:29:59.128578 139765928150784 fitness_value_extractor.py:131] Location(x=-171.526825, y=-4.033272, z=0.032430)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.58,DT:40.40
I0901 16:29:59.472918 139765928150784 fitness_value_extractor.py:131] Location(x=-171.624649, y=-4.033034, z=0.032378)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.50,DT:40.38
I0901 16:29:59.856613 139765928150784 fitness_value_extractor.py:131] Location(x=-171.733627, y=-4.032768, z=0.032356)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.41,DT:40.35
I0901 16:30:00.198509 139765928150784 fitness_value_extractor.py:131] Location(x=-171.853333, y=-4.032475, z=0.032353)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.32,DT:40.32
I0901 16:30:00.595956 139765928150784 fitness_value_extractor.py:131] Location(x=-171.983505, y=-4.032158, z=0.032361)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.22,DT:40.29
I0901 16:30:01.113933 139765902972672 fitness_value_extractor.py:131] Location(x=-172.124023, y=-4.031816, z=0.032373)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:9.11,DT:40.26
I0901 16:30:01.646230 139765902972672 fitness_value_extractor.py:131] Location(x=-172.274750, y=-4.031448, z=0.032387)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:8.99,DT:40.22
I0901 16:30:02.095718 139765902972672 fitness_value_extractor.py:131] Location(x=-172.435638, y=-4.031056, z=0.032399)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:8.86,DT:40.18
I0901 16:30:02.581571 139765902972672 fitness_value_extractor.py:131] Location(x=-172.603897, y=-4.030645, z=0.032463)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:8.74,DT:40.14
I0901 16:30:03.091330 139765902972672 fitness_value_extractor.py:131] Location(x=-172.772324, y=-4.030233, z=0.032623)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:8.61,DT:40.10
I0901 16:30:03.460824 139765902972672 fitness_value_extractor.py:131] Location(x=-172.940598, y=-4.029821, z=0.032794)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:8.48,DT:40.07
I0901 16:30:03.839979 139765902972672 fitness_value_extractor.py:131] Location(x=-173.108765, y=-4.029411, z=0.032946)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:8.36,DT:40.03
I0901 16:30:04.236701 139765902972672 fitness_value_extractor.py:131] Location(x=-173.276855, y=-4.029001, z=0.033067)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:8.24,DT:39.99
I0901 16:30:04.717489 139765902972672 fitness_value_extractor.py:131] Location(x=-173.444855, y=-4.028590, z=0.033161)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:8.12,DT:39.95
I0901 16:30:05.084907 139765902972672 fitness_value_extractor.py:131] Location(x=-173.612747, y=-4.028180, z=0.033232)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:8.00,DT:39.92
I0901 16:30:05.550787 139765902972672 fitness_value_extractor.py:131] Location(x=-173.780518, y=-4.027771, z=0.033284)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:7.88,DT:39.88
I0901 16:30:05.967661 139765902972672 fitness_value_extractor.py:131] Location(x=-173.948242, y=-4.027360, z=0.033322)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:7.76,DT:39.85
I0901 16:30:06.457280 139765902972672 fitness_value_extractor.py:131] Location(x=-174.115829, y=-4.026950, z=0.033349)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:7.65,DT:39.81
I0901 16:30:06.978716 139765902972672 fitness_value_extractor.py:131] Location(x=-174.284271, y=-4.026538, z=0.033347)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:7.54,DT:39.78
I0901 16:30:07.548903 139765902972672 fitness_value_extractor.py:131] Location(x=-174.462219, y=-4.026103, z=0.033216)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:7.42,DT:39.74
I0901 16:30:07.988880 139765902972672 fitness_value_extractor.py:131] Location(x=-174.650986, y=-4.025641, z=0.033051)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:7.30,DT:39.71
I0901 16:30:08.495568 139765902972672 fitness_value_extractor.py:131] Location(x=-174.849960, y=-4.025154, z=0.032906)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:7.18,DT:39.67
I0901 16:30:08.883218 139765902972672 fitness_value_extractor.py:131] Location(x=-175.058701, y=-4.024642, z=0.032793)>DfC:0.0001,DfV:1000.00,DfP:998.80,DfM:7.06,DT:39.63
I0901 16:30:09.341454 139765902972672 fitness_value_extractor.py:131] Location(x=-175.276932, y=-4.024287, z=0.032712)>DfC:0.0002,DfV:1000.00,DfP:998.80,DfM:6.93,DT:39.59
I0901 16:30:09.888192 139765902972672 fitness_value_extractor.py:131] Location(x=-175.504410, y=-4.024042, z=0.032657)>DfC:0.0005,DfV:1000.00,DfP:998.80,DfM:6.80,DT:39.55
I0901 16:30:10.449699 139765902972672 fitness_value_extractor.py:131] Location(x=-175.741058, y=-4.023846, z=0.032620)>DfC:0.0009,DfV:1000.00,DfP:998.80,DfM:6.67,DT:39.50
I0901 16:30:10.966641 139765902972672 fitness_value_extractor.py:131] Location(x=-175.986710, y=-4.023656, z=0.032596)>DfC:0.0013,DfV:1000.00,DfP:998.80,DfM:6.55,DT:39.46
I0901 16:30:11.455566 139765902972672 fitness_value_extractor.py:131] Location(x=-176.241241, y=-4.025953, z=0.033209)>DfC:0.0042,DfV:1000.00,DfP:998.80,DfM:6.42,DT:39.42
I0901 16:30:11.967153 139765902972672 fitness_value_extractor.py:131] Location(x=-176.504608, y=-4.030185, z=0.033561)>DfC:0.0091,DfV:1000.00,DfP:998.80,DfM:6.30,DT:39.37
I0901 16:30:12.490394 139765902972672 fitness_value_extractor.py:131] Location(x=-176.776825, y=-4.035396, z=0.033603)>DfC:0.0150,DfV:1000.00,DfP:998.80,DfM:6.18,DT:39.32
I0901 16:30:12.993363 139765902972672 fitness_value_extractor.py:131] Location(x=-177.057587, y=-4.044117, z=0.033546)>DfC:0.0244,DfV:1000.00,DfP:998.80,DfM:6.07,DT:39.27
I0901 16:30:13.530655 139765902972672 fitness_value_extractor.py:131] Location(x=-177.345413, y=-4.062018, z=0.033490)>DfC:0.0430,DfV:1000.00,DfP:998.80,DfM:5.95,DT:39.21
I0901 16:30:14.110540 139765902972672 fitness_value_extractor.py:131] Location(x=-177.637619, y=-4.094905, z=0.033470)>DfC:0.0766,DfV:1000.00,DfP:998.80,DfM:5.83,DT:39.14
I0901 16:30:14.731472 139765902972672 fitness_value_extractor.py:131] Location(x=-177.935196, y=-4.139997, z=0.033518)>DfC:0.1229,DfV:1000.00,DfP:998.80,DfM:5.71,DT:39.05
I0901 16:30:15.523526 139765902972672 fitness_value_extractor.py:131] Location(x=-178.239502, y=-4.194813, z=0.033931)>DfC:0.1667,DfV:1000.00,DfP:998.80,DfM:5.60,DT:38.96
I0901 16:30:16.346785 139765902972672 fitness_value_extractor.py:131] Location(x=-178.547180, y=-4.264624, z=0.035165)>DfC:0.2244,DfV:1000.00,DfP:998.80,DfM:5.48,DT:38.85
I0901 16:30:16.900953 139765902972672 fitness_value_extractor.py:131] Location(x=-178.852814, y=-4.355026, z=0.037421)>DfC:0.3029,DfV:1000.00,DfP:998.80,DfM:5.36,DT:38.72
I0901 16:30:17.498957 139765902972672 fitness_value_extractor.py:131] Location(x=-179.158615, y=-4.463511, z=0.040750)>DfC:0.3112,DfV:1000.00,DfP:998.80,DfM:5.24,DT:38.58
I0901 16:30:17.962981 139765902972672 fitness_value_extractor.py:131] Location(x=-179.463165, y=-4.591540, z=0.044267)>DfC:0.3828,DfV:1000.00,DfP:998.80,DfM:5.11,DT:38.42
I0901 16:30:18.554813 139765902972672 fitness_value_extractor.py:131] Location(x=-179.768173, y=-4.736792, z=0.046656)>DfC:0.4079,DfV:1000.00,DfP:998.80,DfM:4.99,DT:38.25
I0901 16:30:19.080770 139765902972672 fitness_value_extractor.py:131] Location(x=-180.071518, y=-4.899555, z=0.047613)>DfC:0.4691,DfV:1000.00,DfP:998.80,DfM:4.87,DT:38.05
I0901 16:30:19.596065 139765902972672 fitness_value_extractor.py:131] Location(x=-180.373825, y=-5.080040, z=0.047871)>DfC:0.4962,DfV:1000.00,DfP:998.80,DfM:4.75,DT:37.85
I0901 16:30:19.999377 139765902972672 fitness_value_extractor.py:131] Location(x=-180.671967, y=-5.279728, z=0.048184)>DfC:0.5487,DfV:1000.00,DfP:998.80,DfM:4.64,DT:37.62
I0901 16:30:20.495529 139765902972672 fitness_value_extractor.py:131] Location(x=-180.966965, y=-5.497436, z=0.049060)>DfC:0.5708,DfV:1000.00,DfP:998.80,DfM:4.54,DT:37.38
I0901 16:30:20.984968 139765902972672 fitness_value_extractor.py:131] Location(x=-181.255249, y=-5.734381, z=0.050991)>DfC:0.6141,DfV:1000.00,DfP:998.80,DfM:4.44,DT:37.13
I0901 16:30:21.525081 139765902972672 fitness_value_extractor.py:131] Location(x=-181.537964, y=-5.989523, z=0.054022)>DfC:0.6251,DfV:1000.00,DfP:998.80,DfM:4.36,DT:36.85
I0901 16:30:22.087928 139765902972672 fitness_value_extractor.py:131] Location(x=-181.811554, y=-6.264239, z=0.056806)>DfC:0.6591,DfV:1000.00,DfP:998.80,DfM:4.29,DT:36.56
I0901 16:30:22.769996 139765902972672 fitness_value_extractor.py:131] Location(x=-182.077042, y=-6.558054, z=0.059787)>DfC:0.6550,DfV:1000.00,DfP:998.80,DfM:4.23,DT:36.25
I0901 16:30:23.387954 139765902972672 fitness_value_extractor.py:131] Location(x=-182.330215, y=-6.870103, z=0.063141)>DfC:0.6784,DfV:1000.00,DfP:998.80,DfM:4.18,DT:35.93
I0901 16:30:24.023248 139765902972672 fitness_value_extractor.py:131] Location(x=-182.569229, y=-7.197218, z=0.066005)>DfC:0.6658,DfV:1000.00,DfP:998.80,DfM:4.16,DT:35.59
I0901 16:30:24.562744 139765902972672 fitness_value_extractor.py:131] Location(x=-182.793320, y=-7.534194, z=0.069348)>DfC:0.6826,DfV:1000.00,DfP:998.80,DfM:4.15,DT:35.25
I0901 16:30:25.411074 139765902972672 fitness_value_extractor.py:131] Location(x=-183.003738, y=-7.880507, z=0.072145)>DfC:0.6612,DfV:1000.00,DfP:998.80,DfM:4.17,DT:34.89
I0901 16:30:25.928003 139765902972672 fitness_value_extractor.py:131] Location(x=-183.195267, y=-8.235142, z=0.073685)>DfC:0.6499,DfV:1000.00,DfP:998.80,DfM:4.21,DT:34.53
I0901 16:30:26.510254 139765902972672 fitness_value_extractor.py:131] Location(x=-183.363144, y=-8.596774, z=0.075470)>DfC:0.6500,DfV:1000.00,DfP:998.80,DfM:4.26,DT:34.16
I0901 16:30:27.010741 139765902972672 fitness_value_extractor.py:131] Location(x=-183.510193, y=-8.965165, z=0.078074)>DfC:0.6399,DfV:1000.00,DfP:998.80,DfM:4.32,DT:33.79
I0901 16:30:27.527948 139765902972672 fitness_value_extractor.py:131] Location(x=-183.634995, y=-9.338903, z=0.080089)>DfC:0.6436,DfV:1000.00,DfP:998.80,DfM:4.40,DT:33.42
I0901 16:30:28.050799 139765902972672 fitness_value_extractor.py:131] Location(x=-183.744385, y=-9.716825, z=0.082225)>DfC:0.6289,DfV:1000.00,DfP:998.80,DfM:4.50,DT:33.04
I0901 16:30:28.481018 139765902972672 fitness_value_extractor.py:131] Location(x=-183.835159, y=-10.098377, z=0.085259)>DfC:0.6270,DfV:1000.00,DfP:998.80,DfM:4.60,DT:32.65
I0901 16:30:28.911273 139765902972672 fitness_value_extractor.py:131] Location(x=-183.914490, y=-10.483409, z=0.087191)>DfC:0.6005,DfV:1000.00,DfP:998.80,DfM:4.73,DT:32.27
I0901 16:30:29.314865 139765902972672 fitness_value_extractor.py:131] Location(x=-183.994370, y=-10.874059, z=0.089019)>DfC:0.5711,DfV:1000.00,DfP:998.80,DfM:4.89,DT:31.87
I0901 16:30:30.039545 139765902972672 fitness_value_extractor.py:131] Location(x=-184.084335, y=-11.273060, z=0.090648)>DfC:0.4920,DfV:1000.00,DfP:998.80,DfM:5.08,DT:31.47
I0901 16:30:30.495180 139765902972672 fitness_value_extractor.py:131] Location(x=-184.184021, y=-11.678543, z=0.091080)>DfC:0.3942,DfV:1000.00,DfP:998.80,DfM:5.32,DT:31.07
I0901 16:30:30.953357 139765902972672 fitness_value_extractor.py:131] Location(x=-184.279358, y=-12.092735, z=0.090828)>DfC:0.3002,DfV:1000.00,DfP:998.80,DfM:5.57,DT:30.65
I0901 16:30:31.422516 139765902972672 fitness_value_extractor.py:131] Location(x=-184.360001, y=-12.515254, z=0.090442)>DfC:0.2216,DfV:1000.00,DfP:998.80,DfM:5.83,DT:30.23
I0901 16:30:31.948162 139765902972672 fitness_value_extractor.py:131] Location(x=-184.423553, y=-12.944486, z=0.090104)>DfC:0.1610,DfV:1000.00,DfP:998.80,DfM:6.11,DT:29.80
I0901 16:30:32.513167 139765902972672 fitness_value_extractor.py:131] Location(x=-184.467529, y=-13.379364, z=0.089838)>DfC:0.1207,DfV:1000.00,DfP:998.80,DfM:6.39,DT:29.37
I0901 16:30:33.079107 139765902972672 fitness_value_extractor.py:131] Location(x=-184.494431, y=-13.820635, z=0.089615)>DfC:0.0977,DfV:1000.00,DfP:998.80,DfM:6.67,DT:28.92
I0901 16:30:33.549136 139765902972672 fitness_value_extractor.py:131] Location(x=-184.507706, y=-14.269221, z=0.089421)>DfC:0.0872,DfV:1000.00,DfP:998.80,DfM:6.97,DT:28.48
I0901 16:30:34.145047 139765902972672 fitness_value_extractor.py:131] Location(x=-184.510269, y=-14.725471, z=0.089259)>DfC:0.0854,DfV:1000.00,DfP:998.80,DfM:7.28,DT:28.02
I0901 16:30:34.660030 139765902972672 fitness_value_extractor.py:131] Location(x=-184.505524, y=-15.189372, z=0.089127)>DfC:0.0891,DfV:1000.00,DfP:998.80,DfM:7.60,DT:27.56
I0901 16:30:35.062328 139765902972672 fitness_value_extractor.py:131] Location(x=-184.497833, y=-15.660678, z=0.089025)>DfC:0.0954,DfV:1000.00,DfP:998.80,DfM:7.94,DT:27.08
I0901 16:30:35.527124 139765902972672 fitness_value_extractor.py:131] Location(x=-184.491104, y=-16.138866, z=0.088951)>DfC:0.1010,DfV:1000.00,DfP:998.80,DfM:8.30,DT:26.61
I0901 16:30:35.966699 139765902972672 fitness_value_extractor.py:131] Location(x=-184.488770, y=-16.623283, z=0.088904)>DfC:0.1031,DfV:1000.00,DfP:998.80,DfM:8.68,DT:26.12
I0901 16:30:36.427630 139765902972672 fitness_value_extractor.py:131] Location(x=-184.491943, y=-17.113657, z=0.088871)>DfC:0.1005,DfV:1000.00,DfP:998.80,DfM:9.08,DT:25.63
I0901 16:30:36.899568 139765902972672 fitness_value_extractor.py:131] Location(x=-184.501068, y=-17.609947, z=0.088845)>DfC:0.0932,DfV:1000.00,DfP:998.80,DfM:9.49,DT:25.14
I0901 16:30:37.281897 139765902972672 fitness_value_extractor.py:131] Location(x=-184.514313, y=-18.112444, z=0.088821)>DfC:0.0830,DfV:1000.00,DfP:998.80,DfM:9.92,DT:24.63
I0901 16:30:37.776385 139765902972672 fitness_value_extractor.py:131] Location(x=-184.529938, y=-18.621302, z=0.088801)>DfC:0.0722,DfV:1000.00,DfP:998.80,DfM:10.37,DT:24.12
I0901 16:30:38.207955 139765902972672 fitness_value_extractor.py:131] Location(x=-184.545273, y=-19.136518, z=0.088787)>DfC:0.0636,DfV:1000.00,DfP:998.80,DfM:10.82,DT:23.61
I0901 16:30:38.669455 139765902972672 fitness_value_extractor.py:131] Location(x=-184.558334, y=-19.657988, z=0.088779)>DfC:0.0584,DfV:1000.00,DfP:998.80,DfM:11.28,DT:23.09
I0901 16:30:39.111989 139765902972672 fitness_value_extractor.py:131] Location(x=-184.567474, y=-20.185553, z=0.088776)>DfC:0.0562,DfV:1000.00,DfP:998.80,DfM:11.76,DT:22.56
I0901 16:30:39.518532 139765902972672 fitness_value_extractor.py:131] Location(x=-184.572189, y=-20.719177, z=0.088775)>DfC:0.0556,DfV:1000.00,DfP:998.80,DfM:12.24,DT:22.03
I0901 16:30:40.024544 139765902972672 fitness_value_extractor.py:131] Location(x=-184.572708, y=-21.258898, z=0.088774)>DfC:0.0556,DfV:1000.00,DfP:998.80,DfM:12.73,DT:21.49
I0901 16:30:40.452617 139765902972672 fitness_value_extractor.py:131] Location(x=-184.570053, y=-21.804796, z=0.088771)>DfC:0.0559,DfV:1000.00,DfP:998.80,DfM:13.22,DT:20.94
I0901 16:30:40.847407 139765902972672 fitness_value_extractor.py:131] Location(x=-184.565750, y=-22.356909, z=0.088767)>DfC:0.0566,DfV:1000.00,DfP:998.80,DfM:13.73,DT:20.39
I0901 16:30:41.198990 139765902972672 fitness_value_extractor.py:131] Location(x=-184.561310, y=-22.915083, z=0.088768)>DfC:0.0577,DfV:1000.00,DfP:998.80,DfM:14.24,DT:19.83
I0901 16:30:41.539625 139765902972672 fitness_value_extractor.py:131] Location(x=-184.558136, y=-23.478291, z=0.088787)>DfC:0.0588,DfV:1000.00,DfP:998.80,DfM:14.77,DT:19.27
I0901 16:30:41.857478 139765902972672 fitness_value_extractor.py:131] Location(x=-184.557022, y=-24.044636, z=0.088842)>DfC:0.0592,DfV:1000.00,DfP:998.80,DfM:15.30,DT:18.70
I0901 16:30:42.286113 139765902972672 fitness_value_extractor.py:131] Location(x=-184.558395, y=-24.609083, z=0.088982)>DfC:0.0588,DfV:1000.00,DfP:998.80,DfM:15.83,DT:18.14
I0901 16:30:42.647306 139765902972672 fitness_value_extractor.py:131] Location(x=-184.561722, y=-25.166916, z=0.089193)>DfC:0.0578,DfV:1000.00,DfP:998.80,DfM:16.35,DT:17.58
I0901 16:30:43.059028 139765902972672 fitness_value_extractor.py:131] Location(x=-184.566238, y=-25.714592, z=0.089439)>DfC:0.0567,DfV:1000.00,DfP:998.80,DfM:16.87,DT:17.03
I0901 16:30:43.409748 139764267214592 fitness_value_extractor.py:131] Location(x=-184.571106, y=-26.252468, z=0.089640)>DfC:0.0559,DfV:1000.00,DfP:998.80,DfM:17.39,DT:16.49
I0901 16:30:43.838870 139765408065280 fitness_value_extractor.py:131] Location(x=-184.575272, y=-26.784941, z=0.089720)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:17.90,DT:15.96
I0901 16:30:44.223800 139765408065280 fitness_value_extractor.py:131] Location(x=-184.578079, y=-27.314638, z=0.089718)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:18.40,DT:15.43
I0901 16:30:44.678723 139765408065280 fitness_value_extractor.py:131] Location(x=-184.579193, y=-27.843092, z=0.089671)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:18.91,DT:14.90
I0901 16:30:45.165293 139765408065280 fitness_value_extractor.py:131] Location(x=-184.578751, y=-28.372196, z=0.089589)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:19.42,DT:14.37
I0901 16:30:45.557479 139765408065280 fitness_value_extractor.py:131] Location(x=-184.577087, y=-28.903446, z=0.089489)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:19.93,DT:13.84
I0901 16:30:45.898068 139765408065280 fitness_value_extractor.py:131] Location(x=-184.574936, y=-29.437933, z=0.089385)>DfC:0.0556,DfV:1000.00,DfP:998.80,DfM:20.44,DT:13.31
I0901 16:30:46.363880 139765408065280 fitness_value_extractor.py:131] Location(x=-184.572754, y=-29.972921, z=0.089349)>DfC:0.0558,DfV:1000.00,DfP:998.80,DfM:20.96,DT:12.77
I0901 16:30:46.791984 139765408065280 fitness_value_extractor.py:131] Location(x=-184.571243, y=-30.507528, z=0.089346)>DfC:0.0561,DfV:1000.00,DfP:998.80,DfM:21.48,DT:12.24
I0901 16:30:47.160327 139765408065280 fitness_value_extractor.py:131] Location(x=-184.570541, y=-31.041714, z=0.089351)>DfC:0.0562,DfV:1000.00,DfP:998.80,DfM:22.00,DT:11.71
I0901 16:30:47.454444 139765408065280 fitness_value_extractor.py:131] Location(x=-184.570877, y=-31.575480, z=0.089358)>DfC:0.0562,DfV:1000.00,DfP:998.80,DfM:22.51,DT:11.17
I0901 16:30:47.792989 139765408065280 fitness_value_extractor.py:131] Location(x=-184.571976, y=-32.108837, z=0.089364)>DfC:0.0560,DfV:1000.00,DfP:998.80,DfM:23.03,DT:10.64
I0901 16:30:48.118060 139765408065280 fitness_value_extractor.py:131] Location(x=-184.573608, y=-32.641792, z=0.089368)>DfC:0.0558,DfV:1000.00,DfP:998.80,DfM:23.55,DT:10.11
I0901 16:30:48.401487 139765408065280 fitness_value_extractor.py:131] Location(x=-184.575607, y=-33.174343, z=0.089372)>DfC:0.0556,DfV:1000.00,DfP:998.80,DfM:24.07,DT:9.57
I0901 16:30:48.779645 139765408065280 fitness_value_extractor.py:131] Location(x=-184.577347, y=-33.706493, z=0.089374)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:24.59,DT:9.04
I0901 16:30:49.148869 139765408065280 fitness_value_extractor.py:131] Location(x=-184.578705, y=-34.238243, z=0.089376)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:25.11,DT:8.51
I0901 16:30:49.453793 139765408065280 fitness_value_extractor.py:131] Location(x=-184.579330, y=-34.769581, z=0.089378)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:25.63,DT:7.98
I0901 16:30:49.909336 139765408065280 fitness_value_extractor.py:131] Location(x=-184.579391, y=-35.303963, z=0.089316)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:26.15,DT:7.44
I0901 16:30:50.333582 139765408065280 fitness_value_extractor.py:131] Location(x=-184.578888, y=-35.842720, z=0.089234)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:26.68,DT:6.91
I0901 16:30:50.673179 139765408065280 fitness_value_extractor.py:131] Location(x=-184.578094, y=-36.385906, z=0.089160)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:27.21,DT:6.36
I0901 16:30:51.277389 139765408065280 fitness_value_extractor.py:131] Location(x=-184.577179, y=-36.933495, z=0.089101)>DfC:0.0556,DfV:1000.00,DfP:998.80,DfM:27.75,DT:5.82
I0901 16:30:51.579915 139765416457984 fitness_value_extractor.py:131] Location(x=-184.576492, y=-37.484833, z=0.089068)>DfC:0.0557,DfV:1000.00,DfP:998.80,DfM:28.29,DT:5.26
I0901 16:30:51.999223 139765416457984 fitness_value_extractor.py:131] Location(x=-184.576035, y=-38.038868, z=0.089067)>DfC:0.0557,DfV:1000.00,DfP:998.80,DfM:28.84,DT:4.71
I0901 16:30:52.366854 139765416457984 fitness_value_extractor.py:131] Location(x=-184.576004, y=-38.593536, z=0.089102)>DfC:0.0557,DfV:1000.00,DfP:998.80,DfM:29.38,DT:4.16
I0901 16:30:52.726137 139765416457984 fitness_value_extractor.py:131] Location(x=-184.576263, y=-39.148869, z=0.089147)>DfC:0.0557,DfV:1000.00,DfP:998.80,DfM:29.93,DT:3.60
I0901 16:30:53.048984 139765416457984 fitness_value_extractor.py:131] Location(x=-184.576813, y=-39.701641, z=0.089233)>DfC:0.0557,DfV:1000.00,DfP:998.80,DfM:30.47,DT:3.05
I0901 16:30:53.414263 139765416457984 fitness_value_extractor.py:131] Location(x=-184.577728, y=-40.253036, z=0.089295)>DfC:0.0556,DfV:1000.00,DfP:998.80,DfM:31.01,DT:2.50
I0901 16:30:53.800946 139765416457984 fitness_value_extractor.py:131] Location(x=-184.578629, y=-40.802967, z=0.089345)>DfC:0.0556,DfV:1000.00,DfP:998.80,DfM:31.56,DT:1.95
I0901 16:30:54.103570 139765928150784 fitness_value_extractor.py:131] Location(x=-184.579468, y=-41.350887, z=0.089388)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:32.10,DT:1.40
I0901 16:30:54.387027 139765928150784 fitness_value_extractor.py:131] Location(x=-184.579971, y=-41.897102, z=0.089420)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:32.64,DT:0.86
I0901 16:30:54.746089 139765928150784 fitness_value_extractor.py:131] Location(x=-184.580231, y=-42.441307, z=0.089447)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:33.16,DT:0.31
I0901 16:30:55.072705 139765928150784 fitness_value_extractor.py:129] Location(x=-184.580109, y=-42.983818, z=0.089463)>DfC:0.0555,DfV:1000.00,DfP:998.80,DfM:32.62,DT:-0.23
